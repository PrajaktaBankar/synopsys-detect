{"version":3,"sources":["webpack:///src/assets/data/hpt-form-fields.ts","webpack:///src/app/routes/training/training.service.ts","webpack:///src/app/routes/text-analysis/text-analysis.service.ts"],"names":["HPT_FORM_FIELDS","algoName","fields","type","name","label","required","bo_data","data","gs_data","validators","radio_btns","radio_label","value","isBOSupported","placeholder_text","None","isGridSearchSupported","select_options","option_label","sub_ui_elemets","display_if","display_for","disable","TrainingService","_http","serverBaseUrl","projectId","isEdaRequired","this","get","reqObj","post","responseType","trainingId","isLastTraining","delete","modelId","TextAnalysisService","featureName","fileName","params","experimentId","taExperimentId","inputData","taskConfig","renderType","sentimentAnalysisParams","summarizeParam","configData","wordEmbeddingParam","dataConfig"],"mappings":"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","file":"x","sourcesContent":["/**\n * Exports all the form fields array for generating dynamic form\n */\nexport const HPT_FORM_FIELDS: Array<any> = [\n  {\n    algoName: 'Rapids_XGBoost Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'eta',\n        label: 'eta',\n        required: false,\n        bo_data: '0,1',\n        data: 0.3,\n        gs_data: '0.3,0.5,0.7',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'gamma',\n        label: 'gamma',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,9.0',\n        data: 0,\n        gs_data: '0.5,1,1.5',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 6,\n        gs_data: '3,4,5,6,7',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_child_weight',\n        label: 'min_child_weight',\n        required: false,\n        bo_data: '1,8',\n        data: 1,\n        gs_data: '1,4,8',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_delta_step',\n        label: 'max_delta_step',\n        required: false,\n        bo_data: '0,8',\n        data: 0,\n        gs_data: '0,4,8',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'subsample',\n        label: 'subsample',\n        required: false,\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'radio',\n        name: 'sampling_method',\n        label: 'sampling_method',\n        required: true,\n        data: true,\n        radio_btns: [\n          { radio_label: 'uniform', value: true },\n          { radio_label: 'gradient_based', value: false },\n        ],\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'colsample_bytree',\n        label: 'colsample_bytree',\n        required: false,\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'colsample_bylevel',\n        label: 'colsample_bylevel',\n        required: false,\n        bo_data: '0.0, 1.0',\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'colsample_bynode',\n        label: 'colsample_bynode',\n        required: false,\n        bo_data: '0.0, 1.0',\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'lambda',\n        label: 'lambda',\n        required: false,\n        data: 1,\n        gs_data: '1,2',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '0.1,5.0',//'0.1,9.0',\n        data: 0,\n        gs_data: '0,1,2',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'scale_pos_weight',\n        label: 'scale_pos_weight',\n        required: false,\n        bo_data: '0.1,5.0',//'0.1,9.0',\n        data: 1,\n        gs_data: '0,1,2',\n        validators: {\n          \"required\": false,\n        }\n      },\n\n      {\n        type: 'radio',\n        name: 'tree_method',\n        label: 'tree_method',\n        required: false,\n        data: true,\n        radio_btns: [{ radio_label: 'gpu_hist', value: true }],\n        validators: {\n          \"required\": false,\n        }\n      },\n\n      {\n        type: 'radio',\n        name: 'silent',\n        label: 'silent',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'radio',\n        name: 'grow_policy',\n        label: 'grow_policy',\n        required: true,\n        data: true,\n        radio_btns: [\n          { radio_label: 'lossguide', value: true },\n          { radio_label: 'depthwise', value: false },\n        ],\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_leaves',\n        label: 'max_leaves',\n        required: false,\n        bo_data: '0,256',\n        data: 0,\n        gs_data: '0,16,64,256',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'n_gpus',\n        label: 'n_gpus',\n        required: false,\n        bo_data: '1',\n        data: 1,\n        gs_data: '1',\n        validators: {\n          \"required\": false,\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Rapids_XGBoost Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'eta',\n        label: 'eta',\n        required: false,\n        bo_data: '0,1',\n        data: 0.3,\n        gs_data: '0.3,0.5,0.7',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'gamma',\n        label: 'gamma',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,9.0',\n        data: 0,\n        gs_data: '0.5,1,1.5',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 6,\n        gs_data: '3,4,5,6,7',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_child_weight',\n        label: 'min_child_weight',\n        required: false,\n        bo_data: '1,8',\n        data: 1,\n        gs_data: '1,4,8',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_delta_step',\n        label: 'max_delta_step',\n        required: false,\n        bo_data: '0,8',\n        data: 0,\n        gs_data: '0,4,8',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'subsample',\n        label: 'subsample',\n        required: false,\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'radio',\n        name: 'sampling_method',\n        label: 'sampling_method',\n        required: true,\n        data: true,\n        radio_btns: [\n          { radio_label: 'uniform', value: true },\n          { radio_label: 'gradient_based', value: false },\n        ],\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'colsample_bytree',\n        label: 'colsample_bytree',\n        required: false,\n        bo_data: '0.0, 1.0',\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'colsample_bylevel',\n        label: 'colsample_bylevel',\n        required: false,\n        bo_data: '0.0, 1.0',\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'colsample_bynode',\n        label: 'colsample_bynode',\n        required: false,\n        bo_data: '0.0, 1.0',\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'lambda',\n        label: 'lambda',\n        required: false,\n        data: 1,\n        gs_data: '1,2',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '0.1,5.0',//'0.1,9.0',\n        data: 0,\n        gs_data: '0,1,2',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'scale_pos_weight',\n        label: 'scale_pos_weight',\n        required: false,\n        bo_data: '0.1,5.0',//'0.1,9.0',\n        data: 1,\n        gs_data: '0,1,2',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'radio',\n        name: 'tree_method',\n        label: 'tree_method',\n        required: false,\n        data: true,\n        radio_btns: [{ radio_label: 'gpu_hist', value: true }],\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'radio',\n        name: 'silent',\n        label: 'silent',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'radio',\n        name: 'grow_policy',\n        label: 'grow_policy',\n        required: true,\n        data: true,\n        radio_btns: [\n          { radio_label: 'lossguide', value: true },\n          { radio_label: 'depthwise', value: false },\n        ],\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_leaves',\n        label: 'max_leaves',\n        required: false,\n        bo_data: '0,256',\n        data: 0,\n        gs_data: '0,16,64,256',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'number',\n        name: 'n_gpus',\n        label: 'n_gpus',\n        required: false,\n        bo_data: '1',\n        data: 1,\n        gs_data: '1',\n        validators: {\n          \"required\": false,\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'CUML_ARIMA',\n    fields: [\n      {\n        type: 'text',\n        name: 'order',\n        label: 'order(p,d,q)',\n        placeholder_text: '',\n        required: false,\n        data: '1,1,1',\n        gs_data: '',\n        validators: {\n          \"required\": false,\n        }\n      },\n      {\n        type: 'text',\n        name: 'seasonal_order',\n        label: 'seasonal order(P,D,Q,s)',\n        placeholder_text: '',\n        required: false,\n        data: '0,0,0,0',\n        gs_data: '',\n        validators: {\n          \"required\": false,\n\n        }\n      },\n      {\n        type: 'radio',\n        name: 'fit_intercept',\n        label: 'fit_intercept',\n        required: false,\n        data: null,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false, None: null },\n        ],\n        validators: {\n          \"required\": false,\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'CUML_Random Forest Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: false,\n        bo_data: '100,200',\n        data: 100,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'accuracy_metric',\n        label: 'accuracy_metric',\n        required: false,\n        data: 'mean_ae',\n        radio_btns: [\n          { radio_label: 'mse', value: 'mse' },\n          { radio_label: 'median_ae', value: 'median_ae' },\n          { radio_label: 'mean_ae', value: 'mean_ae' },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_features',\n        label: 'max_features',\n        required: false,\n        data: 'auto',\n        gs_data: 'auto,sqrt,log2',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '3,16',\n        data: 16,\n        gs_data: '3,6,9,12,16',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'n_bins',\n        label: 'n_bins',\n        required: false,\n        bo_data: '2,16',\n        data: 16,\n        gs_data: '2,8,16',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_rows_per_node',\n        label: 'min_rows_per_node',\n        required: false,\n        bo_data: '2,8',\n        data: 2,\n        gs_data: '2,4,8',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_impurity_decrease',\n        label: 'min_impurity_decrease',\n        required: false,\n        bo_data: '0.02,0.2',\n        data: 0,\n        gs_data: '0,0.1,0.2',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_leaves',\n        label: 'max_leaves',\n        required: false,\n        bo_data: '-1, 8',\n        data: -1,\n        gs_data: '-1,2,4,8',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'split_algo',\n        label: 'split_algo',\n        required: false,\n        data: 1,\n        radio_btns: [\n          { radio_label: 'HIST', value: 0 },\n          { radio_label: 'GLOBAL_QUANTILE', value: 1 },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'split_criterion',\n        label: 'split_criterion',\n        required: false,\n        data: 2,\n        radio_btns: [\n          { radio_label: 'MSE', value: 2 },\n          { radio_label: 'MAE', value: 3 },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'bootstrap',\n        label: 'bootstrap',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'bootstrap_features',\n        label: 'bootstrap_features',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'quantile_per_tree',\n        label: 'quantile_per_tree',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'CUML_Random Forest Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: false,\n        bo_data: '100,200',\n        data: 100,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_features',\n        label: 'max_features',\n        required: false,\n        data: 'auto',\n        gs_data: 'auto,sqrt,log2',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '3,16',\n        data: 16,\n        gs_data: '3,6,9,12,16',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'n_bins',\n        label: 'n_bins',\n        required: false,\n        bo_data: '2,16',\n        data: 16,\n        gs_data: '2,8,16',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_rows_per_node',\n        label: 'min_rows_per_node',\n        required: false,\n        bo_data: '2,8',\n        data: 2,\n        gs_data: '2,4,8',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_impurity_decrease',\n        label: 'min_impurity_decrease',\n        required: false,\n        bo_data: '0.02,0.2',\n        data: 0,\n        gs_data: '0,0.1,0.2',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_leaves',\n        label: 'max_leaves',\n        required: false,\n        bo_data: '-1, 8',\n        data: -1,\n        gs_data: '-1,2,4,8',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'split_algo',\n        label: 'split_algo',\n        required: false,\n        data: 1,\n        radio_btns: [\n          { radio_label: 'HIST', value: 0 },\n          { radio_label: 'GLOBAL_QUANTILE', value: 1 },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'split_criterion',\n        label: 'split_criterion',\n        required: false,\n        data: 0,\n        radio_btns: [\n          { radio_label: 'GINI', value: 0 },\n          { radio_label: 'ENTROPY', value: 1 },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'bootstrap',\n        label: 'bootstrap',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'bootstrap_features',\n        label: 'bootstrap_features',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'quantile_per_tree',\n        label: 'quantile_per_tree',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'CUML_Linear Regression',\n    fields: [\n      {\n        type: 'text',\n        name: 'algorithm',\n        label: 'algorithm',\n        required: false,\n        data: 'eig',\n        gs_data: 'eig,svd',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'radio',\n        name: 'fit_intercept',\n        label: 'fit_intercept',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'CUML_Logistic Regression',\n    fields: [\n      {\n        type: 'text',\n        name: 'penalty',\n        label: 'penalty',\n        required: false,\n        data: 'l2',\n        gs_data: 'none,l1,l2,elasticnet',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.01,1',\n        data: 0.0001,\n        gs_data: '0.01,0.001,0.0001',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'C',\n        label: 'C',\n        required: false,\n        bo_data: '1,5',//'1,20',\n        data: 1.0,\n        gs_data: '1.0,10.0,100.0',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '500,1000',\n        data: 1000,\n        gs_data: '500, 750, 1000',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'linesearch_max_iter',\n        label: 'linesearch_max_iter',\n        required: false,\n        bo_data: '1,50',\n        data: 50,\n        gs_data: '10,20,50',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'number',\n        name: 'l1_ratio',\n        label: 'l1_ratio',\n        required: false,\n        bo_data: '0,1',\n        data: null,\n        gs_data: 'null,0.1,0.5,1.0',\n        validators: {\n          \"required\": false\n        }\n      },\n      {\n        type: 'text',\n        name: 'solver',\n        label: 'solver',\n        required: false,\n        data: 'qn',\n        gs_data: 'qn,lbfgs,owl',\n        validators: {\n          \"required\": false\n        }\n      },\n\n      {\n        type: 'radio',\n        name: 'fit_intercept',\n        label: 'fit_intercept',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": false\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'Linear Regression',\n    fields: [\n      //       {\n      //         type: \"radio\",\n      //         name: \"fit_intercept\",\n      //         label: \"fit_intercept\",\n      //         required: false,\n      //         data: true,\n      //         radio_btns: [\n      //           { radio_label: \"true\", value: true },\n      //           { radio_label: \"false\", value: false },\n      //         ],\n      //       },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"copy_X\",\n      //   label: \"copy_X\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'radio',\n        name: 'positive',\n        label: 'positive',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n    ],\n    isBOSupported: false,\n    isGridSearchSupported: false,\n  },\n  {\n    algoName: 'Polynomial Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'degree',\n        label: 'degree',\n        required: false,\n        bo_data: '2,3', //'2,5',\n        data: 2,\n        gs_data: '2,3', //'2,3,4',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'interaction_only',\n        label: 'interaction_only',\n        required: true,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'radio',\n        name: 'include_bias',\n        label: 'include_bias',\n        required: true,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'SV Regression',\n    fields: [\n      { type: 'number', name: 'C', label: 'C', required: false, data: 1.0 },\n      {\n        type: 'number',\n        name: 'epsilon',\n        label: 'epsilon',\n        required: false,\n        data: 0.1,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'kernel',\n        label: 'kernel',\n        required: true,\n        data: 'rbf',\n        select_options: [\n          { option_label: 'rbf', value: 'rbf' },\n          { option_label: 'linear', value: 'linear' },\n          { option_label: 'poly', value: 'poly' },\n          { option_label: 'sigmoid', value: 'sigmoid' },\n        ],\n        placeholder_text: 'Select kernal',\n        sub_ui_elemets: [\n          {\n            type: 'text',\n            name: 'gamma',\n            label: 'gamma',\n            required: false,\n            display_if: 'rbf',\n            data: 5,\n            display_for: ['rbf', 'poly', 'sigmoid'],\n          },\n        ],\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+|[0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'degree',\n        label: 'degree',\n        required: false,\n        data: 3,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'coef0',\n        label: 'coef0',\n        required: false,\n        data: 0.0,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'shrinking',\n        label: 'shrinking',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'number', name: 'tol', label: 'tol', required: false, data: 0.0, validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'number',\n        name: 'cache_size',\n        label: 'cache_size',\n        required: false,\n        data: 0,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        data: -1,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Decision Tree Regression',\n    fields: [\n      {\n        type: 'select',\n        name: 'criterion',\n        label: 'criterion',\n        required: false,\n        data: 'squared_error',\n        gs_data: ['squared_error', 'friedman_mse', 'absolute_error'],\n        select_options: [\n          { option_label: 'squared_error', value: 'squared_error' },\n          { option_label: 'friedman_mse', value: 'friedman_mse' },\n          { option_label: 'absolute_error', value: 'absolute_error' },\n          { option_label: 'poisson', value: 'poisson' },\n        ],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(_[a-zA-Z]+)*(,[a-zA-Z]+(_[a-zA-Z]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'splitter',\n        label: 'splitter',\n        required: true,\n        data: 'best',\n        gs_data: ['best', 'random'],\n        select_options: [\n          { option_label: 'best', value: 'best' },\n          { option_label: 'random', value: 'random' },\n        ],\n        placeholder_text: 'Select splitter',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        data: 'None',\n        placeholder_text: 'Some value',\n        gs_data: '1.0,2.0',//'1.0,2.0,3.0,4.0,5.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_split',\n        label: 'min_samples_split',\n        required: false,\n        bo_data: '0.1,0.2',//'0.1,0.5',\n        data: 2,\n        gs_data: '0.1,0.2', //'0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_leaf',\n        label: 'min_samples_leaf',\n        required: false,\n        bo_data: '0.1,0.2',//'0.1,0.5',\n        data: 1,\n        gs_data: '0.1,0.2',//'0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_weight_fraction_leaf',\n        label: 'min_weight_fraction_leaf',\n        required: false,\n        bo_data: '0.1,0.2', //'0.1,0.4',\n        data: 0,\n        gs_data: '0,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_features',\n        label: 'max_features',\n        required: false,\n        data: 'None',\n        gs_data: 'None,auto,sqrt,log2',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+([0-9]+)*(,[a-zA-Z]+([0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_leaf_nodes',\n        label: 'max_leaf_nodes',\n        required: false,\n        bo_data: '2,3',//'2,10',\n        data: 'None',\n        gs_data: 'None, 5',//'None, 5, 10, 15',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*|None(, [0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_impurity_decrease',\n        label: 'min_impurity_decrease',\n        required: false,\n        data: 0,\n        gs_data: '0,0.1',//'0,0.1,0.2',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"presort\",\n      //   label: \"presort\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Random Forest Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: false,\n        bo_data: '100,200', //'100,900',\n        data: 10,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'criterion',\n        label: 'criterion',\n        required: true,\n        data: 'squared_error',\n        gs_data: ['squared_error', 'absolute_error', 'poisson'],\n        select_options: [\n          { option_label: 'squared_error', value: 'squared_error' },\n          { option_label: 'absolute_error', value: 'absolute_error' },\n          { option_label: 'poisson', value: 'poisson' },\n        ],\n        placeholder_text: 'Select criterion',\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_features',\n        label: 'max_features',\n        required: false,\n        data: 'auto',\n        gs_data: 'None,auto,sqrt,log2',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+([0-9]+)*(,[a-zA-Z]+([0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '3,4', //'3,10',\n        data: 'None',\n        gs_data: '1.0,2.0',//'1.0,2.0,3.0,4.0,5.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_split',\n        label: 'min_samples_split',\n        required: false,\n        bo_data: '0.1,0.2', //'0.1,0.5',\n        data: 2,\n        gs_data: '0.1,0.2',//'0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_leaf',\n        label: 'min_samples_leaf',\n        required: false,\n        bo_data: '0.1,0.2', //'0.1,0.5',\n        data: 1,\n        gs_data: '0.1,0.2', //'0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_weight_fraction_leaf',\n        label: 'min_weight_fraction_leaf',\n        required: false,\n        bo_data: '0.1,0.2', //'0.1,0.4',\n        data: 0,\n        gs_data: '0,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_leaf_nodes',\n        label: 'max_leaf_nodes',\n        required: false,\n        bo_data: '5,7',//'5,15',\n        data: 'None',\n        gs_data: 'None,5', //'None,5,10,15',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_impurity_decrease',\n        label: 'min_impurity_decrease',\n        required: false,\n        bo_data: '0.02,0.1', //'0.02,0.2',\n        data: 0,\n        gs_data: '0,0.1,0.2',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"oob_score\",\n      //   label: \"oob_score\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"warm_start\",\n      //   label: \"warm_start\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'KNN Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'n_neighbors',\n        label: 'n_neighbors',\n        required: false,\n        bo_data: '3,5', //'3,10',\n        data: 5,\n        gs_data: '3,5,7',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'weights',\n        label: 'weights',\n        required: true,\n        data: 'uniform',\n        gs_data: ['uniform', 'distance'],\n        select_options: [\n          { option_label: 'uniform', value: 'uniform' },\n          { option_label: 'distance', value: 'distance' },\n        ],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'algorithm',\n        label: 'algorithm',\n        required: true,\n        data: 'auto',\n        gs_data: ['auto', 'ball_tree', 'kd_tree', 'brute'],\n        select_options: [\n          { option_label: 'auto', value: 'auto' },\n          { option_label: 'ball_tree', value: 'ball_tree' },\n          { option_label: 'kd_tree', value: 'kd_tree' },\n          { option_label: 'brute', value: 'brute' },\n        ],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(_[a-zA-Z]+)*(,[a-zA-Z]+(_[a-zA-Z]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'leaf_size',\n        label: 'leaf_size',\n        required: false,\n        bo_data: '5,7',//'5,20',\n        data: 30,\n        gs_data: '25,30,35',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'p',\n        label: 'p',\n        required: false,\n        bo_data: '1,3',//'1,5',\n        data: 2,\n        gs_data: '2,3,4',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'metric',\n        label: 'metric',\n        required: false,\n        data: 'minkowski',\n        gs_data: 'minkowski,euclidean,manhattan',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'SVM Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'C',\n        label: 'C',\n        required: false,\n        bo_data: '0.1,1',//'0.1,10',\n        data: '1.0',\n        gs_data: '1,10',//'1,10,100',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'kernel',\n        label: 'kernel',\n        required: true,\n        data: 'rbf',\n        gs_data: ['linear', 'poly', 'rbf', 'sigmoid'],\n        select_options: [\n          { option_label: 'rbf', value: 'rbf' },\n          { option_label: 'linear', value: 'linear' },\n          { option_label: 'poly', value: 'poly' },\n          { option_label: 'sigmoid', value: 'sigmoid' },\n        ],\n        placeholder_text: 'Select kernal',\n        sub_ui_elemets: [\n          {\n            type: 'text',\n            name: 'gamma',\n            label: 'gamma',\n            required: false,\n            display_if: 'rbf',\n            data: 5,\n            display_for: ['rbf', 'poly', 'sigmoid'],\n          },\n        ],\n        validators: {\n          \"required\": true,\n        }\n      },\n      {\n        type: 'number',\n        name: 'degree',\n        label: 'degree',\n        required: false,\n        bo_data: '3,5', //'3,7',\n        data: 3,\n        gs_data: '3,5',//'3,5,7',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'gamma',\n        label: 'gamma',\n        required: false,\n        data: 'scale',\n        bo_data: '0.0001,0.001',//'0.0001,0.01',\n        gs_data: '0.0001,0.001,0.01',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(, [0-9]+(\\.[0-9]+)*)*(,[0-9]+(\\.[0-9]+)*)*|[a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'coef0',\n        label: 'coef0',\n        required: false,\n        data: '0.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        data: 0.0001,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        data: 10,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'SVM Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'C',\n        label: 'C',\n        required: false,\n        bo_data: '0.1,1.0', //'0.1,10',\n        data: '1.0',\n        gs_data: '1,10',//'1,10,100',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'kernel',\n        label: 'kernel',\n        required: true,\n        data: 'rbf',\n        gs_data: ['linear', 'poly', 'rbf', 'sigmoid'],\n        select_options: [\n          { option_label: 'rbf', value: 'rbf' },\n          { option_label: 'linear', value: 'linear' },\n          { option_label: 'poly', value: 'poly' },\n          { option_label: 'sigmoid', value: 'sigmoid' },\n        ],\n        placeholder_text: 'Select kernal',\n        sub_ui_elemets: [\n          {\n            type: 'text',\n            name: 'gamma',\n            label: 'gamma',\n            required: false,\n            display_if: 'rbf',\n            data: 5,\n            display_for: ['rbf', 'poly', 'sigmoid'],\n          },\n        ],\n        validators: {\n          \"required\": true,\n        }\n      },\n      {\n        type: 'number',\n        name: 'degree',\n        label: 'degree',\n        required: false,\n        bo_data: '3,5',//'3,7',\n        data: 3,\n        gs_data: '3,5,7',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'gamma',\n        label: 'gamma',\n        required: false,\n        data: 'scale',\n        bo_data: '0.0001,0.001', //'0.0001,0.01',\n        gs_data: '0.0001,0.001,0.01',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|[a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'coef0',\n        label: 'coef0',\n        required: false,\n        data: '0.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        data: 0.0001,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        data: 10,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Logistic Regression',\n    fields: [\n      {\n        type: 'text',\n        name: 'penalty',\n        label: 'penalty',\n        required: false,\n        data: 'l2',\n        gs_data: 'None,l2',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+([0-9]+)*(,[a-zA-Z]+([0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.01,0.1', //'0.01,1',\n        data: 0.0001,\n        gs_data: '0.001,0.01',//'0.01,0.001,0.0001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'C',\n        label: 'C',\n        required: false,\n        bo_data: '1,3',//'1,20',\n        data: 1.0,\n        gs_data: '1.0,10.0', //'1.0,10.0,100.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Gaussian NB Classification',\n    fields: [\n      {\n        type: 'text',\n        name: 'priors',\n        label: 'priors',\n        required: false,\n        data: 'None',\n        gs_data: '0.1,0.9,1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None)$\"\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'Random Forest Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: false,\n        bo_data: '50,100', //'50,200',\n        data: 10,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'criterion',\n        label: 'criterion',\n        required: true,\n        data: 'gini',\n        gs_data: ['gini', 'entropy'],\n        select_options: [\n          { option_label: 'gini', value: 'gini' },\n          { option_label: 'entropy', value: 'entropy' },\n        ],\n        placeholder_text: 'Select criterion',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_features',\n        label: 'max_features',\n        required: false,\n        data: 'auto',\n        gs_data: 'None,auto,sqrt,log2',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-z]+([0-9]+)*(,[a-zA-Z]+([0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '1,3',//'1,5',\n        data: 'None',\n        gs_data: '1.0,2.0', //'1.0, 2.0, 3.0, 4.0, 5.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_split',\n        label: 'min_samples_split',\n        required: false,\n        bo_data: '0.1,0.2', //'0.1,0.5',\n        data: 2,\n        gs_data: '0.1,0.2', //'0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_leaf',\n        label: 'min_samples_leaf',\n        required: false,\n        bo_data: '0.1,0.2', //'0.1,0.5',\n        data: 1,\n        gs_data: '0.1,0.2', //'0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_weight_fraction_leaf',\n        label: 'min_weight_fraction_leaf',\n        required: false,\n        bo_data: '0,0.2', //'0,0.5',\n        data: 0,\n        gs_data: '0,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_leaf_nodes',\n        label: 'max_leaf_nodes',\n        required: false,\n        data: 'None',\n        gs_data: 'None,5,10,15',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_impurity_decrease',\n        label: 'min_impurity_decrease',\n        required: false,\n        data: 0,\n        gs_data: '0,0.1', //'0,0.1,0.2',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'bootstrap',\n        label: 'bootstrap',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"oob_score\",\n      //   label: \"oob_score\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"warm_start\",\n      //   label: \"warm_start\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Decision Tree Classification',\n    fields: [\n      {\n        type: 'select',\n        name: 'criterion',\n        label: 'criterion',\n        required: true,\n        data: 'gini',\n        gs_data: ['gini', 'entropy'],\n        select_options: [\n          { option_label: 'gini', value: 'gini' },\n          { option_label: 'entropy', value: 'entropy' },\n        ],\n        placeholder_text: 'Select criterion',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)*$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'splitter',\n        label: 'splitter',\n        required: true,\n        data: 'best',\n        gs_data: ['best', 'random'],\n        select_options: [\n          { option_label: 'best', value: 'best' },\n          { option_label: 'random', value: 'random' },\n        ],\n        placeholder_text: 'Select splitter',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        data: 'None',\n        gs_data: '1.0,2.0', //'1.0,2.0,3.0,4.0,5.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_split',\n        label: 'min_samples_split',\n        required: false,\n        bo_data: '0.1,0.2', //'0.1,0.5',\n        data: 2,\n        gs_data: '0.1,0.2', //'0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_leaf',\n        label: 'min_samples_leaf',\n        required: false,\n        bo_data: '0.1,0.2', //'0.1,0.5',\n        data: 1,\n        gs_data: '0.1,0.2', //'0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_weight_fraction_leaf',\n        label: 'min_weight_fraction_leaf',\n        required: false,\n        bo_data: '0.1,0.2', //'0.1,0.4',\n        data: 0,\n        gs_data: '0,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_features',\n        label: 'max_features',\n        required: false,\n        data: 'None',\n        gs_data: 'None,auto,sqrt,log2',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-z]+([0-9]+)*(,[a-zA-Z]+([0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_leaf_nodes',\n        label: 'max_leaf_nodes',\n        required: false,\n        bo_data: '2,4', //'2,10',\n        data: 'None',\n        gs_data: 'None,5,10,15',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_impurity_decrease',\n        label: 'min_impurity_decrease',\n        required: false,\n        data: 0,\n        gs_data: '0,0.1,0.2',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"presort\",\n      //   label: \"presort\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'SGD Regression',\n    fields: [\n      {\n        type: 'select',\n        name: 'loss',\n        label: 'loss',\n        required: true,\n        data: 'squared_error',\n        gs_data: ['squared_error', 'huber', 'epsilon_insensitive', 'squared_epsilon_insensitive'],\n        select_options: [\n          { option_label: 'huber', value: 'huber' },\n          { option_label: 'squared_error', value: 'squared_error' },\n          { option_label: 'epsilon_insensitive', value: 'epsilon_insensitive' },\n          {\n            option_label: 'squared_epsilon_insensitive',\n            value: 'squared_epsilon_insensitive',\n          },\n        ],\n        placeholder_text: 'Select loss',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(_[a-zA-Z]+)*(,[a-zA-Z]+(_[a-zA-Z]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'penalty',\n        label: 'penalty',\n        required: true,\n        data: 'l2',\n        gs_data: ['None', 'l2', 'l1', 'elasticnet'],\n        select_options: [\n          { option_label: 'None', value: 'None' },\n          { option_label: 'l2', value: 'l2' },\n          { option_label: 'l1', value: 'l1' },\n          { option_label: 'elasticnet', value: 'elasticnet' },\n        ],\n        placeholder_text: 'Select penalty',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+([0-9]+)*(,[a-zA-Z]+([0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '0.0001,0.001', //'0.0001, 1.0',\n        data: 0.0001,\n        gs_data: '1.0E-4, 1.0E-5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|([0-9]+(\\.[0-9]+)*E-[0-9]+(\\.[0-9]+)*)(, ([0-9]+(\\.[0-9]+)*E-[0-9]+(\\.[0-9]+)*)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'l1_ratio',\n        label: 'l1_ratio',\n        required: false,\n        bo_data: '0.0,1.0',\n        data: 0.15,\n        gs_data: '0.15,0.20',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(, [0-9]+(\\.[0-9]+)*)*|[0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'radio',\n        name: 'early_stopping',\n        label: 'early_stopping',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'number',\n        name: 'validation_fraction',\n        label: 'validation_fraction',\n        required: false,\n        bo_data: '0.1,0.2',//'0.1, 0.9',\n        data: 0.1,\n        gs_data: '0.1,0.001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'n_iter_no_change',\n        label: 'n_iter_no_change',\n        required: false,\n        bo_data: '2,5', //'2, 20',\n        data: 5,\n        gs_data: '5,10',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '3,5', //'3, 20',\n        data: 1000,\n        gs_data: 'None,5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*|None(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        data: '1e-03',\n        gs_data: 'None,0.01',\n        bo_data: '0.018,0.1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'shuffle',\n        label: 'shuffle',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'number',\n        name: 'epsilon',\n        label: 'epsilon',\n        required: false,\n        data: 0.1,\n        gs_data: '0.1,0.01',\n        bo_data: '0.1,1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: true,\n        data: 'invscaling',\n        gs_data: ['constant', 'optimal', 'invscaling', 'adaptive'],\n        select_options: [\n          { option_label: 'constant', value: 'constant' },\n          { option_label: 'optimal', value: 'optimal' },\n          { option_label: 'invscaling', value: 'invscaling' },\n        ],\n        placeholder_text: 'Select solver',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'eta0',\n        label: 'eta0',\n        required: false,\n        data: 0.01,\n        gs_data: '0.001,0.01', //'0.01,0.001',\n        bo_data: '0.01,0.1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"number\",\n      //   name: \"power_t\",\n      //   label: \"power_t\",\n      //   required: false,\n      //   data: 0.25,\n      //   gs_data: \"0.25,0.50\",\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"warm_start\",\n      //   label: \"warm_start\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'radio',\n        name: 'average',\n        label: 'average',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      // {\n      //   type: \"text\",\n      //   name: \"n_iter\",\n      //   label: \"n_iter\",\n      //   required: false,\n      //   data: \"None\",\n      //   gs_data: \"None,10\",\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Ridge Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '0.0,1.0',\n        data: 1.0,\n        gs_data: '1,3,5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"copy_X\",\n      //   label: \"copy_X\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '3,5', //'3,20',\n        data: 1000,\n        gs_data: 'None,5,10',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.0,1.0',\n        data: 0.001,\n        gs_data: '0.001,0.01',//'0.1,0.01,0.001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'solver',\n        label: 'solver',\n        required: true,\n        data: 'auto',\n        gs_data: ['auto', 'svd', 'cholesky', 'lsqr', 'sparse_cg', 'sag', 'saga'],\n        select_options: [\n          { option_label: 'auto', value: 'auto' },\n          { option_label: 'svd', value: 'svd' },\n          { option_label: 'cholesky', value: 'cholesky' },\n          { option_label: 'lsqr', value: 'lsqr' },\n          { option_label: 'sparse_cg', value: 'sparse_cg' },\n          { option_label: 'sag', value: 'sag' },\n          { option_label: 'saga', value: 'saga' },\n        ],\n        placeholder_text: 'Select solver',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(_[a-zA-Z]+)*(,[a-zA-Z]+(_[a-zA-Z]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Lasso Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,2.0',\n        data: 1.0,\n        gs_data: '1,3,5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"precompute\",\n      //   label: \"precompute\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"copy_X\",\n      //   label: \"copy_X\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 100,\n        gs_data: '100,500,1000',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,2.0',\n        data: 0.0001,\n        gs_data: '0.001,0.01',//'0.1,0.01,0.001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"warm_start\",\n      //   label: \"warm_start\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'radio',\n        name: 'positive',\n        label: 'positive',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'select',\n        name: 'selection',\n        label: 'selection',\n        required: true,\n        data: 'cyclic',\n        gs_data: ['cyclic', 'random'],\n        select_options: [\n          { option_label: 'cyclic', value: 'cyclic' },\n          { option_label: 'random', value: 'random' },\n        ],\n        placeholder_text: 'Select selection',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'ElasticNet Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,2.0',\n        data: 1.0,\n        gs_data: '1,3,5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'l1_ratio',\n        label: 'l1_ratio',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,5.0',\n        data: 0.5,\n        gs_data: '0.1,0.2',//'0.1,0.2,0.3',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"precompute\",\n      //   label: \"precompute\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"copy_X\",\n      //   label: \"copy_X\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 1000,\n        gs_data: '100,500,1000',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,2.0',\n        data: 0.0001,\n        gs_data: '0.001,0.01',//'0.001,0.0001,0.00001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"warm_start\",\n      //   label: \"warm_start\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'radio',\n        name: 'positive',\n        label: 'positive',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'text',\n        name: 'selection',\n        label: 'selection',\n        required: false,\n        data: 'cyclic',\n        gs_data: 'cyclic,random',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Passive Aggressive Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'C',\n        label: 'C',\n        required: false,\n        data: 1.0,\n        gs_data: '0.01,0.1',//'0.01,0.1,1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '100,200',//'100,500',\n        data: '1000',\n        gs_data: '100,500,1000',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,5.0',\n        data: 0.001,\n        gs_data: '1e-3,1e-4,1e-5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'shuffle',\n        label: 'shuffle',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'select',\n        name: 'loss',\n        label: 'loss',\n        required: true,\n        data: 'epsilon_insensitive',\n        gs_data: ['epsilon_insensitive', 'squared_epsilon_insensitive'],\n        select_options: [\n          { option_label: 'epsilon_insensitive', value: 'epsilon_insensitive' },\n          {\n            option_label: 'squared_epsilon_insensitive',\n            value: 'squared_epsilon_insensitive',\n          },\n        ],\n        placeholder_text: 'Select loss',\n        validators: {\n          \"required\": true,\n          // \"pattern\": \"^([a-zA-Z]+(_[a-zA-Z]+)*(_[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'epsilon',\n        label: 'epsilon',\n        required: false,\n        data: 0.1,\n        gs_data: '0.01,0.1',//'0.1,0.01,0.001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"warm_start\",\n      //   label: \"warm_start\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'radio',\n        name: 'average',\n        label: 'average',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      // {\n      //   type: \"number\",\n      //   name: \"n_iter\",\n      //   label: \"n_iter\",\n      //   required: false,\n      //   bo_data: \"2,20\",\n      //   data: 0.21,\n      //   gs_data: \"None,10,20\",\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Huber Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'epsilon',\n        label: 'epsilon',\n        required: false,\n        data: 1.35,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        data: 100,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        data: 0.0001,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'warm_start',\n        label: 'warm_start',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'radio',\n        name: 'fit_intercept',\n        label: 'fit_intercept',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        data: 0.006,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'ARD Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'n_iter',\n        label: 'n_iter',\n        required: false,\n        bo_data: '100,200', //'100,500',\n        data: 300,\n        gs_data: '100,300',//'100,300,500',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.0001,0.001',//'0.0001,0.1',\n        data: 0.049,\n        gs_data: '0.001,0.01',//'0.01,0.001,0.0001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'alpha_1',\n        label: 'alpha_1',\n        required: false,\n        bo_data: '0.0,0.1',\n        data: '1e-06',\n        gs_data: '1e-05,1e-06,1e-07',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'alpha_2',\n        label: 'alpha_2',\n        required: false,\n        bo_data: '0.0,0.1',\n        data: '1e-06',\n        gs_data: '1e-05,1e-06,1e-07',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'lambda_1',\n        label: 'lambda_1',\n        required: false,\n        bo_data: '0.0,0.1',\n        data: '1e-06',\n        gs_data: '1e-05,1e-06,1e-07',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'lambda_2',\n        label: 'lambda_2',\n        required: false,\n        bo_data: '0.0,0.1',\n        data: '1e-06',\n        gs_data: '1e-05,1e-06,1e-07',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'threshold_lambda',\n        label: 'threshold_lambda',\n        required: false,\n        bo_data: '1000.0,10000.0',//'1000.0,100000.0',\n        data: '10000.0',\n        gs_data: '1000.0,10000.0,100000.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 10000,\n          \"entMax\": 10000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"compute_score\",\n      //   label: \"compute_score\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"copy_X\",\n      //   label: \"copy_X\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'MLP Regression',\n    fields: [\n      {\n        type: 'text',\n        name: 'hidden_layer_sizes',\n        label: 'hidden_layer_sizes',\n        required: false,\n        bo_data: '50,150',//'50,200',\n        data: 100,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'activation',\n        label: 'activation',\n        required: true,\n        data: 'relu',\n        gs_data: ['identity', 'logistic', 'tanh', 'relu'],\n        select_options: [\n          { option_label: 'identity', value: 'identity' },\n          { option_label: 'logistic', value: 'logistic' },\n          { option_label: 'tanh', value: 'tanh' },\n          { option_label: 'relu', value: 'relu' },\n        ],\n        placeholder_text: 'Select activation',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: true,\n        data: 'constant',\n        gs_data: ['constant', 'invscaling', 'adaptive'],\n        select_options: [\n          { option_label: 'constant', value: 'constant' },\n          { option_label: 'invscaling', value: 'invscaling' },\n          { option_label: 'adaptive', value: 'adaptive' },\n        ],\n        placeholder_text: 'Select learning_rate',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'solver',\n        label: 'solver',\n        required: true,\n        data: 'adam',\n        gs_data: ['lbfgs', 'adam'],\n        select_options: [\n          { option_label: 'lbfgs', value: 'lbfgs' },\n          { option_label: 'sgd', value: 'sgd' },\n          { option_label: 'adam', value: 'adam' },\n        ],\n        placeholder_text: 'Select solver',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'beta_1',\n        label: 'beta_1',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.9,\n        gs_data: '0.9,0.99',//'0.9,0.99,0.999',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'beta_2',\n        label: 'beta_2',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.999,\n        gs_data: '0.9,0.999',//'0.9,0.99,0.999',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'epsilon',\n        label: 'epsilon',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: '1e-08',\n        gs_data: '1e-07,1e-08,1e-09',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.0001,\n        gs_data: '0.0001,0.001',//'0.001,0.0001,0.00001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'learning_rate_init',\n        label: 'learning_rate_init',\n        required: false,\n        bo_data: '0.0,1.0',\n        data: 0.001,\n        gs_data: '0.01,0.001,0.0001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"number\",\n      //   name: \"power_t\",\n      //   label: \"power_t\",\n      //   required: false,\n      //   bo_data: \"0.0,1.0\",\n      //   data: 0.5,\n      //   gs_data: \"0.3,0.5,0.7\",\n      // },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '200,300',\n        data: 200,\n        gs_data: '100,200',//'100,200,500',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'shuffle',\n        label: 'shuffle',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.0,0.9',\n        data: '0.0001',\n        gs_data: '0.0001,0.001',//'0.001,0.0001,0.00001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"warm_start\",\n      //   label: \"warm_start\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'momentum',\n        label: 'momentum',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.9,\n        gs_data: '0.5,0.7',//'0.5,0.7,0.9',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"nesterovs_momentum\",\n      //   label: \"nesterovs_momentum\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'radio',\n        name: 'early_stopping',\n        label: 'early_stopping',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'number',\n        name: 'validation_fraction',\n        label: 'validation_fraction',\n        required: false,\n        bo_data: '0.0,0.9',\n        data: 0.1,\n        gs_data: '0.1,0.2',//'0.1,0.2,0.3',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Kernel Ridge Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '1.0,2.0',//'1.0,5.0',\n        data: 1,\n        gs_data: '1,3',//'1,3,5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'kernel',\n        label: 'kernel',\n        required: true,\n        data: 'linear',\n        gs_data: ['linear', 'poly', 'rbf', 'sigmoid'],\n        select_options: [\n          { option_label: 'linear', value: 'linear' },\n          { option_label: 'poly', value: 'poly' },\n          { option_label: 'rbf', value: 'rbf' },\n          { option_label: 'sigmoid', value: 'sigmoid' },\n        ],\n        placeholder_text: 'Select kernel',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'gamma',\n        label: 'gamma',\n        required: false,\n        bo_data: '0.01,0.1',\n        data: 'None',\n        gs_data: 'None,0.1,0.01',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'degree',\n        label: 'degree',\n        required: false,\n        bo_data: '3,5',//'3,7',\n        data: 3,\n        gs_data: '3,5',//'3,5,7',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'coef0',\n        label: 'coef0',\n        required: false,\n        bo_data: '0.1,2.0',\n        data: 1,\n        gs_data: '0.1,0,1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'LassoLARS Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '1.0,2.0',//'1.0,5.0',\n        data: 1.0,\n        gs_data: '1.0,3.0,5.0',//'1.0,3.0,5.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"select\",\n      //   name: \"precompute\",\n      //   label: \"precompute\",\n      //   required: true,\n      //   data: \"auto\",\n      //   gs_data: [\"auto\", true, false],\n      //   select_options: [\n      //     { option_label: \"auto\", value: \"auto\" },\n      //     { option_label: \"True\", value: true },\n      //     { option_label: \"False\", value: false },\n      //   ],\n      //   placeholder_text: \"Select precompute\",\n      // },\n      {\n        type: 'text',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '100,200',//'100,1000',\n        data: 500,\n        gs_data: '100,500',//'100,500,1000',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'eps',\n        label: 'eps',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,3.0',\n        data: '2.220446049250313e-16',\n        gs_data: '2.220446049250313e-15,2.220446049250313e-16,2.220446049250313e-17',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|([0-9]+(\\.[0-9]+)*e-[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"copy_X\",\n      //   label: \"copy_X\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_path\",\n      //   label: \"fit_path\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'radio',\n        name: 'positive',\n        label: 'positive',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Ridge CV Regression',\n    fields: [\n      {\n        type: 'text',\n        name: 'alphas',\n        label: 'alphas',\n        required: false,\n        bo_data: '0.0001,0.001',//'0.0001,10.0',\n        data: '0.1,10.0',//'0.1, 1.0, 10.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n        // gs_data: '0.0001,0.001,0.01,0.1,1.0,10.0', - disabling because skopt does not support array/list types\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      {\n        type: 'select',\n        name: 'gcv_mode',\n        label: 'gcv_mode',\n        required: true,\n        data: 'auto',\n        gs_data: ['auto', 'svd', 'eigen'],\n        select_options: [\n          { option_label: 'auto', value: 'auto' },\n          { option_label: 'svd', value: 'svd' },\n          { option_label: 'eigen', value: 'eigen' },\n        ],\n        placeholder_text: 'Select gcv_mode',\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'cv',\n        label: 'cv',\n        required: false,\n        bo_data: '5,7',//'5,10',\n        data: 'None',\n        gs_data: '5,7',//'5,7,9',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Bayesian Ridge Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'n_iter',\n        label: 'n_iter',\n        required: false,\n        bo_data: '100,200',//'100,1000',\n        data: 300,\n        gs_data: '100,300',//'100,300,500',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.1, 0.9',//'0.000001, 0.9',\n        data: '1e-03',\n        gs_data: '0.001,0.01',//'0.01,0.001,0.0001',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|[0-9]+(\\.[0-9]+)*(, [0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'alpha_1',\n        label: 'alpha_1',\n        required: false,\n        bo_data: '0.1, 0.9',//'0.000001, 0.9',\n        data: '1e-06',\n        gs_data: '1e-05,1e-06,1e-07',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(, [0-9]+(\\.[0-9]+)*)*|[0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'alpha_2',\n        label: 'alpha_2',\n        required: false,\n        bo_data: '0.1, 0.9',//'0.000001, 0.9',\n        data: '1e-06',\n        gs_data: '1e-05,1e-06,1e-07',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(, [0-9]+(\\.[0-9]+)*)*|[0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'lambda_1',\n        label: 'lambda_1',\n        required: false,\n        bo_data: '0.1, 0.9',//'0.000001, 0.9',\n        data: '1e-06',\n        gs_data: '1e-05,1e-06,1e-07',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(, [0-9]+(\\.[0-9]+)*)*|[0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'lambda_2',\n        label: 'lambda_2',\n        required: false,\n        bo_data: '0.1, 0.9',//'0.000001, 0.9',\n        data: '1e-06',\n        gs_data: '1e-05,1e-06,1e-07',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(, [0-9]+(\\.[0-9]+)*)*|[0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"compute_score\",\n      //   label: \"compute_score\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"copy_X\",\n      //   label: \"copy_X\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'TheilSen Regression',\n    fields: [\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"copy_X\",\n      //   label: \"copy_X\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'max_subpopulation',\n        label: 'max_subpopulation',\n        required: false,\n        bo_data: '100,200',//'100,10000',\n        data: '10000',\n        gs_data: '1000,10000',//'1000,10000,100000',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 10000,\n          \"entMax\": 10000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '100,200',//'100,500',\n        data: 300,\n        gs_data: '100,300',//'100,300,500',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.01, 0.1',//'0.000001, 0.1',\n        data: 0.001,\n        gs_data: '0.001,0.01',//'0.01,0.001,0.0001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*(, [0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'nuSV Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'C',\n        label: 'C',\n        required: false,\n        bo_data: '1,3',//'1,10',\n        data: 1.0,\n        gs_data: '0.001,0.01',//'0.001,0.01,0.1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'nu',\n        label: 'nu',\n        required: false,\n        bo_data: '0.3,0.5', //'0.3,0.9',\n        data: 0.5,\n        gs_data: '0.3,0.5,0.7',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'kernel',\n        label: 'kernel',\n        required: true,\n        data: 'rbf',\n        gs_data: ['rbf'],\n        select_options: [\n          { option_label: 'linear', value: 'linear' },\n          { option_label: 'poly', value: 'poly' },\n          { option_label: 'rbf', value: 'rbf' },\n          { option_label: 'sigmoid', value: 'sigmoid' },\n          { option_label: 'precomputed', value: 'precomputed' },\n        ],\n        placeholder_text: 'Select kernel',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'gamma',\n        label: 'gamma',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.5',\n        data: 'auto',\n        gs_data: 'scale,0.1,0.3',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|auto(,[0-9]+(\\.[0-9]+)*)*|scale(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'degree',\n        label: 'degree',\n        required: false,\n        bo_data: '3,5',//'3,7',\n        data: 3,\n        gs_data: '3,5,7',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'coef0',\n        label: 'coef0',\n        required: false,\n        bo_data: '0.1,0.5',//'0.1,1.0',\n        data: 0.0,\n        gs_data: '0.1,0,1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"shrinking\",\n      //   label: \"shrinking\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.01,0.1',//'0.001,0.1',\n        data: '0.001',\n        gs_data: '1e-1,1e-3,1e-5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(, [0-9]+(\\.[0-9]+)*)*|[0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Extra Tree Classification',\n    fields: [\n      {\n        type: 'select',\n        name: 'criterion',\n        label: 'criterion',\n        required: true,\n        data: 'gini',\n        gs_data: ['gini', 'entropy'],\n        select_options: [\n          { option_label: 'gini', value: 'gini' },\n          { option_label: 'entropy', value: 'entropy' },\n        ],\n        placeholder_text: 'Select criterion',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      //       {\n      //         type: \"select\",\n      //         name: \"splitter\",\n      //         label: \"splitter\",\n      //         required: true,\n      //         data: \"best\",\n      //         gs_data: [\"best\", \"random\"],\n      //         select_options: [\n      //           { option_label: \"best\", value: \"best\" },\n      //           { option_label: \"random\", value: \"random\" },\n      //         ],\n      //         placeholder_text: \"Select splitter\",\n      //       },\n      {\n        type: 'text',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 'None',\n        gs_data: '1.0,2.0,3.0,4.0,5.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_split',\n        label: 'min_samples_split',\n        required: false,\n        bo_data: '2,5',//'2,9',\n        data: 2,\n        gs_data: '0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_leaf',\n        label: 'min_samples_leaf',\n        required: false,\n        bo_data: '2,5',//'2,9',\n        data: 1,\n        gs_data: '0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_weight_fraction_leaf',\n        label: 'min_weight_fraction_leaf',\n        required: false,\n        bo_data: '0,0.2',//'0,0.5',\n        data: 0,\n        gs_data: '0,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"text\",\n      //   name: \"max_features\",\n      //   label: \"max_features\",\n      //   required: false,\n      //   bo_data: \"2,20\",\n      //   data: \"None\",\n      //   gs_data: \"None,auto,sqrt,log2\",\n      // },\n      {\n        type: 'text',\n        name: 'max_leaf_nodes',\n        label: 'max_leaf_nodes',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 'None',\n        gs_data: 'None,5,10,15',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_impurity_decrease',\n        label: 'min_impurity_decrease',\n        required: false,\n        bo_data: '0,1',\n        data: 0,\n        gs_data: '0,0.1,0.2',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Ensemble Extra Trees Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: false,\n        bo_data: '10,50',//'10,100',\n        data: 10,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'criterion',\n        label: 'criterion',\n        required: true,\n        data: 'gini',\n        gs_data: ['gini', 'entropy'],\n        select_options: [\n          { option_label: 'gini', value: 'gini' },\n          { option_label: 'entropy', value: 'entropy' },\n        ],\n        placeholder_text: 'Select criterion',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_features',\n        label: 'max_features',\n        required: false,\n        bo_data: '2,5',//'2,20',\n        data: 'auto',\n        gs_data: 'None,auto,sqrt,log2',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+([0-9]+)*(,[a-zA-Z]+([0-9]+)*)*|[0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '2,5',//'2,20',\n        data: 'None',\n        gs_data: '1.0,2.0,3.0,4.0,5.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_split',\n        label: 'min_samples_split',\n        required: false,\n        bo_data: '2,5',//'2,9',\n        data: 2,\n        gs_data: '0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples_leaf',\n        label: 'min_samples_leaf',\n        required: false,\n        bo_data: '2,5',//'2,9',\n        data: 1,\n        gs_data: '0.1,0.2,0.3,0.4,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_weight_fraction_leaf',\n        label: 'min_weight_fraction_leaf',\n        required: false,\n        bo_data: '0,0.2',//'0,0.5',\n        data: 0,\n        gs_data: '0,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_leaf_nodes',\n        label: 'max_leaf_nodes',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 'None',\n        gs_data: 'None,5,10,15',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_impurity_decrease',\n        label: 'min_impurity_decrease',\n        required: false,\n        bo_data: '0,2',//'0,5',\n        data: 0,\n        gs_data: '0,0.1,0.2',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'bootstrap',\n        label: 'bootstrap',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      //       {\n      //         type: \"radio\",\n      //         name: \"oob_score\",\n      //         label: \"oob_score\",\n      //         required: false,\n      //         data: false,\n      //         radio_btns: [\n      //           { radio_label: \"true\", value: true },\n      //           { radio_label: \"false\", value: false },\n      //         ],\n      //       },\n      //       {\n      //         type: \"radio\",\n      //         name: \"warm_start\",\n      //         label: \"warm_start\",\n      //         required: false,\n      //         data: false,\n      //         radio_btns: [\n      //           { radio_label: \"true\", value: true },\n      //           { radio_label: \"false\", value: false },\n      //         ],\n      //       },\n    ],\n    isBOSupported: true,\n  },\n  //   {\n  //     algoName: \"Ensemble Extra Trees Classification\",\n  //     fields: [\n  //       {\n  //         type: \"number\",\n  //         name: \"n_estimators\",\n  //         label: \"n_estimators\",\n  //         required: false,\n  //         bo_data: \"10,100\",\n  //         data: 10,\n  //       },\n  //       {\n  //         type: \"text\",\n  //         name: \"criterion\",\n  //         label: \"criterion\",\n  //         required: false,\n  //         data: \"gini\",\n  //       },\n  //       {\n  //         type: \"text\",\n  //         name: \"max_features\",\n  //         label: \"max_features\",\n  //         required: false,\n  //         bo_data: \"2,20\",\n  //         data: \"auto\",\n  //       },\n  //       {\n  //         type: \"text\",\n  //         name: \"max_depth\",\n  //         label: \"max_depth\",\n  //         required: false,\n  //         bo_data: \"3,20\",\n  //         data: \"None\",\n  //       },\n  //       {\n  //         type: \"number\",\n  //         name: \"min_samples_split\",\n  //         label: \"min_samples_split\",\n  //         required: false,\n  //         bo_data: \"2,9\",\n  //         data: 2,\n  //       },\n  //       {\n  //         type: \"number\",\n  //         name: \"min_samples_leaf\",\n  //         label: \"min_samples_leaf\",\n  //         required: false,\n  //         bo_data: \"2,9\",\n  //         data: 1,\n  //       },\n  //       {\n  //         type: \"number\",\n  //         name: \"min_weight_fraction_leaf\",\n  //         label: \"min_weight_fraction_leaf\",\n  //         required: false,\n  //         bo_data: \"0,0.5\",\n  //         data: 0,\n  //       },\n  //       {\n  //         type: \"text\",\n  //         name: \"max_leaf_nodes\",\n  //         label: \"max_leaf_nodes\",\n  //         required: false,\n  //         bo_data: \"3,20\",\n  //         data: \"None\",\n  //       },\n  //       {\n  //         type: \"number\",\n  //         name: \"min_impurity_decrease\",\n  //         label: \"min_impurity_decrease\",\n  //         required: false,\n  //         bo_data: \"0,5\",\n  //         data: 0,\n  //       },\n  //       {\n  //         type: \"radio\",\n  //         name: \"bootstrap\",\n  //         label: \"bootstrap\",\n  //         required: false,\n  //         data: false,\n  //         radio_btns: [\n  //           { radio_label: \"true\", value: true },\n  //           { radio_label: \"false\", value: false },\n  //         ],\n  //       },\n  //       {\n  //         type: \"radio\",\n  //         name: \"oob_score\",\n  //         label: \"oob_score\",\n  //         required: false,\n  //         data: false,\n  //         radio_btns: [\n  //           { radio_label: \"true\", value: true },\n  //           { radio_label: \"false\", value: false },\n  //         ],\n  //       },\n  //       {\n  //         type: \"radio\",\n  //         name: \"warm_start\",\n  //         label: \"warm_start\",\n  //         required: false,\n  //         data: false,\n  //         radio_btns: [\n  //           { radio_label: \"true\", value: true },\n  //           { radio_label: \"false\", value: false },\n  //         ],\n  //       },\n  //       {\n  //         type: \"text\",\n  //         name: \"class_weight\",\n  //         label: \"class_weight\",\n  //         required: false,\n  //         data: \"None\",\n  //       },\n  //     ],\n  //     isBOSupported: true,\n  //   },\n  {\n    algoName: 'MLP Classification',\n    fields: [\n      {\n        type: 'text',\n        name: 'hidden_layer_sizes',\n        label: 'hidden_layer_sizes',\n        required: false,\n        bo_data: '50,70',//'50,200',\n        data: 100,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'activation',\n        label: 'activation',\n        required: true,\n        data: 'relu',\n        gs_data: ['relu', 'tanh', 'logistic', 'identity'],\n        select_options: [\n          { option_label: 'identity', value: 'identity' },\n          { option_label: 'logistic', value: 'logistic' },\n          { option_label: 'tanh', value: 'tanh' },\n          { option_label: 'relu', value: 'relu' },\n        ],\n        placeholder_text: 'Select activation',\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'solver',\n        label: 'solver',\n        required: true,\n        data: 'adam',\n        gs_data: ['lbfgs', 'sgd', 'adam'],\n        select_options: [\n          { option_label: 'lbfgs', value: 'lbfgs' },\n          { option_label: 'sgd', value: 'sgd' },\n          { option_label: 'adam', value: 'adam' },\n        ],\n        placeholder_text: 'Select solver',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'beta_1',\n        label: 'beta_1',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.9,\n        gs_data: '0.9,0.99',//'0.9,0.99,0.999',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'beta_2',\n        label: 'beta_2',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.999,\n        gs_data: '0.9,0.99',//'0.9,0.99,0.999',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'epsilon',\n        label: 'epsilon',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.0003,\n        gs_data: '1e-07,1e-08,1e-09',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.0001,\n        gs_data: '0.0001,0.001',//'0.001,0.0001,0.00001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: true,\n        data: 'constant',\n        gs_data: ['constant', 'invscaling', 'adaptive'],\n        select_options: [\n          { option_label: 'constant', value: 'constant' },\n          { option_label: 'invscaling', value: 'invscaling' },\n          { option_label: 'adaptive', value: 'adaptive' },\n        ],\n        placeholder_text: 'Select learning_rate',\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'learning_rate_init',\n        label: 'learning_rate_init',\n        required: false,\n        bo_data: '0.1,1.0',//'0.01,1.0',\n        data: 0.001,\n        gs_data: '0.01,0.001,0.0001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"number\",\n      //   name: \"power_t\",\n      //   label: \"power_t\",\n      //   required: false,\n      //   bo_data: \"0.0,1.0\",\n      //   data: 0.5,\n      //   gs_data: \"0.3,0.5,0.7\",\n      // },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '200,300',\n        data: 200,\n        gs_data: '100,200',//'100,200,500',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'shuffle',\n        label: 'shuffle',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.018,\n        gs_data: '0.0001,0.001',//'0.001,0.0001,0.00001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"warm_start\",\n      //   label: \"warm_start\",\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'momentum',\n        label: 'momentum',\n        required: false,\n        bo_data: '0.1,0.3',//'0.1,0.9',\n        data: 0.9,\n        gs_data: '0.5,0.7',//'0.5,0.7,0.9',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"nesterovs_momentum\",\n      //   label: \"nesterovs_momentum\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'radio',\n        name: 'early_stopping',\n        label: 'early_stopping',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'number',\n        name: 'validation_fraction',\n        label: 'validation_fraction',\n        required: false,\n        bo_data: '0.0,0.9',\n        data: 0.1,\n        gs_data: '0.1,0.2',//'0.1,0.2,0.3',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Nearest Centroid Classification',\n    fields: [\n      {\n        type: 'select',\n        name: 'metric',\n        label: 'metric',\n        required: true,\n        data: 'euclidean',\n        gs_data: ['euclidean', 'manhattan'],\n        select_options: [\n          { option_label: 'euclidean', value: 'euclidean' },\n          { option_label: 'manhattan', value: 'manhattan' },\n          { option_label: 'minkowski', value: 'minkowski' },\n          //           { option_label: \"mahalanobis\", value: \"mahalanobis\" },\n        ],\n        placeholder_text: 'Select metric',\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(,[a-zA-Z]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'shrink_threshold',\n        label: 'shrink_threshold',\n        required: false,\n        bo_data: '0.0,0.9',\n        data: 'None',\n        gs_data: '0.1,0.3',//'0.1,0.3,0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Ridge Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'alpha',\n        label: 'alpha',\n        required: false,\n        bo_data: '0.0,1.0',\n        data: 1.0,\n        gs_data: '1,3,5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      // {\n      //   type: \"radio\",\n      //   name: \"copy_X\",\n      //   label: \"copy_X\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'text',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 'None',\n        gs_data: 'None,5,10',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*|None(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.0,1.0',\n        data: 0.001,\n        gs_data: '0.1,0.01,0.001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'solver',\n        label: 'solver',\n        required: true,\n        data: 'auto',\n        gs_data: ['auto', 'sparse_cg', 'cholesky', 'svd', 'lsqr', 'sag', 'saga'],\n        select_options: [\n          { option_label: 'auto', value: 'auto' },\n          { option_label: 'svd', value: 'svd' },\n          { option_label: 'cholesky', value: 'cholesky' },\n          { option_label: 'lsqr', value: 'lsqr' },\n          { option_label: 'sparse_cg', value: 'sparse_cg' },\n          { option_label: 'sag', value: 'sag' },\n          { option_label: 'saga', value: 'saga' },\n        ],\n        placeholder_text: 'Select solver',\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(_[a-zA-Z]+)*(,[a-zA-Z]+(_[a-zA-Z]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Ridge Classification with Cross Validation',\n    fields: [\n      {\n        type: 'text',\n        name: 'alphas',\n        label: 'alphas',\n        required: false,\n        // bo_data: '0.0001,10.0',\n        data: '0.1,1.0,10.0',\n        gs_data: '0.0001,0.001,0.01,0.1,1.0,10.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      // {\n      //   type: 'radio',\n      //   name: 'normalize',\n      //   label: 'normalize',\n      //   required: false,\n      //   data: false,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      {\n        type: 'text',\n        name: 'cv',\n        label: 'cv',\n        required: false,\n        bo_data: '3,7',\n        data: 'None',\n        gs_data: '3,5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([1-9]+(,[1-9]+(\\.[1-9]+)*)*|None(,[1-9]+(\\.[1-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Logistic Regression with Cross Validation',\n    fields: [\n      {\n        type: 'number',\n        name: 'Cs',\n        label: 'Cs',\n        required: false,\n        bo_data: '1,5',//'1,20',\n        data: 10,\n        gs_data: '1,10',//'1,10,100',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'cv',\n        label: 'cv',\n        required: false,\n        bo_data: '3,7',\n        data: 3,\n        gs_data: '3,5,7',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'penalty',\n        label: 'penalty',\n        required: false,\n        data: 'l2',\n        gs_data: 'l2',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+([0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.0,1.0',\n        data: 0.001,\n        gs_data: '0.01,0.001,0.0001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'refit',\n        label: 'refit',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      /*{\n                    type: \"select\",\n                    name: \"multi_class\",\n                    label: \"multi_class\",\n                    required: true,\n                    data: \"ovr\",\n                    select_options: [\n                        {option_label: \"ovr\", value: \"ovr\"},\n                        {option_label: \"multinomial\", value: \"multinomial\"}\n                    ],\n                    placeholder_text:'Select solver',\n                    sub_ui_elemets:[]\n                }*/\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Passive Aggressive Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'C',\n        label: 'C',\n        required: false,\n        bo_data: '0.1,1.0',\n        data: 1.0,\n        gs_data: '0.01,0.1,1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"fit_intercept\",\n      //   label: \"fit_intercept\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'max_iter',\n        label: 'max_iter',\n        required: false,\n        bo_data: '1000,1500',\n        data: 1000,\n        gs_data: '100,500,1000',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'tol',\n        label: 'tol',\n        required: false,\n        bo_data: '0.1,1.0',\n        data: 0.001,\n        gs_data: '1e-3,1e-4,1e-5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(, [0-9]+(\\.[0-9]+)*)*|[0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|(1e-[0-9]+)(,(1e-[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'shuffle',\n        label: 'shuffle',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'select',\n        name: 'loss',\n        label: 'loss',\n        required: true,\n        data: 'hinge',\n        gs_data: ['hinge', 'squared_hinge'],\n        select_options: [\n          { option_label: 'squared_hinge', value: 'squared_hinge' },\n          { option_label: 'hinge', value: 'hinge' },\n        ],\n        placeholder_text: 'Select solver',\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(_[a-zA-Z]+)*(,[a-zA-Z]+(_[a-zA-Z]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"radio\",\n      //   name: \"warm_start\",\n      //   label: \"warm_start\",\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: \"true\", value: true },\n      //     { radio_label: \"false\", value: false },\n      //   ],\n      // },\n      {\n        type: 'text',\n        name: 'average',\n        label: 'average',\n        required: false,\n        data: false,\n        gs_data: 'True,False,10',\n        validators: {\n          \"required\": true\n        }\n      },\n      // {\n      //   type: \"text\",\n      //   name: \"n_iter\",\n      //   label: \"n_iter\",\n      //   required: false,\n      //   data: \"None\",\n      //   gs_data: \"None,10,20\",\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Artificial Neural Network Classification',\n    fields: [\n      {\n        type: 'select',\n        name: 'activation',\n        label: 'activation',\n        required: false,\n        data: 'relu',\n        select_options: [\n          { option_label: 'relu', value: 'relu' },\n          { option_label: 'tanh', value: 'tanh' },\n        ],\n        placeholder_text: 'Select activattion',\n        disable: true,\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'kernel_initializer',\n        label: 'kernel_initializer',\n        required: false,\n        data: 'uniform',\n        select_options: [\n          { option_label: 'uniform', value: 'uniform' },\n          { option_label: 'zeros', value: 'zeros' },\n          { option_label: 'ones', value: 'ones' },\n          { option_label: 'constant', value: 'constant' },\n          { option_label: 'normal', value: 'normal' },\n        ],\n        placeholder_text: 'Select kernel_initializer',\n        disable: true,\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'optimizer',\n        label: 'optimizer',\n        required: false,\n        data: 'adam',\n        select_options: [\n          { option_label: 'adam', value: 'adam' },\n          { option_label: 'sgd', value: 'sgd' },\n          { option_label: 'rmsprop', value: 'rmsprop' },\n          { option_label: 'adagrad', value: 'adagrad' },\n          { option_label: 'adadelta', value: 'adadelta' },\n          { option_label: 'adamax', value: 'adamax' },\n          { option_label: 'nadam', value: 'nadam' },\n        ],\n        placeholder_text: 'Select optimizer',\n        disable: true,\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: false,\n        disable: true,\n        data: 0.01,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'dropout',\n        label: 'dropout',\n        required: false,\n        disable: true,\n        data: 0.1,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'hidden_layers',\n        label: 'hidden_layers',\n        required: false,\n        disable: true,\n        data: 3,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'epochs',\n        label: 'epochs',\n        required: false,\n        data: 100,\n        gs_data: '50,100',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'batch_size',\n        label: 'batch_size',\n        required: false,\n        data: 32,\n        gs_data: '32,50',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'Artificial Neural Network Regression',\n    fields: [\n      {\n        type: 'select',\n        name: 'activation',\n        label: 'activation',\n        required: false,\n        data: 'relu',\n        select_options: [\n          { option_label: 'relu', value: 'relu' },\n          { option_label: 'tanh', value: 'tanh' },\n        ],\n        placeholder_text: 'Select activattion',\n        disable: true,\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'kernel_initializer',\n        label: 'kernel_initializer',\n        required: false,\n        data: 'normal',\n        select_options: [\n          { option_label: 'uniform', value: 'uniform' },\n          { option_label: 'zeros', value: 'zeros' },\n          { option_label: 'ones', value: 'ones' },\n          { option_label: 'constant', value: 'constant' },\n          { option_label: 'normal', value: 'normal' },\n        ],\n        placeholder_text: 'Select kernel_initializer',\n        disable: true,\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'optimizer',\n        label: 'optimizer',\n        required: false,\n        data: 'adam',\n        select_options: [\n          { option_label: 'adam', value: 'adam' },\n          { option_label: 'sgd', value: 'sgd' },\n          { option_label: 'rmsprop', value: 'rmsprop' },\n          { option_label: 'adagrad', value: 'adagrad' },\n          { option_label: 'adadelta', value: 'adadelta' },\n          { option_label: 'adamax', value: 'adamax' },\n          { option_label: 'nadam', value: 'nadam' },\n        ],\n        placeholder_text: 'Select optimizer',\n        disable: true,\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: false,\n        disable: true,\n        data: 0.01,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'epochs',\n        label: 'epochs',\n        required: false,\n        data: 100,\n        gs_data: '50,100',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'batch_size',\n        label: 'batch_size',\n        required: false,\n        data: 32,\n        gs_data: '32,50',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'XGBoost Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 3,\n        gs_data: '3,4,5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: false,\n        bo_data: '0.1,1.0',\n        data: 0.1,\n        gs_data: '0.1,0.01,0.001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: false,\n        bo_data: '100,900',\n        data: 100,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: 'radio',\n      //   name: 'silent',\n      //   label: 'silent',\n      //   required: false,\n      //   data: true,\n      //   radio_btns: [\n      //     { radio_label: 'true', value: true },\n      //     { radio_label: 'false', value: false },\n      //   ],\n      // },\n      {\n        type: 'number',\n        name: 'colsample_bytree',\n        label: 'colsample_bytree',\n        required: false,\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'gamma',\n        label: 'gamma',\n        required: false,\n        bo_data: '0.0,1.0',//'0.0,9.0',\n        data: 0,\n        gs_data: '0.5,1,1.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'subsample',\n        label: 'subsample',\n        required: false,\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        bo_data: '0.5,1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'reg_alpha',\n        label: 'reg_alpha',\n        required: false,\n        bo_data: '0.1,5.0',//'0.1,9.0',\n        data: 0,\n        gs_data: '0,1,2',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'scale_pos_weight',\n        label: 'scale_pos_weight',\n        required: false,\n        bo_data: '0.1,5.0',//'0.1,9.0',\n        data: 1,\n        gs_data: '0,1,2',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'XGBoost Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '3,5',//'3,10',\n        data: 3,\n        gs_data: '3,4,5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: false,\n        bo_data: '0.1,0.5',//'0.000001, 0.9',\n        data: 0.1,\n        gs_data: '0.1,0.01,0.001',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: false,\n        bo_data: '50,500',\n        data: 100,\n        gs_data: '50,100,200',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      }, {\n        type: 'number',\n        name: 'colsample_bytree',\n        label: 'colsample_bytree',\n        required: false,\n        bo_data: '0.0, 1.0',\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*(, [0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'gamma',\n        label: 'gamma',\n        required: false,\n        bo_data: '0.1, 2.0',\n        data: 0,\n        gs_data: '0.5,1,1.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*(, [0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'subsample',\n        label: 'subsample',\n        required: false,\n        bo_data: '0.1, 1.0',\n        data: 1,\n        gs_data: '0.6,0.8',//'0.6,0.8,1.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*(, [0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'reg_alpha',\n        label: 'reg_alpha',\n        required: false,\n        data: 0,\n        gs_data: '0,1,2',\n        bo_data: '0.1,5.0',//'0.1,9.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'scale_pos_weight',\n        label: 'scale_pos_weight',\n        required: false,\n        bo_data: '0,3',\n        data: 1,\n        gs_data: '0,1,2',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'LightGBM Classification',\n    fields: [\n      {\n        type: 'number',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: false,\n        bo_data: '0.1, 1.0',\n        data: 0.1,\n        gs_data: '0.01,0.1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*(, [0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'boosting_type',\n        label: 'boosting_type',\n        required: true,\n        data: 'gbdt',\n        gs_data: ['gbdt'],\n        select_options: [\n          { option_label: 'gbdt', value: 'gbdt' },\n          { option_label: 'dart', value: 'dart' },\n          { option_label: 'goss', value: 'goss' },\n        ],\n        placeholder_text: 'Select boosting_type',\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          // \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: false,\n        bo_data: '20,50',//'20,900',\n        data: 100,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'num_leaves',\n        label: 'num_leaves',\n        required: false,\n        bo_data: '3,30',\n        data: 31,\n        gs_data: '30,31,32',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '3,5',//'3,20',\n        data: 1,\n        gs_data: '1,7',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"number\",\n      //   name: \"min_data\",\n      //   label: \"min_data\",\n      //   required: false,\n      //   data: 50,\n      //   gs_data: \"50,100\",\n      // },\n      // {\n      //   type: \"number\",\n      //   name: \"sub_feature\",\n      //   label: \"sub_feature\",\n      //   required: false,\n      //   data: 0.5,\n      //   gs_data: \"0.3,0.5,0.7\",\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'LightGBM Regression',\n    fields: [\n      {\n        type: 'number',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: false,\n        bo_data: '0.1,0.5',//'0.000001, 0.9',\n        data: 0.1,\n        gs_data: '0.01,0.1',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'boosting_type',\n        label: 'boosting_type',\n        required: true,\n        data: 'gbdt',\n        gs_data: ['gbdt'],\n        select_options: [\n          { option_label: 'gbdt', value: 'gbdt' },\n          { option_label: 'dart', value: 'dart' },\n          { option_label: 'goss', value: 'goss' },\n        ],\n        placeholder_text: 'Select boosting_type',\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          // \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: false,\n        bo_data: '50,500',\n        data: 100,\n        gs_data: '50,100',//'50,100,200',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'num_leaves',\n        label: 'num_leaves',\n        required: false,\n        bo_data: '30,50',\n        data: 31,\n        gs_data: '30,31,32',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '1,10',\n        data: 1,\n        gs_data: '1,7',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      // {\n      //   type: \"number\",\n      //   name: \"min_data\",\n      //   label: \"min_data\",\n      //   required: false,\n      //   data: 50,\n      //   gs_data: \"50,100\",\n      // },\n      // {\n      //   type: \"number\",\n      //   name: \"sub_feature\",\n      //   label: \"sub_feature\",\n      //   required: false,\n      //   data: 0.5,\n      //   gs_data: \"0.3,0.5,0.7\",\n      // },\n    ],\n    isBOSupported: true,\n  },\n  {\n    algoName: 'Arima',\n    fields: [\n      {\n        type: 'number',\n        name: 'p',\n        label: 'p',\n        placeholder_text: 'Auto-regressive terms',\n        required: false,\n        data: 1,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'd',\n        label: 'd',\n        placeholder_text: 'Non-seasonal differences',\n        required: false,\n        data: 1,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'q',\n        label: 'q',\n        placeholder_text: 'Moving-Average terms',\n        required: false,\n        data: 1,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'Arimax',\n    fields: [\n      {\n        type: 'number',\n        name: 'ar',\n        label: 'ar',\n        placeholder_text: 'Auto-regressive terms',\n        required: false,\n        data: 1,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'ma',\n        label: 'ma',\n        placeholder_text: 'Non-seasonal differences',\n        required: false,\n        data: 1,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'integ',\n        label: 'integ',\n        placeholder_text: 'Moving-Average terms',\n        required: false,\n        data: 0,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'Sarimax',\n    fields: [\n      {\n        type: 'text',\n        name: 'order',\n        label: 'order(p,d,q)',\n        placeholder_text: '',\n        required: false,\n        data: '1,0,0',\n        gs_data: '2,1,1',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(,[0-9]+){2})$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'seasonal_order',\n        label: 'seasonal order(p,d,q,s)',\n        placeholder_text: '',\n        required: false,\n        data: '0,0,0,0',\n        gs_data: '1,1,1,1',\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([0-9]+(,[0-9]+){3})$\"\n        }\n      },\n      {\n        type: 'radio',\n        name: 'enforce_stationarity',\n        label: 'enforce_stationarity',\n        required: false,\n        data: true,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n      {\n        type: 'radio',\n        name: 'enforce_invertibility',\n        label: 'enforce_invertibility',\n        required: false,\n        data: false,\n        radio_btns: [\n          { radio_label: 'true', value: true },\n          { radio_label: 'false', value: false },\n        ],\n        validators: {\n          \"required\": true\n        }\n      },\n    ],\n    isBOSupported: false,\n  }, {\n    algoName: 'Prophet',\n    fields: [\n      {\n        type: 'select',\n        name: 'seasonality_mode',\n        label: 'seasonality_mode',\n        validators: {\n          required: false,\n        },\n        data: 'additive',\n        gs_data: ['additive', 'multiplicative'],\n        select_options: [\n          { option_label: 'additive', value: 'additive' },\n          { option_label: 'multiplicative', value: 'multiplicative' },\n        ]\n      },\n      {\n        type: 'text',\n        name: 'seasonality_prior_scale',\n        label: 'seasonality_prior_scale',\n        required: false,\n        data: '10.0',\n        placeholder_text: 'Some value',\n        gs_data: '0.01, 10',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'holidays_prior_scale',\n        label: 'holidays_prior_scale',\n        required: false,\n        data: '10.0',\n        placeholder_text: 'Some value',\n        gs_data: '0.01, 10',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'changepoint_prior_scale',\n        label: 'changepoint_prior_scale',\n        required: false,\n        data: '0.05',\n        placeholder_text: 'Some value',\n        gs_data: '0.001, 0.5',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None)$\"\n        }\n      },\n    ],\n    isBOSupported: true,\n  }, {\n    algoName: 'Random Forest',\n    fields: [\n      {\n        type: 'number',\n        name: 'lags',\n        label: 'lags',\n        required: true,\n        bo_data: '',\n        data: 10,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 1,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'lags_past_covariates',\n        label: 'lags_past_covariates',\n        required: true,\n        bo_data: '',\n        data: 10,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 1,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      }, {\n        type: 'number',\n        name: 'n_estimators',\n        label: 'n_estimators',\n        required: true,\n        bo_data: '',\n        data: 100,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 1,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'max_depth',\n        label: 'max_depth',\n        required: false,\n        bo_data: '',//'1,5',\n        data: 'None',\n        gs_data: '', //'1.0, 2.0, 3.0, 4.0, 5.0',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*(,[0-9]+(\\.[0-9]+)*)*|None)$\"\n        }\n      },]\n  }, {\n    algoName: 'Linear Regression Ts',\n    fields: [\n      {\n        type: 'number',\n        name: 'lags',\n        label: 'lags',\n        required: true,\n        bo_data: '',\n        data: 10,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 1,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'lags_past_covariates',\n        label: 'lags_past_covariates',\n        required: true,\n        bo_data: '',\n        data: 10,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 1,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },]\n  }, {\n    algoName: 'Agglomerative',\n    fields: [\n      {\n        type: 'text',\n        name: 'affinity',\n        label: 'affinity',\n        required: true,\n        bo_data: '',\n        data: 'euclidean',\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'linkage',\n        label: 'linkage',\n        required: true,\n        data: 'ward',\n        select_options: [\n          { option_label: 'ward', value: 'ward' },\n          { option_label: 'complete', value: 'complete' },\n          { option_label: 'average', value: 'average' },\n          { option_label: 'single', value: 'single' },\n        ],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n    ]\n  },\n  {\n    algoName: 'DBSCAN',\n    fields: [\n      {\n        type: 'number',\n        name: 'eps',\n        label: 'eps',\n        required: true,\n        bo_data: '',\n        data: 0.5,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'min_samples',\n        label: 'min_samples',\n        required: true,\n        bo_data: '',\n        data: 5,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'leaf_size',\n        label: 'leaf_size',\n        required: true,\n        bo_data: '',\n        data: 30,\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'metric',\n        label: 'metric',\n        required: true,\n        bo_data: '',\n        data: 'euclidean',\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'metric_params',\n        label: 'metric_params',\n        required: true,\n        bo_data: '',\n        data: 'None',\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'text',\n        name: 'p',\n        label: 'p',\n        required: true,\n        bo_data: '',\n        data: 'None',\n        gs_data: '',\n        validators: {\n          \"required\": true,\n          \"minLength\": 2,\n          \"maxLength\": 200,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'select',\n        name: 'algorithm',\n        label: 'algorithm',\n        required: true,\n        data: 'auto',\n        select_options: [\n          { option_label: 'auto', value: 'auto' },\n          { option_label: 'ball_tree', value: 'ball_tree' },\n          { option_label: 'kd_tree', value: 'kd_tree' },\n          { option_label: 'brute', value: 'brute' },\n        ],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+(_[0-zA-Z]+)*)$\"\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n  {\n    algoName: 'LSTM',\n    fields: [\n      {\n        type: 'select',\n        name: 'optimizer',\n        label: 'optimizer',\n        required: true,\n        data: 'adam',\n        select_options: [\n          { option_label: 'adam', value: 'adam' },\n          { option_label: 'sgd', value: 'sgd' },\n          { option_label: 'rmsprop', value: 'rmsprop' },\n          { option_label: 'adagrad', value: 'adagrad' },\n          { option_label: 'adadelta', value: 'adadelta' },\n          { option_label: 'adamax', value: 'adamax' },\n          { option_label: 'nadam', value: 'nadam' },\n        ],\n        placeholder_text: 'Select optimizer',\n        disable: true,\n        sub_ui_elemets: [],\n        validators: {\n          \"required\": true,\n          \"pattern\": \"^([a-zA-Z]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'learning_rate',\n        label: 'learning_rate',\n        required: false,\n        disable: true,\n        data: 0.001,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'dropout',\n        label: 'dropout',\n        required: false,\n        disable: true,\n        data: 0.2,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(\\.[0-9]+)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'hidden_layers',\n        label: 'hidden_layers',\n        required: false,\n        disable: true,\n        data: 3,\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'epochs',\n        label: 'epochs',\n        required: false,\n        data: 50,\n        gs_data: '50,100',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n      {\n        type: 'number',\n        name: 'batch_size',\n        label: 'batch_size',\n        required: false,\n        data: 32,\n        gs_data: '32,50',\n        validators: {\n          \"required\": true,\n          \"min\": 0,\n          \"saasMax\": 2000,\n          \"entMax\": 3000,\n          \"pattern\": \"^([0-9]+(,[0-9]+(\\.[0-9]+)*)*)$\"\n        }\n      },\n    ],\n    isBOSupported: false,\n  },\n];\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrainingService {\n  serverBaseUrl: string = environment.serverBaseUrl;\n\n  constructor(private _http: HttpClient) { }\n\n  /**\n   * Fetches the previous training details\n   * @param projectId\n   * @param isEdaRequired\n   * @returns\n   */\n  getPreviousTrainingDetails(projectId: string, isEdaRequired: boolean): Observable<any> {\n    return this._http.get(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/trainmodel?isEdaRequired=${isEdaRequired}`\n    );\n  }\n\n  /**\n   * Generates the target plot data\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  plotTargetGraph(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/report/trainmodel/multiunivariate?target=true`,\n      reqObj\n    );\n  }\n\n  /**\n   * Function will return details like algouseGPU:false,Type,isMultilabel,testPercentage,isImbalanced etc.\n   * On target variable selection.\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  getTargetDetails(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/predictive/target_details`,\n      reqObj\n    );\n  }\n\n  /**\n   * Calculates the feature score\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  calculateFeatureScore(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/predictive/calculate_feature_score`,\n      reqObj\n    );\n  }\n\n  /**\n   * calculates the sampling percentage\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  calculateSamplingPercentage(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/training/sampling_percentage`,\n      reqObj\n    );\n  }\n\n  /**\n   * Fetches the optimal clusters\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  findOptimalClusters(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/clustering/visualize/optimise_clusters`,\n      reqObj\n    );\n  }\n\n  /**\n   * Fetches the unique categories\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  getUniqueCategories(reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/training/feature/unique_categories`,\n      reqObj\n    );\n  }\n\n  /**\n   * Executes the predictive modeling type training\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  startPredictiveTraining(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/trainmodel`,\n      reqObj,\n      { responseType: 'text' }\n    );\n  }\n\n  /**\n   * Executes the clustering type training\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  startClusteringTraining(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/clustering/trainmodel`,\n      reqObj,\n      { responseType: 'text' }\n    );\n  }\n\n  /**\n   * Executes the timeseries project type training\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  startTimeseriesTraining(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/timeseries/trainmodel`,\n      reqObj,\n      { responseType: 'text' }\n    );\n  }\n\n  /**\n   * Generates the visualize component graph\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  getVisualizeComponentPlot(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/timeseries/visualize/component`,\n      reqObj\n    );\n  }\n\n  /**\n   * Performs the stationary test\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  startStationarityTest(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/timeseries/stationarity_test`,\n      reqObj\n    );\n  }\n\n  /**\n   * Generates the auto correalation graph\n   * @param projectId\n   * @param reqObj\n   * @returns\n   */\n  getAutoCorrelationGraph(projectId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/timeseries/visualize/autocorrelation`,\n      reqObj\n    );\n  }\n\n  /**\n   * Deletes the training\n   * @param projectId\n   * @param dataId\n   */\n  deleteTraining(trainingId: string, projectId: string, isLastTraining: boolean): Observable<any> {\n    return this._http.delete(\n      `${this.serverBaseUrl}/api/v2/training/${trainingId}?lastTraining=${isLastTraining}&projectId=${projectId}`\n    );\n  }\n\n  /**\n   * Starts the retraining execution\n   * @param trainingId\n   * @param modelId\n   * @param reqObj\n   * @returns\n   */\n  startReTraining(trainingId: string, modelId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/training/${trainingId}/models/${modelId}/retrain`,\n      reqObj\n    );\n  }\n\n  /**\n   * Starts the model tuning execution\n   * @param trainingId\n   * @param modelId\n   * @param reqObj\n   * @returns\n   */\n  startModelTuning(trainingId: string, modelId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/training/${trainingId}/model/${modelId}/tune`,\n      reqObj\n    );\n  }\n\n  /**\n   * Starts the execution of adv algorithm\n   * @param trainingId\n   * @param modelId\n   * @param reqObj\n   * @returns\n   */\n  startAdvTraining(trainingId: string, modelId: string, reqObj: any): Observable<any> {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/advtrainmodel/${trainingId}/models/${modelId}`,\n      reqObj\n    );\n  }\n}\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TextAnalysisService {\n  serverBaseUrl: string = environment.serverBaseUrl;\n\n  constructor(private _http: HttpClient) { }\n\n  /**\n   * fetches the list of experiments created by the user\n   * @param projectId\n   * @returns\n   */\n  experimentList(projectId: string): Observable<any> {\n    return this._http.get(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/textAnalysis/experiments`\n    );\n  }\n\n  /**\n   * fetches the text data from the respective column from respective file.\n   * @param projectId\n   * @param featureName\n   * @param fileName\n   * @returns\n   */\n  listFeatureDetails(\n    projectId: string,\n    featureName: string,\n    fileName: string\n  ): Observable<any> {\n    return this._http.get(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/textAnalysis/feature`,\n      {\n        params: { featureName: featureName, fileName: fileName },\n      }\n    );\n  }\n\n  /**\n   * deletes the experiment\n   * @param projectId\n   * @returns\n   */\n  deleteExperiment(projectId: string, experimentId: string): Observable<any> {\n    return this._http.delete(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/textAnalysis/experiments`,\n      { params: { experimentId: experimentId } }\n    );\n  }\n\n  /**\n   * Fetches the taexperiment details\n   * @param taExperimentId\n   * @returns\n   */\n  taExperiment(taExperimentId: string): Observable<any> {\n    return this._http.get(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/${taExperimentId}`\n    );\n  }\n\n  textCleaning(inputData: any, taskConfig: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/textCleaning`,\n      {\n        data: inputData,\n        taskConfig: taskConfig,\n      }\n    );\n  }\n\n  pos(inputData: any, taskConfig: any, renderType: any) {\n    return this._http.post(`${this.serverBaseUrl}/api/v2/textAnalysis/pos`, {\n      data: inputData,\n      taskConfig: taskConfig,\n      renderType: renderType,\n    });\n  }\n\n  ner(inputData: any, taskConfig: any, renderType: any) {\n    return this._http.post(`${this.serverBaseUrl}/api/v2/textAnalysis/ner`, {\n      data: inputData,\n      taskConfig: taskConfig,\n      renderType: renderType,\n    });\n  }\n\n  sentimentAnalysis(sentimentAnalysisParams: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/sentimentAnalysis`,\n      {\n        data: sentimentAnalysisParams.data,\n        taskConfig: sentimentAnalysisParams.taskConfig,\n      }\n    );\n  }\n\n  textSummarization(summarizeParam: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/textSummarization`,\n      {\n        data: summarizeParam.data,\n        taskConfig: summarizeParam.taskConfig,\n      }\n    );\n  }\n\n  wordFrequency(configData: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/wordFrequency`,\n      {\n        data: configData,\n      }\n    );\n  }\n\n  wordEmbedding(wordEmbeddingParam: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/wordEmbedding`,\n      {\n        data: wordEmbeddingParam.data,\n        taskConfig: wordEmbeddingParam.taskConfig,\n      }\n    );\n  }\n\n  ruleBasedMatch(inputData: any, taskConfig: any, renderType: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/ruleBasedMatch`,\n      {\n        data: inputData,\n        taskConfig: taskConfig,\n        renderType: renderType,\n      }\n    );\n  }\n\n  saveTextAnalysis(dataConfig: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/saveAnalysis`,\n      { ...dataConfig }\n    );\n  }\n\n  saveApplyTextAnalysis(dataConfig: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/apply/saveAnalysis`,\n      { ...dataConfig }\n    );\n  }\n}\n"]}