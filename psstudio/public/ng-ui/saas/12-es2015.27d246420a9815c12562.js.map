{"version":3,"sources":["webpack:///src/app/shared/pipes/drop-file-extension.pipe.ts","webpack:///node_modules/easy-pie-chart/dist/easypiechart.js","webpack:///src/app/routes/text-analysis/ta-datastore.service.ts","webpack:///src/app/routes/text-analysis/experiments-list/experiments-list.component.html","webpack:///src/app/routes/text-analysis/experiments-list/experiments-list.component.ts","webpack:///src/app/routes/text-analysis/text-analysis-dialog/text-analysis-dialog.component.html","webpack:///src/app/routes/text-analysis/text-analysis-dialog/text-analysis-dialog.component.ts","webpack:///src/app/routes/text-analysis/experiment-input/experiment-input.component.html","webpack:///src/app/routes/text-analysis/experiment-input/experiment-input.component.ts","webpack:///node_modules/sortablejs/modular/sortable.esm.js","webpack:///node_modules/ngx-sortablejs/__ivy_ngcc__/fesm2015/ngx-sortablejs.js","webpack:///src/app/routes/text-analysis/operations-list/operations-list.component.html","webpack:///src/app/routes/text-analysis/operations-list/operations-list.component.ts","webpack:///src/app/routes/text-analysis/operations-ui-container/operations-ui-container.component.html","webpack:///src/app/routes/text-analysis/operations-ui-container/operations-ui-container.component.ts","webpack:///src/app/routes/text-analysis/create-experiment/create-experiment.component.html","webpack:///src/app/routes/text-analysis/create-experiment/create-experiment.component.ts","webpack:///src/app/routes/text-analysis/pipeline-settings-dialog/pipeline-settings-dialog.component.html","webpack:///src/app/routes/text-analysis/pipeline-settings-dialog/pipeline-settings-dialog.component.ts","webpack:///src/app/routes/text-analysis/operations-ui-container/pos-tagging/pos-tagging.component.html","webpack:///src/app/routes/text-analysis/operations-ui-container/pos-tagging/pos-tagging.component.ts","webpack:///src/app/routes/text-analysis/operations-ui-container/text-summarization/text-summarization.component.html","webpack:///src/app/routes/text-analysis/operations-ui-container/text-summarization/text-summarization.component.ts","webpack:///src/app/routes/text-analysis/operations-ui-container/sentiment-analysis/sentiment-analysis.component.html","webpack:///src/app/routes/text-analysis/operations-ui-container/sentiment-analysis/sentiment-analysis.component.ts","webpack:///src/app/routes/text-analysis/operations-ui-container/ner/ner.component.html","webpack:///src/app/routes/text-analysis/operations-ui-container/ner/ner.component.ts","webpack:///src/app/routes/text-analysis/operations-ui-container/word-frequency/word-frequency.component.html","webpack:///src/app/routes/text-analysis/operations-ui-container/word-frequency/word-frequency.component.ts","webpack:///src/app/routes/text-analysis/operations-ui-container/word-embedding/word-embedding.component.html","webpack:///src/app/routes/text-analysis/operations-ui-container/word-embedding/word-embedding.component.ts","webpack:///src/app/routes/text-analysis/operations-ui-container/text-cleaning/text-cleaning.component.html","webpack:///src/app/routes/text-analysis/operations-ui-container/text-cleaning/text-cleaning.component.ts","webpack:///src/app/routes/text-analysis/operations-ui-container/rule-based-matching/rule-based-matching.component.html","webpack:///src/app/routes/text-analysis/operations-ui-container/rule-based-matching/rule-based-matching.component.ts","webpack:///src/app/routes/text-analysis/text-analysis.module.ts","webpack:///src/app/shared/components/eda-report/eda-report.component.ts","webpack:///src/app/shared/components/eda-report/eda-report.component.html","webpack:///src/app/routes/text-analysis/text-analysis.service.ts","webpack:///src/app/shared/directives/easypiechart/easypiechart.directive.ts"],"names":["DropFileExtensionPipe","value","fileSource","substr","lastIndexOf","root","this","CanvasRenderer","el","options","cachedBackground","canvas","document","createElement","appendChild","G_vmlCanvasManager","initElement","ctx","getContext","width","height","size","scaleBy","window","devicePixelRatio","style","join","scale","translate","rotate","Math","PI","radius","lineWidth","scaleColor","scaleLength","Date","now","drawCircle","color","percent","isNegative","min","max","beginPath","arc","strokeStyle","stroke","reqAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","drawBackground","offset","length","fillStyle","save","i","fillRect","restore","trackColor","trackWidth","getCanvas","getCtx","clear","clearRect","draw","getImageData","putImageData","lineCap","barColor","bind","animate","from","to","startTime","onStart","animation","process","duration","currentValue","easing","onStep","onStop","opts","defaultOptions","undefined","enabled","x","t","b","c","d","renderer","Error","SVGRenderer","init","hasOwnProperty","jQuery","isFunction","dataset","update","parseFloat","getAttribute","newValue","disableAnimation","enableAnimation","TaDataStoreService","taData","validOperations","onSubmitEventSubject","BehaviorSubject","eventStatusTxt","next","data","push","uid","foundIndex","findIndex","item","opData","getFirstInputData","operation","inputItem","operationIndex","slice","reverse","some","includes","filter","removeFilter","operationData","type","result","forEach","element","find","swal","ExperimentsListComponent","_toaster","_localStorage","_spinner","_dialog","_sanitizer","_textAnalysis","_taDataStore","_schedular","route","dataSource","pageSizeOptions","displayedColumns","unsubscribe$","Subject","showSpinner","project","getItem","user","paginator","sort","getExperimentsList","experimentList","_id","pipe","takeUntil","subscribe","res","stopSpinner","experimentsArray","_updateChangeSubscription","error","err","experimentsData","title","text","icon","buttons","cancel","visible","className","confirm","then","isConfirm","deleteExperiment","success","experimentName","cleartaData","deleteItem","clearTaData","navigate","operationsData","mode","experimentMode","setItem","setExperimentsData","featureName","feature","fileId","output","inputText","taskConfig","operationName","parameters","queryParams","experimentId","event","target","trim","toLowerCase","firstPage","unsubscribe","TextAnalysisDialogComponent","_textAnalysisDialog","_socket","saveDialogControl","required","showSaveApplybtn","dialogTitle","showSaveError","showExecutionError","downloadIconColor","graphFileName","downloadGraph","graphType","file","Blob","graphFileUrl","bypassSecurityTrustResourceUrl","URL","createObjectURL","showGraph","graphContent","bypassSecurityTrustHtml","initSocket","getAllOperationData","every","val","inputData","inputFileName","fileName","inputFileId","dataSetDbObj","dataSetVal","childFileData","expName","map","dataConfig","projectId","saveTextAnalysis","resp","setValue","close","operationConfig","dataGroupId","datagroup_id","filePath","fileSchema","featureList","parentPipelineFilename","currentEdaId","tasks","currentPipelineFilename","saveApplyTextAnalysis","reset","listen","status","message","removeListener","ExperimentInputComponent","_data","isBlur","filename","showError","featureDescription","onChangeDataset","selectedDataSetVal","name","selectedDataSet","onTextChange","saveOperationOutput","selectedFeature","onChangeFeature","refresh","listFeatureDetails","getDataSetList","getAllProjectDatas","dataSetArray","filesList","setValuesAfterRefresh","experimentsList","experiment","snapshot","dataSet","callFromRefreshLogic","getAllChildDatasets","edaData","featureArray","edaSummary","dataType","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","arguments","source","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_typeof","obj","Symbol","iterator","constructor","prototype","configurable","writable","_extends","assign","call","_objectWithoutProperties","excluded","sourceKeys","indexOf","sourceSymbolKeys","propertyIsEnumerable","userAgent","pattern","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","nodeType","parentNode","closest","includeCTX","_throttleTimeout","R_SPACE","toggleClass","state","classList","replace","css","prop","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","includeDragEl","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","isRectEqual","rect1","rect2","round","throttle","ms","args","_this","scrollBy","y","Polymer","$","Zepto","dom","cloneNode","expando","getTime","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","p","pluginName","concat","pluginEvent","eventName","sortable","evt","eventCanceled","eventNameGlobal","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","_excluded","_ref","originalEvent","dragEl","parentEl","ghostEl","rootEl","nextEl","lastDownEl","cloneEl","cloneHidden","dragStarted","moved","putSortable","activeSortable","active","oldIndex","oldDraggableIndex","newIndex","newDraggableIndex","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","targetEl","toEl","fromEl","extraEventProperties","onName","charAt","CustomEvent","createEvent","initEvent","bubbles","cancelable","pullMode","lastPutMode","allEventProperties","dispatchEvent","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","_prepareGroup","toFn","pull","group","otherGroup","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","nearest","touches","clientX","clientY","threshold","emptyInsertThreshold","rect","ret","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","animationCallbackId","animationStates","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","Number","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","captureAnimationState","child","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","arr","animateAll","clearTimeout","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","sqrt","pow","animationResetTimer","currentRect","translateX","translateY","animatingX","animatingY","forRepaintDummy","offsetWidth","animated","_onMove","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_generateId","str","src","href","sum","charCodeAt","_nextTick","_cancelNextTick","id","contains","_getDirection","touch","pointerType","originalTarget","shadowRoot","path","composedPath","inputs","idx","checked","button","isContentEditable","criteria","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","dx","dy","cssMatrix","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","vertical","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","changed","firstChild","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","targetS1Opp","side1","scrolledPastTop","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","dragIndex","nextElementSibling","after","moveVector","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","removeChild","handleEvent","dropEffect","toArray","order","useAnimation","items","set","destroy","Array","querySelectorAll","removeAttribute","utils","is","extend","dst","nextTick","cancelNextTick","detectDirection","_len","_key","create","version","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","clearAutoScrolls","autoScroll","pid","clearPointerElemChangedInterval","isFallback","scroll","scrollCustomFn","sens","scrollSensitivity","speed","scrollSpeed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","bubbleScroll","drop","toSortable","changedTouches","onSpill","Revert","Remove","startIndex","dragStart","_ref2","_ref3","_ref4","parentSortable","AutoScroll","forceAutoScrollFallback","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","dragOverBubble","nulling","ogElemScroller","newElem","GLOBALS","SortablejsBinding","isFormArray","insert","at","removeAt","SortablejsBindings","bindingTargets","bindings","remove","SortablejsService","ɵfac","ɵprov","factory","token","providedIn","SortablejsDirective","globalConfig","service","zone","sortablejsInit","changes","optionsChange","sortablejsOptions","isFirstChange","previousOptions","previousValue","currentOptions","optionName","sortableInstance","sortablejsContainer","nativeElement","querySelector","emit","sortablejs","optionsWithoutEvents","overridenOptions","params","run","sortablejsCloneFunction","subitem","onAdd","transfer","getBindings","injectIntoEvery","proxyEvent","onRemove","provided","isCloning","getFromEvery","extractFromEvery","onUpdate","indexes","new","old","ɵdir","selectors","outputs","features","SortablejsModule","globalOptions","ngModule","providers","provide","useValue","ɵmod","ɵinj","class","OperationsListComponent","isToolBarSticky","sourceOptions","setStickyClass","myFunction","pageYOffset","sticky","operationsToolBar","offsetVal","OperationsUiContainerComponent","iterableDiffers","selectedOperation","targetOptions","onOperationRemoved","iterableDiffer","diff","opVal","collection","isPanelExpanded","CreateExperimentComponent","operations","selectedOperationsArray","checkExecuteSequence","modeType","temp","isSticky","opUiContainer","add","open","afterClosed","setOperationContainerUiMargin","PipelineSettingsDialogComponent","_pipelineSettingsDialog","fb","pipelineSettingsControl","valueFromUser","form","array","selectedVal","checkboxData","_checked","controls","setPipelineSettings","PosTaggingComponent","_dashboardService","_utils","postTagList","tagsName","tagsValue","showOutput","uploadModelIssueMsg","binColor","showTextError","posModelControl","posTagsControl","graphIconColor","pipelineSetting","removeFeatureCheckBoxVal","setConcatenate","setCountTag","posPipelineSettingsList","pipeSettingName","pipeSettingTag","gettaModelsList","taskType","foundModel","taModel","taModelList","modelList","model","modelName","oldModelFileName","JSON","stringify","onSubmit","modelData","tagsData","renderType","getInputData","modelInfo","operationParameters","keepTags","addFeature","posPipelineSettingValue","modelPath","framework","frameWork","pos","broadcastSubmitEvent","loadVal","removeFeature","removeOperation","minWidth","getSavedOperationOutput","mouseOverBin","mouseLeaveBin","showPipelineSetting","TextSummarizationComponent","modelsList","modelKey","informationRetained","copyColor","tooltipText","textSummarizationModelControl","minSequence","maxSequence","copyOutput","textToCopyElement","getElementById","innerText","dummyElem","select","execCommand","sliderVal","errorMessage","summarizeParam","t5minlength","t5maxlength","textSummarization","SentimentAnalysisComponent","sentimentAnalysisModelControl","setSubjectivityAsFeature","setSentimentAsFeature","sentimentAnalysisPipelineSettingsList","sentimentAnalysisParams","sentimentAnalysisPipelineSettingValue","sentimentAnalysis","NerComponent","_router","_guideDetails","nerUploadModelIssueMsg","tags","isDisabled","nerModelControl","nerTagsControl","guideList","nerPipelineSettingsList","tagData","pipelineSettingValue","ner","valueChanges","modelVal","setNerLabels","foundNerModel","nerLabels","setDefaults","Plotly","WordFrequencyComponent","wordFrequency","showValidationError","wordFreqSliderVal","fileDetails","input","configData","colName","maxWords","wordConfig","graphDiv","deleteTraces","layout","template","xanchor","yanchor","autosize","plot","WordEmbeddingComponent","trainingAlgorithmList","algorithmName","functionsList","functionName","wordVectorSliderVal","learningRate","wordEmbedding","showTableOutput","showTextOutput","tableHeading","wordEmbeddingModelControl","wordEmbeddingTrainingAlgoControl","wordEmbeddingFunctionsControl","input1FormControl","input2FormControl","wordEmbeddingPipelineSettingsList","trainingData","methodData","input1","input2","wordEmbeddingParam","wordVector","trainingAlgorithm","method","wordEmbeddingPipelineSettingValue","toFixed","score","algo","resetControls","selectedMethod","algorithm","functions","onModelChange","TextCleaningComponent","cleaningOperations","operationKey","testCleaningControl","showRemoveWordsSlider","cleaningOperationsDbData","countOfWordsToRemove","selectedValue","param","removeWordsCount","cleanOperation","doc","textCleaning","RuleBasedMatchingComponent","showPatternError","posTagList","attributesList","attributeName","attributeType","wildCard","phrase","rbmPipelineSettingsList","patternBinColor","tokenBinColor","rbmControl","rbmModel","patternsArray","rbmPipelineSettingValue","patchValue","patterns","phrases","tokens","tokenVal","attributeVal","attrVal","attributeLabel","attributeValue","patternCard","patternList","tokenCard","origin","maxWidth","rbmFormData","ruleBasedMatch","addPattern","routes","component","TextAnalysisModule","forRoot","forChild","EdaReportComponent","dialogData","serverBaseUrl","edaReportData","moduleName","safeUrl","dataId","edaId","TextAnalysisService","_http","delete","taExperimentId","post","EasyPieChart","EasypiechartDirective","pieChart"],"mappings":"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","file":"x","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n/**\n * Removes the extesion from a filename\n * Accepts file name as a parameter\n * Usage:\n *  value|dropFileExtension\n * Example:\n *  {{ 'example.txt' | dropFileExtension: fileSource }}\n *  formats to example\n */\n@Pipe({ name: 'dropFileExtension' })\nexport class DropFileExtensionPipe implements PipeTransform {\n  transform(value: string, fileSource: string) {\n    return fileSource && value ? value.substr(0, value.lastIndexOf('.')) : value;\n  }\n}\n","/**!\n * easy-pie-chart\n * Lightweight plugin to render simple, animated and retina optimized pie charts\n *\n * @license \n * @author Robert Fleischmann <rendro87@gmail.com> (http://robert-fleischmann.de)\n * @version 2.1.7\n **/\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function () {\n      return (root['EasyPieChart'] = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['EasyPieChart'] = factory();\n  }\n}(this, function () {\n\n/**\n * Renderer to render the chart on a canvas object\n * @param {DOMElement} el      DOM element to host the canvas (root of the plugin)\n * @param {object}     options options object of the plugin\n */\nvar CanvasRenderer = function(el, options) {\n\tvar cachedBackground;\n\tvar canvas = document.createElement('canvas');\n\n\tel.appendChild(canvas);\n\n\tif (typeof(G_vmlCanvasManager) === 'object') {\n\t\tG_vmlCanvasManager.initElement(canvas);\n\t}\n\n\tvar ctx = canvas.getContext('2d');\n\n\tcanvas.width = canvas.height = options.size;\n\n\t// canvas on retina devices\n\tvar scaleBy = 1;\n\tif (window.devicePixelRatio > 1) {\n\t\tscaleBy = window.devicePixelRatio;\n\t\tcanvas.style.width = canvas.style.height = [options.size, 'px'].join('');\n\t\tcanvas.width = canvas.height = options.size * scaleBy;\n\t\tctx.scale(scaleBy, scaleBy);\n\t}\n\n\t// move 0,0 coordinates to the center\n\tctx.translate(options.size / 2, options.size / 2);\n\n\t// rotate canvas -90deg\n\tctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);\n\n\tvar radius = (options.size - options.lineWidth) / 2;\n\tif (options.scaleColor && options.scaleLength) {\n\t\tradius -= options.scaleLength + 2; // 2 is the distance between scale and bar\n\t}\n\n\t// IE polyfill for Date\n\tDate.now = Date.now || function() {\n\t\treturn +(new Date());\n\t};\n\n\t/**\n\t * Draw a circle around the center of the canvas\n\t * @param {strong} color     Valid CSS color string\n\t * @param {number} lineWidth Width of the line in px\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\n\t */\n\tvar drawCircle = function(color, lineWidth, percent) {\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\n\t\tvar isNegative = percent <= 0 ? true : false;\n\n\t\tctx.beginPath();\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\n\n\t\tctx.strokeStyle = color;\n\t\tctx.lineWidth = lineWidth;\n\n\t\tctx.stroke();\n\t};\n\n\t/**\n\t * Draw the scale of the chart\n\t */\n\tvar drawScale = function() {\n\t\tvar offset;\n\t\tvar length;\n\n\t\tctx.lineWidth = 1;\n\t\tctx.fillStyle = options.scaleColor;\n\n\t\tctx.save();\n\t\tfor (var i = 24; i > 0; --i) {\n\t\t\tif (i % 6 === 0) {\n\t\t\t\tlength = options.scaleLength;\n\t\t\t\toffset = 0;\n\t\t\t} else {\n\t\t\t\tlength = options.scaleLength * 0.6;\n\t\t\t\toffset = options.scaleLength - length;\n\t\t\t}\n\t\t\tctx.fillRect(-options.size/2 + offset, 0, length, 1);\n\t\t\tctx.rotate(Math.PI / 12);\n\t\t}\n\t\tctx.restore();\n\t};\n\n\t/**\n\t * Request animation frame wrapper with polyfill\n\t * @return {function} Request animation frame method or timeout fallback\n\t */\n\tvar reqAnimationFrame = (function() {\n\t\treturn  window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t}());\n\n\t/**\n\t * Draw the background of the plugin including the scale and the track\n\t */\n\tvar drawBackground = function() {\n\t\tif(options.scaleColor) drawScale();\n\t\tif(options.trackColor) drawCircle(options.trackColor, options.trackWidth || options.lineWidth, 1);\n\t};\n\n  /**\n    * Canvas accessor\n   */\n  this.getCanvas = function() {\n    return canvas;\n  };\n\n  /**\n    * Canvas 2D context 'ctx' accessor\n   */\n  this.getCtx = function() {\n    return ctx;\n  };\n\n\t/**\n\t * Clear the complete canvas\n\t */\n\tthis.clear = function() {\n\t\tctx.clearRect(options.size / -2, options.size / -2, options.size, options.size);\n\t};\n\n\t/**\n\t * Draw the complete chart\n\t * @param {number} percent Percent shown by the chart between -100 and 100\n\t */\n\tthis.draw = function(percent) {\n\t\t// do we need to render a background\n\t\tif (!!options.scaleColor || !!options.trackColor) {\n\t\t\t// getImageData and putImageData are supported\n\t\t\tif (ctx.getImageData && ctx.putImageData) {\n\t\t\t\tif (!cachedBackground) {\n\t\t\t\t\tdrawBackground();\n\t\t\t\t\tcachedBackground = ctx.getImageData(0, 0, options.size * scaleBy, options.size * scaleBy);\n\t\t\t\t} else {\n\t\t\t\t\tctx.putImageData(cachedBackground, 0, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.clear();\n\t\t\t\tdrawBackground();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.clear();\n\t\t}\n\n\t\tctx.lineCap = options.lineCap;\n\n\t\t// if barcolor is a function execute it and pass the percent as a value\n\t\tvar color;\n\t\tif (typeof(options.barColor) === 'function') {\n\t\t\tcolor = options.barColor(percent);\n\t\t} else {\n\t\t\tcolor = options.barColor;\n\t\t}\n\n\t\t// draw bar\n\t\tdrawCircle(color, options.lineWidth, percent / 100);\n\t}.bind(this);\n\n\t/**\n\t * Animate from some percent to some other percentage\n\t * @param {number} from Starting percentage\n\t * @param {number} to   Final percentage\n\t */\n\tthis.animate = function(from, to) {\n\t\tvar startTime = Date.now();\n\t\toptions.onStart(from, to);\n\t\tvar animation = function() {\n\t\t\tvar process = Math.min(Date.now() - startTime, options.animate.duration);\n\t\t\tvar currentValue = options.easing(this, process, from, to - from, options.animate.duration);\n\t\t\tthis.draw(currentValue);\n\t\t\toptions.onStep(from, to, currentValue);\n\t\t\tif (process >= options.animate.duration) {\n\t\t\t\toptions.onStop(from, to);\n\t\t\t} else {\n\t\t\t\treqAnimationFrame(animation);\n\t\t\t}\n\t\t}.bind(this);\n\n\t\treqAnimationFrame(animation);\n\t}.bind(this);\n};\n\nvar EasyPieChart = function(el, opts) {\n\tvar defaultOptions = {\n\t\tbarColor: '#ef1e25',\n\t\ttrackColor: '#f9f9f9',\n\t\tscaleColor: '#dfe0e0',\n\t\tscaleLength: 5,\n\t\tlineCap: 'round',\n\t\tlineWidth: 3,\n\t\ttrackWidth: undefined,\n\t\tsize: 110,\n\t\trotate: 0,\n\t\tanimate: {\n\t\t\tduration: 1000,\n\t\t\tenabled: true\n\t\t},\n\t\teasing: function (x, t, b, c, d) { // more can be found here: http://gsgd.co.uk/sandbox/jquery/easing/\n\t\t\tt = t / (d/2);\n\t\t\tif (t < 1) {\n\t\t\t\treturn c / 2 * t * t + b;\n\t\t\t}\n\t\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\n\t\t},\n\t\tonStart: function(from, to) {\n\t\t\treturn;\n\t\t},\n\t\tonStep: function(from, to, currentValue) {\n\t\t\treturn;\n\t\t},\n\t\tonStop: function(from, to) {\n\t\t\treturn;\n\t\t}\n\t};\n\n\t// detect present renderer\n\tif (typeof(CanvasRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = CanvasRenderer;\n\t} else if (typeof(SVGRenderer) !== 'undefined') {\n\t\tdefaultOptions.renderer = SVGRenderer;\n\t} else {\n\t\tthrow new Error('Please load either the SVG- or the CanvasRenderer');\n\t}\n\n\tvar options = {};\n\tvar currentValue = 0;\n\n\t/**\n\t * Initialize the plugin by creating the options object and initialize rendering\n\t */\n\tvar init = function() {\n\t\tthis.el = el;\n\t\tthis.options = options;\n\n\t\t// merge user options into default options\n\t\tfor (var i in defaultOptions) {\n\t\t\tif (defaultOptions.hasOwnProperty(i)) {\n\t\t\t\toptions[i] = opts && typeof(opts[i]) !== 'undefined' ? opts[i] : defaultOptions[i];\n\t\t\t\tif (typeof(options[i]) === 'function') {\n\t\t\t\t\toptions[i] = options[i].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check for jQuery easing\n\t\tif (typeof(options.easing) === 'string' && typeof(jQuery) !== 'undefined' && jQuery.isFunction(jQuery.easing[options.easing])) {\n\t\t\toptions.easing = jQuery.easing[options.easing];\n\t\t} else {\n\t\t\toptions.easing = defaultOptions.easing;\n\t\t}\n\n\t\t// process earlier animate option to avoid bc breaks\n\t\tif (typeof(options.animate) === 'number') {\n\t\t\toptions.animate = {\n\t\t\t\tduration: options.animate,\n\t\t\t\tenabled: true\n\t\t\t};\n\t\t}\n\n\t\tif (typeof(options.animate) === 'boolean' && !options.animate) {\n\t\t\toptions.animate = {\n\t\t\t\tduration: 1000,\n\t\t\t\tenabled: options.animate\n\t\t\t};\n\t\t}\n\n\t\t// create renderer\n\t\tthis.renderer = new options.renderer(el, options);\n\n\t\t// initial draw\n\t\tthis.renderer.draw(currentValue);\n\n\t\t// initial update\n\t\tif (el.dataset && el.dataset.percent) {\n\t\t\tthis.update(parseFloat(el.dataset.percent));\n\t\t} else if (el.getAttribute && el.getAttribute('data-percent')) {\n\t\t\tthis.update(parseFloat(el.getAttribute('data-percent')));\n\t\t}\n\t}.bind(this);\n\n\t/**\n\t * Update the value of the chart\n\t * @param  {number} newValue Number between 0 and 100\n\t * @return {object}          Instance of the plugin for method chaining\n\t */\n\tthis.update = function(newValue) {\n\t\tnewValue = parseFloat(newValue);\n\t\tif (options.animate.enabled) {\n\t\t\tthis.renderer.animate(currentValue, newValue);\n\t\t} else {\n\t\t\tthis.renderer.draw(newValue);\n\t\t}\n\t\tcurrentValue = newValue;\n\t\treturn this;\n\t}.bind(this);\n\n\t/**\n\t * Disable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.disableAnimation = function() {\n\t\toptions.animate.enabled = false;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Enable animation\n\t * @return {object} Instance of the plugin for method chaining\n\t */\n\tthis.enableAnimation = function() {\n\t\toptions.animate.enabled = true;\n\t\treturn this;\n\t};\n\n\tinit();\n};\n\nreturn EasyPieChart;\n\n}));\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TaDataStoreService {\n  taData: Array<any> = [];\n  validOperations: Array<any> = [\n    \"inputData\",\n    \"cleaningTransformation\",\n    \"textSummarization\",\n  ];\n\n  public onSubmitEventSubject: BehaviorSubject<string> =\n    new BehaviorSubject<string>(\"\");\n\n  constructor() { }\n\n  //function to emit the event for updating the input bar for all the components\n  public broadcastSubmitEvent(eventStatusTxt: string): void {\n    this.onSubmitEventSubject.next(eventStatusTxt);\n  }\n\n  cleartaData() {\n    this.taData = [];\n  }\n\n  //function to set db data to tadata array\n  setExperimentsData(data) {\n    this.taData.push(data);\n  }\n\n  //function to get saved operations output\n  getSavedOperationOutput(uid) {\n    let foundIndex = this.taData.findIndex((item) => item.uid == uid);\n    return this.taData[foundIndex];\n  }\n\n  saveOperationOutput(opData) {\n    let foundIndex = this.taData.findIndex((item) => item.uid == opData.uid);\n    //add new data if inputData does not exist\n    if (foundIndex == -1) {\n      this.taData.push(opData);\n    } else {\n      //update inputdata if it exists\n      this.taData[foundIndex] = opData;\n    }\n    this.getFirstInputData();\n  }\n\n  //Function to get operation data\n  getFirstInputData() {\n    return this.taData[0];\n  }\n\n  //Function to fetch inputData for the current operation based on previous operation\n  getInputData(operation) {\n    let inputItem = null;\n    //always want input to be the taData[0] for word embedding, hence checking the operation and if it is wordembedding setting inputItem as taData[0].\n    if (operation.operation === \"wordEmbedding\") {\n      inputItem = this.taData[0];\n    } else {\n      let operationIndex = this.taData.findIndex((item) => {\n        return item.uid == operation.uid;\n      });\n      let tempDataArray =\n        operationIndex !== -1\n          ? [...this.taData.slice(0, operationIndex)]\n          : [...this.taData];\n      tempDataArray.reverse().some((item) => {\n        if (\n          this.validOperations.includes(item.operation) &&\n          item.uid != operation.uid\n        ) {\n          inputItem = item;\n          return true;\n        }\n      });\n    }\n    return inputItem;\n  }\n\n  //function to remove an operation from data store\n  removeOperation(operation) {\n    this.taData = this.taData.filter((item) => {\n      return item.uid !== operation.uid;\n    });\n  }\n\n  //function to get taData\n  getAllOperationData(removeFilter?: any) {\n    let operationData = this.taData;\n    if (!removeFilter) {\n      operationData = operationData.filter((item) => {\n        return item.operation !== \"inputData\";\n      });\n    }\n    return operationData;\n  }\n\n  // function for re-ordering the operations\n  orderOperationData(operationData, type) {\n    if (type == \"reoder\" && this.taData.length > 1) {\n      let input = this.taData[0];\n      let result = [];\n      result.push(input);\n      operationData.forEach((element) => {\n        let data = this.taData.find((item) => {\n          return item.operation == element.operation;\n        });\n        if (data) {\n          result.push(data);\n        }\n      });\n      this.taData = result;\n    }\n  }\n}\n","<!-- Main container -->\n<div class=\"fluid-container font-weight-lighter\">\n  <!-- HEADER -->\n  <mat-card class=\"heading\">\n    <mat-card-header>\n      <div mat-card-avatar>\n        <mat-icon class=\"folder-icon\">analytics</mat-icon>\n      </div>\n      <mat-card-title>\n        <h3 class=\"heading-title\">Text Analysis</h3>\n      </mat-card-title>\n      <!-- BUTTON (new experiment) -->\n      <button\n        mat-raised-button\n        class=\"btn-primary ml-auto\"\n        matTooltip=\"Create experiment\"\n        *ngIf=\"project.type != 'timeseries'\"\n        (click)=\"gotoCreate()\"\n      >\n        Create\n      </button>\n    </mat-card-header>\n  </mat-card>\n\n  <!-- FIRST TIME -->\n  <h4 *ngIf=\"!dataSource.data.length\" class=\"text-center mt-5 font-weight-normal\">\n    You haven't created any experiment yet,\n    <a class=\"text-decoration-none\" href=\"#\" (click)=\"gotoCreate()\">create now.</a>\n  </h4>\n\n  <!-- LABEL (not available) -->\n  <h4 *ngIf=\"project.type === 'timeseries'\" class=\"text-center mt-5 font-weight-normal\">\n    Text analysis is not available in forecasting project.\n  </h4>\n\n  <!-- TABLE (text analysis listing) -->\n  <mat-card\n    class=\"setting-listing mt-5 ps-4\"\n    *ngIf=\"project.type !== 'timeseries' && dataSource.data.length\"\n  >\n    <mat-card-content>\n      <!-- Search bar -->\n      <mat-form-field class=\"search-input\">\n        <mat-label>Search</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" #input />\n      </mat-form-field>\n      <!-- Progress Spinner -->\n      <app-progress-spinner class=\"spinner\" *ngIf=\"showSpinner\"></app-progress-spinner>\n      <table\n        mat-table\n        [dataSource]=\"dataSource\"\n        #taSort=\"matSort\"\n        matSort\n        matSortActive=\"createdAt\"\n        matSortDirection=\"desc\"\n        matSortDisableClear\n        class=\"mt-2\"\n      >\n        <!-- Sr. No Column -->\n        <ng-container matColumnDef=\"srNo\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let row; let i = index\">\n            {{ i + 1 + exListPaginator.pageIndex * exListPaginator.pageSize }}\n          </td>\n        </ng-container>\n\n        <!-- experiment name Column -->\n        <ng-container matColumnDef=\"experimentName\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Experiment Name</th>\n          <td\n            mat-cell\n            *matCellDef=\"let row\"\n            (click)=\"setExperimentsData(row, 'viewMode')\"\n            style=\"cursor: pointer\"\n          >\n            {{ row.experimentName }}\n          </td>\n        </ng-container>\n\n        <!-- experiment id Column -->\n        <ng-container matColumnDef=\"experimentId\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Experiment Id</th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row._id }}\n          </td>\n        </ng-container>\n\n        <!-- status Column -->\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row.status }}\n          </td>\n        </ng-container>\n\n        <!-- Created At Column -->\n        <ng-container matColumnDef=\"createdAt\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Created At</th>\n          <td mat-cell *matCellDef=\"let row\">\n            {{ row.createdAt | date: 'medium' }}\n          </td>\n        </ng-container>\n\n        <!-- Actions Column -->\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let row\">\n            <div class=\"action-buttons d-flex\">\n              <button\n                mat-icon-button\n                (click)=\"setExperimentsData(row)\"\n                matTooltip=\"Clone experiment\"\n              >\n                <i class=\"far fa-copy\"></i>\n              </button>\n              <!-- Delete button -->\n              <button\n                class=\"delete-button\"\n                (click)=\"deleteHandler(row)\"\n                mat-icon-button\n                matTooltip=\"Delete experiment\"\n              >\n                <i class=\"fa fa-trash\"></i>\n              </button>\n            </div>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td class=\"mat-cell\" colspan=\"4\" *ngIf=\"input.value != ''\">\n            No data matching the filter \"{{ input.value }}\"\n          </td>\n          <td class=\"mat-cell\" colspan=\"4\" *ngIf=\"input.value == ''\">No data available in table</td>\n        </tr>\n      </table>\n      <!-- Paginator -->\n      <mat-paginator\n        #exListPaginator\n        class=\"mt-2\"\n        [pageSizeOptions]=\"pageSizeOptions\"\n      ></mat-paginator>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { TextAnalysisService } from \"./../text-analysis.service\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatSort } from \"@angular/material/sort\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { SafeResourceUrl, DomSanitizer } from \"@angular/platform-browser\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Subject } from \"rxjs\";\nimport { LocalStorageService } from \"src/app/shared/local-storage.service\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { SchedularService } from \"../../dashboard/schedular/schedular.service\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { TaDataStoreService } from \"../ta-datastore.service\";\nimport { Router } from \"@angular/router\";\n\nconst swal = require(\"sweetalert\");\n\n@Component({\n  selector: 'app-experiments-list',\n  templateUrl: './experiments-list.component.html',\n  styleUrls: ['./experiments-list.component.scss'],\n})\nexport class ExperimentsListComponent implements OnInit {\n  /** Data table settings */\n  dataSource: MatTableDataSource<[]> = new MatTableDataSource();\n  @ViewChild('exListPaginator') set paginator(value: MatPaginator) {\n    this.dataSource.paginator = value;\n  }\n  @ViewChild('taSort') set sort(value: MatSort) {\n    this.dataSource.sort = value;\n  }\n  pageSizeOptions: Array<number> = [10, 15, 20];\n  displayedColumns: Array<string> = [];\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n\n  showSpinner: boolean = false;\n  user: any;\n  project: any;\n  experimentMode: any;\n  experimentsArray: Array<any>;\n\n  constructor(\n    private _toaster: ToastrService,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _dialog: MatDialog,\n    private _sanitizer: DomSanitizer,\n    private _textAnalysis: TextAnalysisService,\n    private _taDataStore: TaDataStoreService,\n    private _schedular: SchedularService,\n    private route: Router\n  ) {\n    this.project = this._localStorage.getItem('project');\n    this.user = this._localStorage.getItem('user');\n    this.displayedColumns = [\n      'srNo',\n      'experimentName',\n      'experimentId',\n      'status',\n      'createdAt',\n      'actions',\n    ];\n  }\n\n  ngOnInit(): void {\n    // this._spinner.showSpinner();\n    this.getExperimentsList();\n  }\n\n  getExperimentsList(): void {\n    this._textAnalysis\n      .experimentList(this.project._id)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          this._spinner.stopSpinner();\n          if (res) {\n            this.experimentsArray = res;\n            this.dataSource.data = res;\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n            this.dataSource._updateChangeSubscription();\n          } else {\n            this._toaster.error('Cannot fetch experiments', 'Drift Settings');\n          }\n        },\n        (err: Error) => {\n          this._spinner.stopSpinner();\n          this._toaster.error('Server Error', 'Text Analysis');\n        }\n      );\n  }\n\n  /**\n   * function to delete the experiment from the db\n   * @param experimentsData\n   */\n  deleteHandler(experimentsData: any): void {\n    swal({\n      title: 'Are you sure?',\n      text: 'You will not be able to recover this experiment!',\n      icon: 'warning',\n      buttons: {\n        cancel: {\n          text: 'Cancel',\n          value: null,\n          visible: true,\n          className: '',\n        },\n        confirm: {\n          text: 'Yes, delete it!',\n          value: true,\n          visible: true,\n          className: 'bg-danger',\n        },\n      },\n    }).then((isConfirm: boolean) => {\n      if (isConfirm) {\n        this.showSpinner = true;\n        this._textAnalysis.deleteExperiment(this.project._id, experimentsData._id).subscribe(\n          (res: any) => {\n            if (res) {\n              this.experimentsArray = this.experimentsArray.filter(\n                (item) => item._id !== experimentsData._id\n              );\n              this.dataSource.data = this.experimentsArray;\n              this.dataSource._updateChangeSubscription();\n              this._toaster.success(\n                `${experimentsData.experimentName} deleted successfully`,\n                'Text Analysis'\n              );\n            } else {\n              this._toaster.error('Cannot delete the experiment', 'Text Analysis');\n            }\n            this.showSpinner = false;\n          },\n          (err: Error) => {\n            this.showSpinner = false;\n            this._toaster.error('Server Error', 'Text Analysis');\n          }\n        );\n      }\n    });\n  }\n\n  clearTaData(): void {\n    this._taDataStore.cleartaData();\n  }\n\n  //deleting the experiment mode key from localstorage and then routing to the create-exp page\n  gotoCreate(): void {\n    this._localStorage.deleteItem('experimentMode');\n    this.clearTaData();\n    this._spinner.stopSpinner();\n    this.route.navigate(['/project/textanalysis/create-experiment']);\n  }\n\n  //function to call service method to store the model data for exeriments\n  setExperimentsData(operationsData: any, mode?: any): void {\n    this.clearTaData();\n    //checking the mode for showing or hiding the save exp btn\n    if (mode) {\n      this.experimentMode = mode;\n      this._localStorage.setItem('experimentMode', this.experimentMode);\n    } else {\n      this._localStorage.deleteItem('experimentMode');\n    }\n\n    // this.onChangeDataset(operationsData.fileId, true, operationsData.feature);\n    let inputDataForOperations: any = {\n      uid: 1,\n      featureName: operationsData.feature,\n      fileId: operationsData.fileId,\n      operation: 'inputData',\n      output: operationsData.inputText,\n      experimentName: operationsData.experimentName,\n    };\n\n    // if (this.selectedDataSetVal) {\n    //   inputDataForOperations.fileName = this.selectedDataSetVal.name;\n    // }\n    this._taDataStore.setExperimentsData(inputDataForOperations);\n    operationsData.taskConfig.forEach((operation) => {\n      let dataToSave = {\n        uid: operation.uid,\n        operation: operation.operationName,\n        taskConfig: operation.parameters,\n      };\n      this._taDataStore.setExperimentsData(dataToSave);\n    });\n    this._spinner.stopSpinner();\n    //nevigating to create-exp page with expId as stateparam\n    this.route.navigate(['/project/textanalysis/create-experiment'], {\n      queryParams: { experimentId: operationsData._id },\n    });\n  }\n\n  /**\n   * Called when any string is entered in search box\n   * @param event keyup event\n   */\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  /**\n   * Unsubscribes the subscriptions after destroy\n   */\n  ngOnDestroy() {\n    this.unsubscribe$.next(false);\n    this.unsubscribe$.unsubscribe();\n  }\n}\n","<h1 mat-dialog-title>\n  {{ dialogTitle }}\n  <span style=\"float: right; cursor: pointer\"\n    ><a [href]=\"graphFileUrl\" [download]=\"graphFileName\" style=\"color: black\">\n      <mat-icon\n        class=\"fas fa-download\"\n        [color]=\"downloadIconColor\"\n        (mouseover)=\"mouseOverDownload()\"\n        (mouseleave)=\"mouseLeaveDownload()\"\n        #tooltip=\"matTooltip\"\n        matTooltip=\"Download File\"\n        matTooltipPosition=\"above\"\n        matTooltipHideDelay=\"1000\"\n        style=\"font-size: 16px\"\n        *ngIf=\"data.showGraph && !showSaveError\"\n      ></mat-icon></a\n    >&nbsp;&nbsp;&nbsp;&nbsp;\n    <i\n      mat-dialog-close\n      id=\"times-close-icon\"\n      *ngIf=\"!data.showGraph\"\n      style=\"float: right; font-size: 16px; cursor: pointer\"\n      class=\"fa fa-times\"\n    ></i>\n  </span>\n</h1>\n<div mat-dialog-content>\n  <mat-form-field\n    *ngIf=\"!data.showGraph && !showSaveError\"\n    style=\"height: 70px\"\n  >\n    <mat-label\n      [innerText]=\"\n        saveDialogControl.value ? 'Experiment Name' : 'Add a name to experiment'\n      \"\n    ></mat-label>\n    <input matInput [formControl]=\"saveDialogControl\" />\n    <mat-error\n      *ngIf=\"\n        saveDialogControl.touched && saveDialogControl.hasError('required')\n      \"\n      >Experiment name is required.</mat-error\n    >\n  </mat-form-field>\n  <div\n    [innerHTML]=\"graphContent\"\n    *ngIf=\"data.showGraph && !showSaveError\"\n    style=\"min-height: 70vh\"\n  ></div>\n  <div\n    style=\"color: red; text-align: center\"\n    *ngIf=\"showSaveError && !showExecutionError\"\n  >\n    Please perform some experiments to save !\n  </div>\n  <div\n    style=\"color: red; text-align: center\"\n    *ngIf=\"showSaveError && showExecutionError\"\n  >\n    Please execute the experiments to save !\n  </div>\n</div>\n<div mat-dialog-actions style=\"margin-top: 10px\">\n  <button\n    id=\"saveBtn\"\n    mat-raised-button\n    *ngIf=\"data.showGraph && !showSaveError\"\n    mat-dialog-close\n    cdkFocusInitial\n  >\n    Close\n  </button>\n  <button\n    id=\"saveBtn\"\n    mat-raised-button\n    [disabled]=\"\n      saveDialogControl.hasError('required') &&\n      saveDialogControl.hasError('required')\n    \"\n    (click)=\"saveExperiment(saveDialogControl)\"\n    *ngIf=\"!data.showGraph && !showSaveError\"\n    cdkFocusInitial\n  >\n    Save\n  </button>\n  <button\n    id=\"saveAndApplyBtn\"\n    mat-raised-button\n    *ngIf=\"!data.showGraph && showSaveApplybtn && !showSaveError\"\n    [disabled]=\"\n      saveDialogControl.hasError('required') &&\n      saveDialogControl.hasError('required')\n    \"\n    (click)=\"saveAndApplyExperiment(saveDialogControl)\"\n    cdkFocusInitial\n  >\n    Save and Apply</button\n  >&nbsp;&nbsp;&nbsp;&nbsp;<mat-hint *ngIf=\"!data.showGraph && showSaveApplybtn && !showSaveError\"\n    >Note: Save and apply button will save the experiment and apply the changes\n    to the dataset.</mat-hint\n  >\n</div>\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { LocalStorageService } from \"src/app/shared/local-storage.service\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { TaDataStoreService } from \"../ta-datastore.service\";\nimport { TextAnalysisService } from \"../text-analysis.service\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { CreateExperimentComponent } from \"../create-experiment/create-experiment.component\";\nimport { SocketIoService } from \"src/app/core/socket-io.service\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Component({\n  selector: \"app-text-analysis-dialog\",\n  templateUrl: \"./text-analysis-dialog.component.html\",\n  styleUrls: [\"./text-analysis-dialog.component.scss\"],\n})\nexport class TextAnalysisDialogComponent implements OnInit {\n  saveDialogControl = new FormControl(\"\", Validators.required);\n  project: any;\n  user: any;\n  operationData: any;\n  showSaveApplybtn: Boolean = false;\n  inputData: string;\n  inputFileId: any;\n  featureName: string;\n  inputFileName: string;\n  dataSetDbObj: any;\n  childFileData: any;\n  graphContent: any;\n  dialogTitle: string = null;\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n  showSaveError: boolean = false;\n  showExecutionError = false;\n  downloadIconColor: string = \"basic\";\n  graphFileUrl: any;\n  graphFileName: string = null;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { data: any; showGraph: string },\n    private route: Router,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _taDataStore: TaDataStoreService,\n    private _textAnalysis: TextAnalysisService,\n    private _toaster: ToastrService,\n    private _textAnalysisDialog: MatDialogRef<CreateExperimentComponent>,\n    private _socket: SocketIoService,\n    private _sanitizer: DomSanitizer\n  ) {\n    this.project = this._localStorage.getItem(\"project\");\n    this.user = this._localStorage.getItem(\"user\");\n    this.downloadGraph(data.showGraph);\n  }\n\n  ngOnInit(): void {\n    this._spinner.showSpinner();\n    if (!this.data.showGraph) {\n      this.dialogTitle = \"Save Experiment\";\n      this.initSocket();\n      this.operationData = this._taDataStore.getAllOperationData(true);\n      if (this.operationData.length < 2) {\n        this.showSaveError = true;\n        this.showExecutionError = false;\n      } else if (!this.operationData.every((val) => val.output)) {\n        this.showSaveError = true;\n        this.showExecutionError = true;\n      } else {\n        this.showSaveError = false;\n        this.showExecutionError = false;\n        this.operationData.some((val) => {\n          if (val.operation === \"inputData\") {\n            if (!val.featureName) {\n              this.showSaveApplybtn = false;\n              this.featureName = null;\n            } else {\n              this.showSaveApplybtn = true;\n              this.featureName = val.featureName;\n            }\n            this.inputData = val.output;\n            this.inputFileName = val.fileName;\n            this.inputFileId = val.fileId;\n            this.dataSetDbObj = val.dataSetVal;\n            this.childFileData = val.childFileData;\n          }\n        });\n      }\n    } else {\n      if (this.data.showGraph == \"pos\") {\n        this.dialogTitle = \"Dependency Graph\";\n      } else if (this.data.showGraph == \"rbm\") {\n        this.dialogTitle = \"Matching Visualization\";\n      } else if (this.data.showGraph == \"ner\") {\n        this.dialogTitle = \"Named Entity Visualization\";\n      } else {\n        this.dialogTitle = \"Save Experiment\";\n      }\n\n      this.graphContent = this._sanitizer.bypassSecurityTrustHtml(\n        this.data.data\n      );\n    }\n    this._spinner.stopSpinner();\n  }\n\n  mouseOverDownload(): void {\n    this.downloadIconColor = \"primary\";\n  }\n\n  mouseLeaveDownload(): void {\n    this.downloadIconColor = \"basic\";\n  }\n\n  /**\n   * function to download graph\n   */\n  downloadGraph = function (graphType: string) {\n    this.graphFileName = graphType + \"_graph.html\";\n    var file = new Blob([this.data.data], { type: \"application/html\" });\n    this.graphFileUrl = this._sanitizer.bypassSecurityTrustResourceUrl(\n      window.URL.createObjectURL(file)\n    );\n  };\n\n  saveExperiment(expName: FormControl): void {\n    this._spinner.showSpinner();\n    //taking all data except the input data.\n    this.operationData = this._taDataStore.getAllOperationData();\n    let operationConfig = this.operationData.map((item) => {\n      return item.taskConfig[0];\n    });\n    let operation = [];\n    this.operationData.map((item) => {\n      var data = {\n        uid: item.uid,\n        operationName: item.operation,\n        parameters: item.taskConfig[0],\n      };\n      operation.push(data);\n    });\n    let dataConfig: any = {\n      experimentName: expName.value,\n      projectId: this.project._id,\n      inputText: this.inputData,\n      taskConfig: operation,\n    };\n\n    dataConfig.fileId = this.inputFileId ? this.inputFileId : null;\n    dataConfig.feature = this.featureName ? this.featureName : null;\n    // dataConfig.experimentId = $stateParams.experimentId ? $stateParams.experimentId\n    //   : null;\n    this._textAnalysis\n      .saveTextAnalysis(dataConfig)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (resp: any) => {\n          expName.setValue(\"\");\n          this._textAnalysisDialog.close();\n          this._spinner.stopSpinner();\n          this.route.navigate([\"/project/textanalysis\"]);\n          this._spinner.stopSpinner();\n          this._toaster.success(\n            \"Text analysis saved successfully\",\n            \"Text Analysis\"\n          );\n        },\n        (err: Error) => {\n          this._spinner.stopSpinner();\n          this._toaster.error(\"Server Error\", \"Error saving text analysis\");\n        }\n      );\n  }\n\n  saveAndApplyExperiment(expName: FormControl): void {\n    this._spinner.showSpinner();\n    //taking all data except the input data.\n    this.operationData = this._taDataStore.getAllOperationData();\n    let operationConfig = this.operationData.map((item) => {\n      return item.taskConfig[0];\n    });\n    let operation = [];\n    this.operationData.map((item) => {\n      var data = {\n        uid: item.uid,\n        operationName: item.operation,\n        parameters: item.taskConfig[0],\n      };\n      operation.push(data);\n    });\n\n    let dataConfig: any = {\n      experimentName: expName.value,\n      projectId: this.project._id,\n      fileSource: \"textAnalysis\",\n      dataGroupId: this.dataSetDbObj.datagroup_id,\n      filePath: this.inputFileName,\n      fileId: this.inputFileId,\n      feature: this.featureName,\n      inputText: this.inputData,\n      fileSchema: this.dataSetDbObj.fileSchema,\n      featureList: [this.featureName],\n      taskConfig: operationConfig,\n      operation: operation,\n    };\n    //need to do waiting for the best time to start\n    if (this.childFileData?.hasOwnProperty('currentEdaId')) {\n      dataConfig.parentPipelineFilename =\n        this.childFileData.currentEdaId.tasks[0].currentPipelineFilename;\n    } else {\n      dataConfig.parentPipelineFilename = null;\n    }\n    // dataConfig.experimentId = $stateParams.experimentId? $stateParams.experimentId\n    //   : null;\n    this._textAnalysis\n      .saveApplyTextAnalysis(dataConfig)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (resp: any) => {\n          expName.reset();\n          // vm.featureSelect = false;\n          this._toaster.success(\"Text analysis started\", \"Text Analysis\");\n        },\n        (err: Error) => {\n          this._spinner.stopSpinner();\n          this._toaster.error(\"Server Error\", \"Error saving text analysis\");\n        }\n      );\n  }\n\n  /**\n   * Initializes the socket to listen events when emmited\n   */\n  initSocket(): void {\n    // Listens to node-red event\n    this._socket.listen(\"textAnalysisDone\").subscribe(\n      (res: any) => {\n        if (res.status.status === \"completed\") {\n          this._textAnalysisDialog.close();\n          this._spinner.stopSpinner();\n          this.route.navigate([\"/project/textanalysis\"]);\n          this._toaster.success(\n            \"Text analysis saved successfully\",\n            \"Text Analysis\"\n          );\n        } else if (res.status.status === \"failed\") {\n          this._textAnalysisDialog.close();\n          this._spinner.stopSpinner();\n          this.route.navigate([\"/project/textanalysis\"]);\n          this._toaster.error(\n            res.status.message,\n            \"Text Analysis\"\n          );\n        }\n        this._spinner.stopSpinner();\n      },\n      (err) => {\n        this._spinner.stopSpinner();\n        this._toaster.error(\"Socket Error\", \"Text Analysis\");\n      }\n    );\n  }\n\n  /**\n   * Unsubscribes the subscriptions after destroy\n   */\n  ngOnDestroy() {\n    this._socket.removeListener(\"textAnalysisDone\");\n    this.unsubscribe$.next(false);\n    this.unsubscribe$.unsubscribe();\n  }\n}\n","<mat-expansion-panel [expanded]=\"true\" id=\"ta-input-panel\">\n  <mat-expansion-panel-header>\n    <h4 class=\"font-weight-lighter\">\n      <mat-panel-title>Input Data</mat-panel-title>\n    </h4>\n  </mat-expansion-panel-header>\n  <div class=\"row d-flex justify-content-around\" style=\"position: relative\">\n    <div class=\"col-md-4\">\n      <div class=\"col-md-12\">\n        <!-- dataset file select -->\n        <h4 class=\"font-weight-lighter\">Select File</h4>\n        <mat-form-field appearance=\"fill\">\n          <mat-label\n            [innerText]=\"selectedDataSet ? 'File' : 'Choose a file'\"\n          ></mat-label>\n          <mat-select\n            [(ngModel)]=\"selectedDataSet\"\n            (ngModelChange)=\"onChangeDataset(selectedDataSet)\"\n          >\n            <mat-option\n              *ngFor=\"let dataset of dataSetArray\"\n              [value]=\"dataset._id\"\n            >\n              {{ dataset.name | dropFileExtension: dataset.fileSource }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n        <mat-error *ngIf=\"showError\"\n          >Selected dataset doesn't contain text feature</mat-error\n        >\n      </div>\n      <div\n        *ngIf=\"selectedDataSet && featureArray && featureArray.length\"\n        class=\"col-md-12\"\n      >\n        <h4 class=\"font-weight-lighter\">Select Feature</h4>\n        <mat-form-field appearance=\"fill\">\n          <mat-label\n            [innerText]=\"selectedFeature ? 'Feature' : 'Choose a Feature!'\"\n          ></mat-label>\n          <mat-select\n            [(ngModel)]=\"selectedFeature\"\n            (ngModelChange)=\"onChangeFeature(selectedFeature)\"\n          >\n            <mat-option\n              *ngFor=\"let feature of featureArray\"\n              [value]=\"feature.colName\"\n            >\n              {{ feature.colName }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"col-md-1 text-center\">\n      <div\n        style=\"\n          position: absolute;\n          top: 73px;\n          left: 16px;\n          text-align: center;\n          color: #454545;\n          border-radius: 50%;\n          border: 2px solid #454545;\n          width: 50px;\n          height: 50px;\n          opacity: 1;\n          background-color: whitesmoke;\n          z-index: 999;\n        \"\n      >\n        <h3 style=\"padding-top: 10px; cursor: default\">or</h3>\n      </div>\n      <div\n        style=\"\n          width: 2px;\n          height: 200px;\n          background-color: #454545;\n          position: absolute;\n          left: 40px;\n        \"\n      ></div>\n    </div>\n    <div class=\"col-md-7\">\n      <!-- textarea for adding text input -->\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Enter Text </mat-label>\n        <mat-icon\n          class=\"\n            material-icons\n            mdc-text-field__icon mdc-text-field__icon--leading\n            fas\n            fa-sync-alt\n          \"\n          tabindex=\"0\"\n          style=\"\n            float: right;\n            font-size: 15px;\n            width: 25px;\n            height: 25px;\n            text-align: center;\n            background-color: white;\n            margin-top: -25px;\n          \"\n          role=\"button\"\n          (click)=\"refresh()\"\n          [color]=\"isBlur ? 'basic' : 'primary'\"\n          *ngIf=\"selectedFeature && featureDescription\"\n        ></mat-icon>\n        <textarea\n          matInput\n          placeholder=\"Enter some text here!\"\n          rows=\"7%\"\n          [(ngModel)]=\"featureDescription\"\n          (blur)=\"isBlur = true\"\n          (focus)=\"isBlur = false\"\n          (ngModelChange)=\"onTextChange(featureDescription)\"\n        ></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n</mat-expansion-panel>\n","import { takeUntil } from 'rxjs/operators';\nimport { SpinnerService } from './../../../shared/spinner.service';\nimport { LocalStorageService } from './../../../shared/local-storage.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { DataService } from './../../data/data.service';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { TextAnalysisService } from '../text-analysis.service';\nimport { TaDataStoreService } from '../ta-datastore.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-experiment-input',\n  templateUrl: './experiment-input.component.html',\n  styleUrls: ['./experiment-input.component.scss'],\n})\nexport class ExperimentInputComponent implements OnInit {\n  @Input() operationList: any;\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n\n  showSpinner: boolean = false;\n  isBlur: boolean = true;\n  user: any;\n  project: any;\n  selectedDataSet: any;\n  selectedDataSetVal: any;\n  childFileData: any;\n  edaData: any;\n  filename: string = '';\n  showError: boolean = false;\n  selectedFeature: string;\n  featureDescription: string = '';\n  dataSetArray: Array<any>;\n  featureArray: Array<any>;\n  selectedOperations: Array<any>;\n  experimentsList: Array<any>;\n\n  constructor(\n    private _data: DataService,\n    private _toaster: ToastrService,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _textAnalysis: TextAnalysisService,\n    private _taDataStore: TaDataStoreService,\n    private route: ActivatedRoute\n  ) {\n    this.project = this._localStorage.getItem('project');\n    this.user = this._localStorage.getItem('user');\n  }\n\n  ngOnInit(): void {\n    this._spinner.showSpinner();\n    this.getDataSetList();\n  }\n\n  /**\n   * function to get all the dataset uploaded for the specific project\n   */\n  getDataSetList(): void {\n    this._data\n      .getAllProjectDatas(this.project._id)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          this._spinner.stopSpinner();\n          if (res) {\n            this.dataSetArray = res[0].filesList.filter((item) => {\n              return item.fileSource !== 'upload_retrained';\n            });\n            this.setValuesAfterRefresh();\n          } else {\n            this._toaster.error('Cannot fetch all data set', 'Text Analysis');\n          }\n        },\n        (err: Error) => {\n          this._spinner.stopSpinner();\n          this._toaster.error('Server Error', 'Text Analysis');\n        }\n      );\n  }\n\n  //function to load all value again after refresh of page\n  setValuesAfterRefresh(): void {\n    let experimentState = this._localStorage.getItem('experimentMode');\n    this._textAnalysis\n      .experimentList(this.project._id)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          this.experimentsList = res;\n          this.experimentsList.forEach((experiment) => {\n            if (experiment._id == this.route.snapshot.queryParams.experimentId) {\n              // this.getDataSetList();\n              this.setExperimentsData(experiment);\n              // this.loadExperimentsData();\n            }\n          });\n        },\n        (err: Error) => {\n          this._spinner.stopSpinner();\n          this._toaster.error('Server Error', 'Text Analysis');\n        }\n      );\n  }\n\n  //function to call service method to store the model data for exeriments\n  setExperimentsData = function (operationsData: any) {\n    if (operationsData.fileId == null) {\n      this.featureDescription = operationsData.inputText;\n    }\n    // if (mode) {\n    //   this._localStorage.setItem(\"experimentMode\", mode);\n    // } else {\n    //   this._localStorage.removeItem(\"experimentMode\");\n    // }\n    this.onChangeDataset(operationsData.fileId, true, operationsData.feature);\n    // let inputDataForOperations: any = {\n    //   uid: 1,\n    //   featureName: operationsData.feature,\n    //   fileId: operationsData.fileId,\n    //   operation: \"inputData\",\n    //   output: operationsData.inputText,\n    //   experimentName: operationsData.experimentName,\n    // };\n\n    if (this.selectedDataSetVal) {\n      let taData = this._taDataStore.getAllOperationData(true);\n      taData.forEach((data) => {\n        if (data.operation == 'inputData') {\n          data.fileName = this.selectedDataSetVal.name;\n          data.dataSetVal = this.selectedDataSetVal;\n          this.selectedDataSet = data.fileId;\n          // this.onChangeDataset(this.selectedDataSet, true, data.featureName);\n          this.featureDescription = data.output;\n          // vm.experimentName = data.experimentName;\n          this.filename = this.selectedDataSetVal.name;\n        }\n      });\n    }\n    // this._taDataStore.setExperimentsData(inputDataForOperations);\n    // operationsData.taskConfig.forEach((operation) => {\n    //   let dataToSave = {\n    //     uid: operation.uid,\n    //     operation: operation.operationName,\n    //     taskConfig: operation.parameters,\n    //   };\n    //   this._taDataStore.setExperimentsData(dataToSave);\n    // });\n  };\n\n  //function to load experiments data\n  // loadExperimentsData = () => {\n  //   let taData = this._taDataStore.getAllOperationData(true);\n  //   if (taData.length) {\n  //     taData.forEach((data) => {\n  //       this.operationList.forEach((operation) => {\n  //         if (data.operation == \"inputData\") {\n  //         }\n  //       });\n  //     });\n  //   }\n  // };\n\n  /**\n   * function called each time the user chooses a different dataset\n   * @param event\n   */\n  onChangeDataset(dataSet: any, callFromRefreshLogic?: any, featureName?: any): void {\n    this._spinner.showSpinner();\n    this.selectedDataSetVal = this.dataSetArray.find((data: any) => data._id == dataSet);\n    if (dataSet !== null) {\n      this._data\n        .getAllChildDatasets(this.project._id, dataSet)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (res: any) => {\n            if (res) {\n              if (res.length > 0 && res[0].currentEdaId) {\n                this.childFileData = res[0];\n                this.edaData = res[0].currentEdaId;\n                this.featureArray = this.edaData.edaSummary.filter(\n                  (data: any) => data.dataType == 'Text'\n                );\n              } else {\n                this.edaData = this.selectedDataSetVal.fileSchema;\n                this.featureArray = this.edaData.filter((data: any) => data.dataType == 'Text');\n              }\n              if (!this.featureArray.length) {\n                this.showError = true;\n              } else {\n                this.showError = false;\n              }\n            } else {\n              this._toaster.error('Cannot fetch all data set', 'Text Analysis');\n            }\n            if (callFromRefreshLogic) {\n              this.selectedFeature = featureName;\n              // vm.feature = featureData;\n            }\n            this._spinner.stopSpinner();\n          },\n          (err: Error) => {\n            this._spinner.stopSpinner();\n            this._toaster.error('Server Error', 'Text Analysis');\n          }\n        );\n    }\n  }\n\n  /**\n   * when user edits the text box\n   * @param {*} data\n   */\n  onTextChange = function (data: string) {\n    if (this.childFileData && this.childFileData.fileSource == 'eda_') {\n      this.filename = this.childFileData.filename;\n    } else {\n      this.filename = this.selectedDataSetVal.name;\n    }\n    this._taDataStore.saveOperationOutput({\n      uid: 1,\n      operation: 'inputData',\n      output: data,\n      featureName: this.selectedFeature,\n      fileName: this.filename,\n      fileId: this.selectedDataSetVal._id,\n      dataSetVal: this.selectedDataSetVal,\n      childFileData: this.childFileData,\n    });\n  };\n\n  /**\n   * function to compute after feature selected is changed\n   * @param {*} feature\n   */\n  onChangeFeature = (feature: any) => {\n    this.filename = '';\n    // this.showData = true;\n    if (this.childFileData && this.childFileData.fileSource == 'eda_') {\n      this.filename = this.childFileData.filename;\n    } else {\n      this.filename = this.selectedDataSetVal.name;\n    }\n    this.selectedFeature = feature;\n    this.refresh();\n  };\n\n  refresh = () => {\n    if (this.selectedFeature && this.selectedFeature.length > 0) {\n      this._spinner.showSpinner();\n      this._textAnalysis\n        .listFeatureDetails(this.project._id, this.selectedFeature, this.filename)\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(\n          (res: any) => {\n            this.featureDescription = res.data;\n            this._taDataStore.saveOperationOutput({\n              uid: 1,\n              operation: 'inputData',\n              output: this.featureDescription,\n              featureName: this.selectedFeature,\n              fileName: this.filename,\n              fileId: this.selectedDataSetVal._id,\n              dataSetVal: this.selectedDataSetVal,\n              childFileData: this.childFileData,\n            });\n            this._spinner.stopSpinner();\n          },\n          (err: Error) => {\n            this._spinner.stopSpinner();\n            this._toaster.error('Error fetching text', 'Text Analysis');\n          }\n        );\n    }\n  };\n\n  /**\n   * Unsubscribes the subscriptions after destroy\n   */\n  ngOnDestroy() {\n    this.unsubscribe$.next(false);\n    this.unsubscribe$.unsubscribe();\n  }\n}\n","/**!\n * Sortable 1.14.0\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.14.0\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, _excluded);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    var threshold = sortable[expando].options.emptyInsertThreshold;\n    if (!threshold || lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    } // Safari ignores further event handling after mousedown\n\n\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // if there is a last element, it is the target\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n\n        target = firstChild;\n        targetRect = getRect(target);\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var spacer = 10;\n  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        folding = false; // Do not \"unfold\" after around dragEl if reverted\n\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\n       * Selects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be selected\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\n       * Deselects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be deselected\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n","import { InjectionToken, Injectable, ɵɵdefineInjectable, EventEmitter, Directive, Optional, Inject, ElementRef, NgZone, Renderer2, Input, Output, NgModule } from '@angular/core';\nimport Sortable from 'sortablejs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/globals.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nconst GLOBALS = new InjectionToken('Global config for sortablejs');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sortablejs-binding.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SortablejsBinding {\n    /**\n     * @param {?} target\n     */\n    constructor(target) {\n        this.target = target;\n    }\n    /**\n     * @param {?} index\n     * @param {?} item\n     * @return {?}\n     */\n    insert(index, item) {\n        if (this.isFormArray) {\n            this.target.insert(index, item);\n        }\n        else {\n            this.target.splice(index, 0, item);\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    get(index) {\n        return this.isFormArray ? this.target.at(index) : this.target[index];\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    remove(index) {\n        /** @type {?} */\n        let item;\n        if (this.isFormArray) {\n            item = this.target.at(index);\n            this.target.removeAt(index);\n        }\n        else {\n            item = this.target.splice(index, 1)[0];\n        }\n        return item;\n    }\n    // we need this to identify that the target is a FormArray\n    // we don't want to have a dependency on @angular/forms just for that\n    /**\n     * @private\n     * @return {?}\n     */\n    get isFormArray() {\n        // just checking for random FormArray methods not available on a standard array\n        return !!this.target.at && !!this.target.insert && !!this.target.reset;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsBinding.prototype.target;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sortablejs-bindings.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SortablejsBindings {\n    /**\n     * @param {?} bindingTargets\n     */\n    constructor(bindingTargets) {\n        this.bindings = bindingTargets.map((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => new SortablejsBinding(target)));\n    }\n    /**\n     * @param {?} index\n     * @param {?} items\n     * @return {?}\n     */\n    injectIntoEvery(index, items) {\n        this.bindings.forEach((/**\n         * @param {?} b\n         * @param {?} i\n         * @return {?}\n         */\n        (b, i) => b.insert(index, items[i])));\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    getFromEvery(index) {\n        return this.bindings.map((/**\n         * @param {?} b\n         * @return {?}\n         */\n        b => b.get(index)));\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    extractFromEvery(index) {\n        return this.bindings.map((/**\n         * @param {?} b\n         * @return {?}\n         */\n        b => b.remove(index)));\n    }\n    /**\n     * @return {?}\n     */\n    get provided() {\n        return !!this.bindings.length;\n    }\n}\nif (false) {\n    /** @type {?} */\n    SortablejsBindings.prototype.bindings;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sortablejs.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SortablejsService {\n}\nSortablejsService.ɵfac = function SortablejsService_Factory(t) { return new (t || SortablejsService)(); };\n/** @nocollapse */ SortablejsService.ɵprov = ɵɵdefineInjectable({ factory: function SortablejsService_Factory() { return new SortablejsService(); }, token: SortablejsService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SortablejsService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    SortablejsService.prototype.transfer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sortablejs.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst getIndexesFromEvent = (/**\n * @param {?} event\n * @return {?}\n */\n(event) => {\n    if (event.hasOwnProperty('newDraggableIndex') && event.hasOwnProperty('oldDraggableIndex')) {\n        return {\n            new: event.newDraggableIndex,\n            old: event.oldDraggableIndex,\n        };\n    }\n    else {\n        return {\n            new: event.newIndex,\n            old: event.oldIndex,\n        };\n    }\n});\nconst ɵ0 = getIndexesFromEvent;\nclass SortablejsDirective {\n    /**\n     * @param {?} globalConfig\n     * @param {?} service\n     * @param {?} element\n     * @param {?} zone\n     * @param {?} renderer\n     */\n    constructor(globalConfig, service, element, zone, renderer) {\n        this.globalConfig = globalConfig;\n        this.service = service;\n        this.element = element;\n        this.zone = zone;\n        this.renderer = renderer;\n        this.sortablejsInit = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (Sortable && Sortable.create) { // Sortable does not exist in angular universal (SSR)\n            this.create();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const optionsChange = changes.sortablejsOptions;\n        if (optionsChange && !optionsChange.isFirstChange()) {\n            /** @type {?} */\n            const previousOptions = optionsChange.previousValue;\n            /** @type {?} */\n            const currentOptions = optionsChange.currentValue;\n            Object.keys(currentOptions).forEach((/**\n             * @param {?} optionName\n             * @return {?}\n             */\n            optionName => {\n                if (currentOptions[optionName] !== previousOptions[optionName]) {\n                    // use low-level option setter\n                    this.sortableInstance.option(optionName, this.options[optionName]);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.sortableInstance) {\n            this.sortableInstance.destroy();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    create() {\n        /** @type {?} */\n        const container = this.sortablejsContainer ? this.element.nativeElement.querySelector(this.sortablejsContainer) : this.element.nativeElement;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.sortableInstance = Sortable.create(container, this.options);\n            this.sortablejsInit.emit(this.sortableInstance);\n        }), 0);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getBindings() {\n        if (!this.sortablejs) {\n            return new SortablejsBindings([]);\n        }\n        else if (this.sortablejs instanceof SortablejsBindings) {\n            return this.sortablejs;\n        }\n        else {\n            return new SortablejsBindings([this.sortablejs]);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get options() {\n        return Object.assign(Object.assign({}, this.optionsWithoutEvents), this.overridenOptions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get optionsWithoutEvents() {\n        return Object.assign(Object.assign({}, (this.globalConfig || {})), (this.sortablejsOptions || {}));\n    }\n    /**\n     * @private\n     * @param {?} eventName\n     * @param {...?} params\n     * @return {?}\n     */\n    proxyEvent(eventName, ...params) {\n        this.zone.run((/**\n         * @return {?}\n         */\n        () => {\n            if (this.optionsWithoutEvents && this.optionsWithoutEvents[eventName]) {\n                this.optionsWithoutEvents[eventName](...params);\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get isCloning() {\n        return this.sortableInstance.options.group.checkPull(this.sortableInstance, this.sortableInstance) === 'clone';\n    }\n    /**\n     * @private\n     * @template T\n     * @param {?} item\n     * @return {?}\n     */\n    clone(item) {\n        // by default pass the item through, no cloning performed\n        return (this.sortablejsCloneFunction || ((/**\n         * @param {?} subitem\n         * @return {?}\n         */\n        subitem => subitem)))(item);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    get overridenOptions() {\n        // always intercept standard events but act only in case items are set (bindingEnabled)\n        // allows to forget about tracking this.items changes\n        return {\n            onAdd: (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                this.service.transfer = (/**\n                 * @param {?} items\n                 * @return {?}\n                 */\n                (items) => {\n                    this.getBindings().injectIntoEvery(event.newIndex, items);\n                    this.proxyEvent('onAdd', event);\n                });\n                this.proxyEvent('onAddOriginal', event);\n            }),\n            onRemove: (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                /** @type {?} */\n                const bindings = this.getBindings();\n                if (bindings.provided) {\n                    if (this.isCloning) {\n                        this.service.transfer(bindings.getFromEvery(event.oldIndex).map((/**\n                         * @param {?} item\n                         * @return {?}\n                         */\n                        item => this.clone(item))));\n                        // great thanks to https://github.com/tauu\n                        // event.item is the original item from the source list which is moved to the target list\n                        // event.clone is a clone of the original item and will be added to source list\n                        // If bindings are provided, adding the item dom element to the target list causes artifacts\n                        // as it interferes with the rendering performed by the angular template.\n                        // Therefore we remove it immediately and also move the original item back to the source list.\n                        // (event handler may be attached to the original item and not its clone, therefore keeping\n                        // the original dom node, circumvents side effects )\n                        this.renderer.removeChild(event.item.parentNode, event.item);\n                        this.renderer.insertBefore(event.clone.parentNode, event.item, event.clone);\n                        this.renderer.removeChild(event.clone.parentNode, event.clone);\n                    }\n                    else {\n                        this.service.transfer(bindings.extractFromEvery(event.oldIndex));\n                    }\n                    this.service.transfer = null;\n                }\n                this.proxyEvent('onRemove', event);\n            }),\n            onUpdate: (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                /** @type {?} */\n                const bindings = this.getBindings();\n                /** @type {?} */\n                const indexes = getIndexesFromEvent(event);\n                bindings.injectIntoEvery(indexes.new, bindings.extractFromEvery(indexes.old));\n                this.proxyEvent('onUpdate', event);\n            }),\n        };\n    }\n}\nSortablejsDirective.ɵfac = function SortablejsDirective_Factory(t) { return new (t || SortablejsDirective)(ɵngcc0.ɵɵdirectiveInject(GLOBALS, 8), ɵngcc0.ɵɵdirectiveInject(SortablejsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nSortablejsDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SortablejsDirective, selectors: [[\"\", \"sortablejs\", \"\"]], inputs: { sortablejs: \"sortablejs\", sortablejsContainer: \"sortablejsContainer\", sortablejsOptions: \"sortablejsOptions\", sortablejsCloneFunction: \"sortablejsCloneFunction\" }, outputs: { sortablejsInit: \"sortablejsInit\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nSortablejsDirective.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [GLOBALS,] }] },\n    { type: SortablejsService },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Renderer2 }\n];\nSortablejsDirective.propDecorators = {\n    sortablejs: [{ type: Input }],\n    sortablejsContainer: [{ type: Input }],\n    sortablejsOptions: [{ type: Input }],\n    sortablejsCloneFunction: [{ type: Input }],\n    sortablejsInit: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SortablejsDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[sortablejs]'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [GLOBALS]\n            }] }, { type: SortablejsService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.Renderer2 }]; }, { sortablejsInit: [{\n            type: Output\n        }], sortablejs: [{\n            type: Input\n        }], sortablejsContainer: [{\n            type: Input\n        }], sortablejsOptions: [{\n            type: Input\n        }], sortablejsCloneFunction: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejs;\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejsContainer;\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejsOptions;\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejsCloneFunction;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.sortableInstance;\n    /** @type {?} */\n    SortablejsDirective.prototype.sortablejsInit;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.globalConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.service;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.element;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    SortablejsDirective.prototype.renderer;\n}\n/**\n * @record\n */\nfunction SortableEvent() { }\nif (false) {\n    /** @type {?} */\n    SortableEvent.prototype.oldIndex;\n    /** @type {?} */\n    SortableEvent.prototype.newIndex;\n    /** @type {?|undefined} */\n    SortableEvent.prototype.oldDraggableIndex;\n    /** @type {?|undefined} */\n    SortableEvent.prototype.newDraggableIndex;\n    /** @type {?} */\n    SortableEvent.prototype.item;\n    /** @type {?} */\n    SortableEvent.prototype.clone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/sortablejs.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SortablejsModule {\n    /**\n     * @param {?} globalOptions\n     * @return {?}\n     */\n    static forRoot(globalOptions) {\n        return {\n            ngModule: SortablejsModule,\n            providers: [\n                { provide: GLOBALS, useValue: globalOptions },\n            ],\n        };\n    }\n}\nSortablejsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SortablejsModule });\nSortablejsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SortablejsModule_Factory(t) { return new (t || SortablejsModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SortablejsModule, { declarations: [SortablejsDirective], exports: [SortablejsDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SortablejsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [SortablejsDirective],\n                exports: [SortablejsDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-sortablejs.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { SortablejsDirective, SortablejsModule, GLOBALS as ɵa, SortablejsService as ɵb };\n\n//# sourceMappingURL=ngx-sortablejs.js.map","<!-- <mat-accordion\n  class=\"list-group text-center sortable\"\n  [sortablejs]=\"operationList\"\n  [sortablejsOptions]=\"sourceOptions\"\n>\n  <mat-card\n    class=\"list-group-item op-box mb-3\"\n    *ngFor=\"let val of operationList\"\n  >\n    <p style=\"margin: auto; text-align: left\">\n      <span>\n        <i class=\"{{ val.class }}\"></i><b>{{ val.title }}</b>\n      </span>\n    </p>\n  </mat-card>\n</mat-accordion> -->\n<div [ngClass]=\"setStickyClass ? 'sticky-ta-toolbar' : ''\">\n  <mat-accordion\n    id=\"operationList\"\n    class=\"list-group text-center sortable d-flex flex-row\"\n    [sortablejs]=\"operationList\"\n    [sortablejsOptions]=\"sourceOptions\"\n    #operationsToolBar\n  >\n    <mat-card\n      id=\"listContainer\"\n      [ngClass]=\"\n        setStickyClass\n          ? 'list-group-item blocks extra-padding'\n          : 'list-group-item blocks'\n      \"\n      *ngFor=\"let val of operationList\"\n    >\n      <p>\n        <i class=\"{{ val.class }}\"></i><br />\n        <span>\n          <b>{{ val.title }}</b>\n        </span>\n      </p>\n    </mat-card>\n  </mat-accordion>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ElementRef,\n  ViewChild,\n  HostListener,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { Options } from \"sortablejs\";\n\n@Component({\n  selector: \"app-operations-list\",\n  templateUrl: \"./operations-list.component.html\",\n  styleUrls: [\"./operations-list.component.scss\"],\n})\nexport class OperationsListComponent implements OnInit {\n  @Input() operationList: any;\n\n  @Output() isToolBarSticky = new EventEmitter();\n\n  @ViewChild(\"operationsToolBar\", { read: ElementRef, static: true })\n  operationsToolBar: ElementRef;\n\n  @HostListener(\"window:scroll\", [\"$event\"]) onWindowScroll() {\n    this.myFunction(window.pageYOffset);\n  }\n\n  sourceOptions: Options = {\n    group: {\n      name: \"clone-group\",\n      pull: \"clone\",\n      put: false,\n    },\n  };\n\n  toolbarOffset: any;\n\n  setStickyClass = false;\n\n  opToolbar: any;\n  opUiContainer: any;\n  sticky: any;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    // this.opToolbar = document.getElementById(\"operationList\");\n    // this.sticky = this.opToolbar.offsetTop;\n    this.sticky =\n      this.operationsToolBar.nativeElement.getBoundingClientRect().top;\n  }\n\n  myFunction(offsetVal: any): void {\n    if (offsetVal >= this.sticky) {\n      this.setStickyClass = true;\n      // this.operationsToolBar.nativeElement.classList.add(\"sticky-ta-toolbar\");\n      // this.opUiContainer.classList.add(\"extra-height\");\n      this.isToolBarSticky.emit(\"true\");\n    } else {\n      this.setStickyClass = false;\n      // this.operationsToolBar.nativeElement.classList.remove(\n      //   \"sticky-ta-toolbar\"\n      // );\n      // this.opUiContainer.classList.remove(\"extra-height\");\n      this.isToolBarSticky.emit(\"false\");\n    }\n  }\n}\n","<div\n  class=\"sortable\"\n  [sortablejs]=\"selectedOperation\"\n  [sortablejsOptions]=\"targetOptions\"\n  style=\"position: relative\"\n>\n  <div\n    class=\"row\"\n    style=\"display: flex; margin: 2%; flex-direction: column\"\n    *ngIf=\"!selectedOperation.length\"\n  >\n    <div style=\"margin: auto\">\n      <img\n        src=\"../../../../assets/img/drag&drop.svg\"\n        height=\"300px\"\n        width=\"300px\"\n      />\n    </div>\n    <div style=\"margin: auto\">\n      <h4 class=\"font-weight-lighter\">\n        Start by drag and drop any operation here!\n      </h4>\n    </div>\n  </div>\n  <li id=\"drop-area\" *ngFor=\"let item of selectedOperation; let i = index\">\n    <div [ngSwitch]=\"item.operation\">\n      <div class=\"mb-2\" *ngSwitchCase=\"'posTagging'\">\n        <app-pos-tagging\n          [operation]=\"item\"\n          (onRemove)=\"onOperationRemoved(i)\"\n          >{{ item.operation }}</app-pos-tagging\n        >\n      </div>\n      <div class=\"mb-2\" *ngSwitchCase=\"'cleaningTransformation'\">\n        <app-text-cleaning\n          [operation]=\"item\"\n          (onRemove)=\"onOperationRemoved(i)\"\n          >{{ item.operation }}</app-text-cleaning\n        >\n      </div>\n      <div class=\"mb-2\" *ngSwitchCase=\"'textSummarization'\">\n        <app-text-summarization\n          [operation]=\"item\"\n          (onRemove)=\"onOperationRemoved(i)\"\n          >{{ item.operation }}\n        </app-text-summarization>\n      </div>\n      <div class=\"mb-2\" *ngSwitchCase=\"'sentimentAnalysis'\">\n        <app-sentiment-analysis\n          [operation]=\"item\"\n          (onRemove)=\"onOperationRemoved(i)\"\n          >{{ item.operation }}\n        </app-sentiment-analysis>\n      </div>\n      <div class=\"mb-2\" *ngSwitchCase=\"'ner'\">\n        <app-ner [operation]=\"item\" (onRemove)=\"onOperationRemoved(i)\">{{\n          item.operation\n        }}</app-ner>\n      </div>\n      <div class=\"mb-2\" *ngSwitchCase=\"'wordFrequency'\">\n        <app-word-frequency\n          [operation]=\"item\"\n          (onRemove)=\"onOperationRemoved(i)\"\n          >{{ item.operation }}</app-word-frequency\n        >\n      </div>\n      <div class=\"mb-2\" *ngSwitchCase=\"'wordEmbedding'\">\n        <app-word-embedding\n          [operation]=\"item\"\n          (onRemove)=\"onOperationRemoved(i)\"\n          >{{ item.operation }}</app-word-embedding\n        >\n      </div>\n      <div class=\"mb-2\" *ngSwitchCase=\"'ruleBasedMatch'\">\n        <app-rule-based-matching\n          [operation]=\"item\"\n          (onRemove)=\"onOperationRemoved(i)\"\n          >{{ item.operation }}</app-rule-based-matching\n        >\n      </div>\n    </div>\n  </li>\n</div>\n","import { map } from \"rxjs/operators\";\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  IterableDiffers,\n  OnInit,\n  Output,\n} from \"@angular/core\";\nimport { FormArray } from \"@angular/forms\";\nimport { Options } from \"sortablejs\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\n\n@Component({\n  selector: \"app-operations-ui-container\",\n  templateUrl: \"./operations-ui-container.component.html\",\n  styleUrls: [\"./operations-ui-container.component.scss\"],\n})\nexport class OperationsUiContainerComponent implements OnInit {\n  @Input() selectedOperation: any = [];\n\n  //options for sortable thing\n  targetOptions: Options = {\n    group: \"clone-group\",\n  };\n\n  iterableDiffer: any;\n\n  constructor(\n    private iterableDiffers: IterableDiffers,\n    private _spinner: SpinnerService\n  ) {\n    this.iterableDiffer = iterableDiffers.find([]).create(null);\n  }\n\n  ngDoCheck() {\n    let changes = this.iterableDiffer.diff(this.selectedOperation);\n    if (changes) {\n      this.selectedOperation.map((opVal) => {\n        return changes.collection.filter((val) => {\n          if (opVal.operation === val.operation) {\n            if (!val.uid) {\n              val.uid = Date.now();\n            }\n            val.isPanelExpanded = true;\n          } else {\n            val.isPanelExpanded = false;\n          }\n        });\n      });\n    }\n  }\n\n  ngOnInit(): void {}\n\n  //Remove an operation\n  onOperationRemoved = function (index) {\n    this.selectedOperation.splice(index, 1);\n  };\n}\n","<div class=\"fluid-container font-weight-lighter\">\n  <div class=\"row mb-4\">\n    <div class=\"col-md-12\">\n      <app-experiment-input [operationList]=\"operations\"></app-experiment-input>\n    </div>\n  </div>\n  <div class=\"row\">\n    <app-operations-list\n      id=\"operationListContainer\"\n      class=\"vw-100\"\n      [operationList]=\"operations\"\n      (isToolBarSticky)=\"setOperationContainerUiMargin($event)\"\n    ></app-operations-list>\n\n    <!-- operations list container -->\n    <!-- <div class=\"col-md-2 d-flex justify-content-around\">\n      <mat-card\n        style=\"\n          background-color: white;\n          border-radius: 7px;\n          flex-direction: column;\n          text-align: center;\n          height: min-content;\n        \"\n      >\n        <h4 style=\"padding-top: 5px\"><b>Operations</b></h4>\n        <app-operations-list [operationList]=\"operations\"></app-operations-list>\n      </mat-card>\n    </div> -->\n    <!-- operations ui container -->\n    <!-- <div class=\"col-md-10\">\n      <app-operations-ui-container\n        [selectedOperation]=\"selectedOperationsArray\"\n      >\n      </app-operations-ui-container>\n    </div> -->\n  </div>\n  <div class=\"row mt-4\">\n    <mat-card\n      id=\"operationsUiContainer\"\n      class=\"col-md-12\"\n      style=\"background-color: white; min-height: 450px; border-radius: 7px\"\n      #opUiContainer\n    >\n      <div class=\"row\">\n        <div\n          class=\"col-md-12\"\n          style=\"display: flex\"\n          *ngIf=\"checkExecuteSequence\"\n        >\n          <div\n            class=\"alert col-md-12\"\n            style=\"\n              margin: auto;\n              color: red;\n              font-weight: bold;\n              text-align: center;\n            \"\n          >\n            Please execute operations sequentially\n          </div>\n        </div>\n      </div>\n      <app-operations-ui-container\n        [selectedOperation]=\"selectedOperationsArray\"\n      >\n      </app-operations-ui-container>\n    </mat-card>\n  </div>\n  <button\n    mat-raised-button\n    class=\"float-ta-save-btn\"\n    *ngIf=\"modeType != 'viewMode'\"\n    #tooltip=\"matTooltip\"\n    matTooltip=\"Click to save experiment\"\n    matTooltipPosition=\"below\"\n    (click)=\"openSaveDialog()\"\n  >\n    <i class=\"fas fa-plus fa-1x my-float\"></i>\n  </button>\n</div>\n","import { TaDataStoreService } from \"./../ta-datastore.service\";\nimport { SortableOptions } from \"sortablejs\";\nimport {\n  Component,\n  ElementRef,\n  HostListener,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { Options } from \"sortablejs\";\nimport { FormArray } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TextAnalysisDialogComponent } from \"../text-analysis-dialog/text-analysis-dialog.component\";\nimport { LocalStorageService } from \"src/app/shared/local-storage.service\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\n\n@Component({\n  selector: \"app-create-experiment\",\n  templateUrl: \"./create-experiment.component.html\",\n  styleUrls: [\"./create-experiment.component.scss\"],\n})\nexport class CreateExperimentComponent implements OnInit {\n  @ViewChild(\"opUiContainer\", { read: ElementRef, static: true })\n  opUiContainer: ElementRef;\n\n  operations = [\n    {\n      title: \"Text Cleaning/ Transformation\",\n      operation: \"cleaningTransformation\",\n      class: \"fas fa-magic iconfont\",\n      isPanelExpanded: false,\n    },\n    {\n      title: \"POS Tagging\",\n      operation: \"posTagging\",\n      class: \"fas fa-tags iconfont\",\n      isPanelExpanded: false,\n    },\n    {\n      title: \"Named Entity Recognition\",\n      operation: \"ner\",\n      class: \"fas fa-user-tag iconfont\",\n      isPanelExpanded: false,\n    },\n    {\n      title: \"Sentiment Analysis\",\n      operation: \"sentimentAnalysis\",\n      class: \"fas fa-circle-notch iconfont\",\n      isPanelExpanded: false,\n    },\n    {\n      title: \"Text Summarization\",\n      operation: \"textSummarization\",\n      class: \"fas fa-file-word iconfont\",\n      isPanelExpanded: false,\n    },\n    {\n      title: \"Word Frequency\",\n      operation: \"wordFrequency\",\n      class: \"fa fa-object-group iconfont\",\n      isPanelExpanded: false,\n    },\n    {\n      title: \"Word Embedding\",\n      operation: \"wordEmbedding\",\n      class: \"fa fa-language iconfont\",\n      isPanelExpanded: false,\n    },\n    {\n      title: \"Rule Based Matching\",\n      operation: \"ruleBasedMatch\",\n      class: \"fa fa-window-restore iconfont\",\n      isPanelExpanded: false,\n    },\n  ];\n\n  selectedOperationsArray = [];\n\n  taDataArray: any;\n\n  modeType: any;\n\n  checkExecuteSequence: boolean = false;\n\n  targetOptions: Options = {\n    group: \"clone-group\",\n  };\n\n  constructor(\n    private _dialog: MatDialog,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _taDataStore: TaDataStoreService\n  ) {\n    this.modeType = this._localStorage.getItem(\"experimentMode\");\n  }\n\n  ngOnInit(): void {\n    this._spinner.showSpinner();\n    let taData = this._taDataStore.getAllOperationData();\n    if (taData.length) {\n      taData.forEach((data) => {\n        this.operations.forEach((operation) => {\n          if (data.operation == operation.operation) {\n            let temp: any = Object.assign({}, operation);\n            temp.uid = data.uid;\n            this.selectedOperationsArray.push(temp);\n            this.checkExecuteSequence = true;\n            // this.showSaveBtn = false;\n          }\n        });\n      });\n    } else {\n      this.selectedOperationsArray.length = 0;\n    }\n    this._spinner.stopSpinner();\n  }\n\n  setOperationContainerUiMargin(isSticky: any): void {\n    if (isSticky == \"true\") {\n      this.opUiContainer.nativeElement.classList.add(\"extra-height\");\n    } else {\n      this.opUiContainer.nativeElement.classList.remove(\"extra-height\");\n    }\n  }\n\n  openSaveDialog(): void {\n    /**\n     * Opens the dialog with form\n     */\n    let saveDialog = this._dialog.open(TextAnalysisDialogComponent, {\n      width: \"60%\",\n      data: {\n        data: null,\n        showGraph: null,\n      },\n    });\n\n    saveDialog.afterClosed().subscribe((data) => {\n      if (data) {\n        //navigate to experiments list page after successful completion\n      }\n    });\n  }\n}\n","<h1 mat-dialog-title>\n  Pipeline Settings<span\n    mat-dialog-close\n    id=\"times-close-icon\"\n    style=\"float: right; font-size: 16px; cursor: pointer\"\n    ><i class=\"fa fa-times\"></i\n  ></span>\n</h1>\n<div mat-dialog-content style=\"min-height: 50px\">\n  <div class=\"row\" [formGroup]=\"form\">\n    <div class=\"col-sm-12\" *ngFor=\"let setting of data.list; let i = index\">\n      <mat-checkbox\n        [value]=\"setting.pipeSettingTag\"\n        [checked]=\"valueFromUser.includes(setting.pipeSettingTag)\"\n        (change)=\"onCheckBoxValChange($event)\"\n        >&nbsp;&nbsp;{{ setting.pipeSettingName }}</mat-checkbox\n      >\n    </div>\n  </div>\n</div>\n<div mat-dialog-actions>\n  <button\n    id=\"saveBtn\"\n    mat-raised-button\n    (click)=\"setPipelineSettings(form)\"\n    cdkFocusInitial\n  >\n    Save\n  </button>\n</div>\n","import {\n  Component,\n  ElementRef,\n  Inject,\n  OnInit,\n  ViewChild,\n} from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { FormArray, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { LocalStorageService } from \"src/app/shared/local-storage.service\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { NerComponent } from \"../operations-ui-container/ner/ner.component\";\nimport { TaDataStoreService } from \"../ta-datastore.service\";\nimport { TextAnalysisService } from \"../text-analysis.service\";\n\nexport interface DialogData {\n  list: any;\n  selectedVal: any;\n}\n\n@Component({\n  selector: \"app-pipeline-settings-dialog\",\n  templateUrl: \"./pipeline-settings-dialog.component.html\",\n  styleUrls: [\"./pipeline-settings-dialog.component.scss\"],\n})\nexport class PipelineSettingsDialogComponent implements OnInit {\n  project: any;\n  user: any;\n  form: FormGroup;\n\n  operationsToolBar: ElementRef;\n\n  pipelineSettingsControl = new FormControl(\"\");\n  featureArray: FormArray;\n  valueFromUser: any = [];\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _taDataStore: TaDataStoreService,\n    private _textAnalysis: TextAnalysisService,\n    private _toaster: ToastrService,\n    private _pipelineSettingsDialog: MatDialogRef<NerComponent>,\n    private fb: FormBuilder\n  ) {\n    this.project = this._localStorage.getItem(\"project\");\n    this.user = this._localStorage.getItem(\"user\");\n    this.form = this.fb.group({\n      featureArray: this.fb.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n    this._spinner.showSpinner();\n    this.featureArray = this.form.get(\"featureArray\") as FormArray;\n    this.data.selectedVal &&\n      this.data.selectedVal.forEach((item) => {\n        this.featureArray.push(new FormControl(item));\n        this.valueFromUser && this.valueFromUser.push(item);\n      });\n    this._spinner.stopSpinner();\n  }\n\n  setPipelineSettings(checkboxData: FormGroup): void {\n    this._pipelineSettingsDialog.close(checkboxData.value);\n  }\n\n  onCheckBoxValChange(e): void {\n    if (e.source._checked) {\n      this.featureArray.push(new FormControl(e.source.value));\n    } else {\n      let i: number = 0;\n      this.featureArray.controls.forEach((item: FormControl) => {\n        if (item.value == e.source.value) {\n          this.featureArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n  }\n}\n","<!-- <p>pos-tagging works!{{ operation | json }}</p> -->\n<mat-expansion-panel [expanded]=\"operation.isPanelExpanded\">\n  <mat-expansion-panel-header>\n    <mat-panel-title\n      style=\"color: black\"\n      [matTooltip]=\"_utils.getTootip('posTagging')\"\n    >\n      {{ operation.title }}\n    </mat-panel-title>\n    <mat-panel-description\n      >&nbsp;<mat-icon\n        class=\"fa fa-trash\"\n        [color]=\"binColor\"\n        style=\"margin-left: 95%; cursor: pointer; font-size: 16px\"\n        (mouseover)=\"mouseOverBin()\"\n        (mouseleave)=\"mouseLeaveBin()\"\n        (click)=\"removeOperation()\"\n      ></mat-icon\n    ></mat-panel-description>\n  </mat-expansion-panel-header>\n\n  <mat-card style=\"border-left: 7px solid green; display: flex\" #inputInfoCard>\n    <mat-card-content>\n      <div class=\"d-flex flex-row\" style=\"margin: auto\">\n        <div style=\"width: min-content; margin: auto\">\n          <mat-icon\n            class=\"fas fa-info-circle fa-2x\"\n            style=\"color: green\"\n          ></mat-icon>\n        </div>\n        <div style=\"width: max-content; margin: auto\">\n          <b\n            >&nbsp;&nbsp;&nbsp;Data is taken from\n            {{ inputData ? inputData.operation : \"inputData\" }}</b\n          >\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <br />\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label\n      [innerText]=\"posModelControl.value ? 'Model' : 'Select a model'\"\n    ></mat-label>\n    <mat-select [formControl]=\"posModelControl\">\n      <mat-option value=\"spacy-en_core_web_sm\">spacy-en_core_web_sm</mat-option>\n      <mat-option *ngFor=\"let model of modelList\" [value]=\"model\">\n        {{ model.modelName }}\n      </mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"posModelControl.touched && posModelControl.hasError('required')\"\n      >Model is required.</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label\n      [innerText]=\"posTagsControl.value ? 'Tags Selected' : 'Choose some tags'\"\n    ></mat-label>\n    <mat-select [formControl]=\"posTagsControl\" required multiple>\n      <mat-option\n        *ngFor=\"let tag of postTagList; let i = index\"\n        [value]=\"tag.tagsValue\"\n      >\n        {{ tag.tagsName }}\n      </mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"posTagsControl.touched && posTagsControl.hasError('required')\"\n      >Atleast one cleaning method is required.</mat-error\n    >\n  </mat-form-field>\n  <span>\n    <button\n      id=\"taOperationsPosSubmitBtn\"\n      mat-raised-button\n      [disabled]=\"\n        posModelControl.hasError('required') &&\n        posTagsControl.hasError('required')\n      \"\n      (click)=\"onSubmit(null, posModelControl, posTagsControl)\"\n    >\n      Submit</button\n    >&nbsp;&nbsp;<span class=\"linkText\" (click)=\"showPipelineSetting()\"\n      >Settings</span\n    >\n  </span>\n\n  <div class=\"form-group row\">\n    <div class=\"text-danger offset-2 mt-2\" *ngIf=\"showTextError\">\n      Select dataset and feature or enter the text to generate the output\n    </div>\n  </div>\n\n  <br />\n  <!-- output section -->\n  <mat-card class=\"mt-3\" *ngIf=\"showOutput\" style=\"background-color: #f5f5f5\">\n    <mat-card-header>\n      <mat-card-title-group>\n        <mat-card-title>Output</mat-card-title>\n      </mat-card-title-group>\n      <div style=\"margin-left: 85%\">\n        <mat-icon\n          class=\"far fa-chart-bar\"\n          [color]=\"graphIconColor\"\n          (mouseover)=\"mouseOverGraph()\"\n          (mouseleave)=\"mouseLeaveGraph()\"\n          (click)=\"onSubmit('html', posModelControl, posTagsControl)\"\n          #tooltip=\"matTooltip\"\n          matTooltip=\"Dependency Graph\"\n          matTooltipPosition=\"above\"\n          matTooltipHideDelay=\"1000\"\n          style=\"cursor: pointer; font-size: 16px\"\n        ></mat-icon>\n      </div>\n    </mat-card-header>\n    <mat-card-content class=\"mt-2\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Word Column -->\n        <ng-container matColumnDef=\"Word\">\n          <th mat-header-cell *matHeaderCellDef>Word</th>\n          <td mat-cell *matCellDef=\"let item\">{{ item.word }}</td>\n        </ng-container>\n\n        <!-- Tag Column -->\n        <ng-container matColumnDef=\"Tag\">\n          <th mat-header-cell *matHeaderCellDef>Tag</th>\n          <td mat-cell *matCellDef=\"let item\">{{ item.tag }}</td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <!-- <p>{{ output }}</p> -->\n    </mat-card-content>\n  </mat-card>\n</mat-expansion-panel>\n","import { takeUntil } from \"rxjs/operators\";\nimport { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Subject } from \"rxjs\";\nimport { DashboardService } from \"src/app/routes/dashboard/dashboard.service\";\nimport { LocalStorageService } from \"src/app/shared/local-storage.service\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { TaDataStoreService } from \"../../ta-datastore.service\";\nimport { TextAnalysisService } from \"../../text-analysis.service\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { PipelineSettingsDialogComponent } from \"../../pipeline-settings-dialog/pipeline-settings-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { TextAnalysisDialogComponent } from \"../../text-analysis-dialog/text-analysis-dialog.component\";\nimport { UtilsService } from \"src/app/shared/utils.service\";\n\n@Component({\n  selector: \"app-pos-tagging\",\n  templateUrl: \"./pos-tagging.component.html\",\n  styleUrls: [\"./pos-tagging.component.scss\"],\n})\nexport class PosTaggingComponent implements OnInit {\n  @Input() operation: any;\n\n  @Output() onRemove = new EventEmitter();\n\n  /**\n   * tag input list\n   */\n  postTagList: Array<any> = [\n    {\n      tagsName: \"Adjective\",\n      tagsValue: \"ADJ\",\n    },\n    {\n      tagsName: \"Adposition\",\n      tagsValue: \"ADP\",\n    },\n    {\n      tagsName: \"Adverb\",\n      tagsValue: \"ADV\",\n    },\n    {\n      tagsName: \"Auxiliary verb\",\n      tagsValue: \"AUX\",\n    },\n    {\n      tagsName: \"Coordinating conjunction\",\n      tagsValue: \"CONJ\",\n    },\n    {\n      tagsName: \"Determiner\",\n      tagsValue: \"DET\",\n    },\n    {\n      tagsName: \"Interjection\",\n      tagsValue: \"INTJ\",\n    },\n    {\n      tagsName: \"Noun\",\n      tagsValue: \"NOUN\",\n    },\n    {\n      tagsName: \"Numeral\",\n      tagsValue: \"NUM\",\n    },\n    {\n      tagsName: \"Particle\",\n      tagsValue: \"PART\",\n    },\n    {\n      tagsName: \"Pronoun\",\n      tagsValue: \"PRON\",\n    },\n    {\n      tagsName: \"Proper noun\",\n      tagsValue: \"PROPN\",\n    },\n    {\n      tagsName: \"Punctuation\",\n      tagsValue: \"PUNCT\",\n    },\n    {\n      tagsName: \"Subordinating conjunction\",\n      tagsValue: \"SCONJ\",\n    },\n    {\n      tagsName: \"Symbol\",\n      tagsValue: \"SYM\",\n    },\n    {\n      tagsName: \"Verb\",\n      tagsValue: \"VERB\",\n    },\n    {\n      tagsName: \"Other\",\n      tagsValue: \"X\",\n    },\n  ];\n\n  /**\n   * models list\n   */\n  modelList: Array<any>;\n\n  dataSource: MatTableDataSource<[]> = new MatTableDataSource();\n  displayedColumns: Array<string> = [];\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n  showSpinner: boolean = false;\n  user: any;\n  project: any;\n  showError: boolean;\n  showOutput: boolean = false;\n  uploadModelIssueMsg: boolean = false;\n  binColor: string = \"basic\";\n  inputData: any;\n  output: any;\n  showTextError: Boolean = false;\n  posModelControl = new FormControl(\"\", Validators.required);\n  posTagsControl = new FormControl(\"\", Validators.required);\n  graphIconColor: string = \"basic\";\n  //default value for the pipeline setting modal\n  pipelineSetting: any = {\n    removeFeatureCheckBoxVal: false,\n    setConcatenate: false,\n    setCountTag: false,\n  };\n\n  posPipelineSettingsList: any = [\n    {\n      pipeSettingName: \"Count the words that matched the tags\",\n      pipeSettingTag: \"count\",\n    },\n    {\n      pipeSettingName: \"Concatenate all the words with matched tags\",\n      pipeSettingTag: \"concat\",\n    },\n  ];\n\n  posPipelineSettingValue: any;\n\n  constructor(\n    private _dialog: MatDialog,\n    private _dashboardService: DashboardService,\n    private _toaster: ToastrService,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _taDataStore: TaDataStoreService,\n    private _textAnalysis: TextAnalysisService,\n    public _utils: UtilsService\n  ) {\n    // this._spinner.showSpinner();\n    this.project = this._localStorage.getItem(\"project\");\n    this.user = this._localStorage.getItem(\"user\");\n    this.displayedColumns = [\"Word\", \"Tag\"];\n  }\n\n  ngOnInit(): void {\n    this.inputData = this._taDataStore.getInputData(this.operation);\n    this.gettaModelsList(\"pos\");\n    this.setData();\n    this._taDataStore.onSubmitEventSubject.subscribe((val) => {\n      this.inputData = this._taDataStore.getInputData(this.operation);\n    });\n  }\n\n  // function to get all the models from the tamodel db\n  gettaModelsList = (taskType: string) => {\n    let foundModel = false;\n    this._dashboardService\n      .taModel(taskType)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (taModelList: any) => {\n          this.modelList = taModelList;\n          if (\n            this.posModelControl.value &&\n            this.posModelControl.value != \"spacy-en_core_web_sm\"\n          ) {\n            this.modelList.forEach((model) => {\n              if (\n                model.modelName === this.posModelControl.value ||\n                model.oldModelFileName === this.posModelControl.value\n              ) {\n                this.posModelControl.setValue(JSON.stringify(model));\n                foundModel = true;\n              }\n            });\n            if (!foundModel) {\n              this.uploadModelIssueMsg = true;\n            }\n          }\n          this._spinner.stopSpinner();\n        },\n        (err: Error) => {\n          this._toaster.error(\"Server Error\", \"Text Analysis\");\n          this._spinner.stopSpinner();\n        }\n      );\n  };\n\n  //function to set db data to component\n  setData(): void {\n    let loadData = this._taDataStore.getAllOperationData();\n    loadData.forEach((loadVal) => {\n      if (loadVal.uid == this.operation.uid) {\n        if (loadVal.taskConfig.operationParameters) {\n          this.posTagsControl.setValue(\n            loadVal.taskConfig.operationParameters.keepTags\n          );\n          if (loadVal.taskConfig.operationParameters.addFeature.length) {\n            this.posPipelineSettingValue =\n              loadVal.taskConfig.operationParameters.addFeature;\n          }\n          this.pipelineSetting.removeFeatureCheckBoxVal =\n            loadVal.taskConfig.operationParameters.removeFeature;\n          this.posModelControl.setValue(\n            loadVal.taskConfig.operationParameters.model\n          );\n        }\n      }\n    });\n  }\n\n  mouseOverBin(): void {\n    this.binColor = \"warn\";\n  }\n\n  mouseLeaveBin(): void {\n    this.binColor = \"basic\";\n  }\n\n  /**\n   * function to remove operation\n   */\n  removeOperation(): void {\n    //Remove the operation data from data store\n    this._taDataStore.removeOperation(this.operation);\n    //Emit the remove event to parent\n    this.onRemove.emit(this.operation);\n  }\n\n  //function to open the pipeline settings dialog\n  showPipelineSetting(): void {\n    /**\n     * Opens the dialog with form\n     */\n    let pipelineSettingsDialog = this._dialog.open(\n      PipelineSettingsDialogComponent,\n      {\n        minWidth: \"50vw\",\n        data: {\n          list: this.posPipelineSettingsList,\n          selectedVal: this.posPipelineSettingValue,\n        },\n      }\n    );\n\n    pipelineSettingsDialog.afterClosed().subscribe((data) => {\n      if (data && this.output !== undefined) {\n        this.posPipelineSettingValue = data.featureArray;\n        let inputData = this._taDataStore.getSavedOperationOutput(this.operation.uid,);\n        inputData.taskConfig[0].operationParameters.addFeature = this.posPipelineSettingValue;\n        this._taDataStore.saveOperationOutput({\n          uid: this.operation.uid,\n          operation: this.operation.operation,\n          output: this.output,\n          taskConfig: inputData.taskConfig,\n        });\n      } else if (data) {\n        this.posPipelineSettingValue = data.featureArray;\n\n      }\n    });\n  }\n\n  mouseOverGraph(): void {\n    this.graphIconColor = \"primary\";\n  }\n\n  mouseLeaveGraph(): void {\n    this.graphIconColor = \"basic\";\n  }\n\n  /**\n   * function to compute output\n   */\n  onSubmit = function (\n    type: any,\n    modelData: FormControl,\n    tagsData: FormControl\n  ) {\n    let renderType = null;\n    if (type) {\n      renderType = type;\n    } else {\n      // vm.loaderText = \"Please wait, POS Tagging is in progress.\";\n      // vm.showLoading = true;\n      this._spinner.showSpinner();\n      renderType = \"table\";\n    }\n    let inputData = this._taDataStore.getInputData(this.operation);\n    inputData = inputData?.output;\n    if (!inputData) {\n      this.showTextError = true;\n      // vm.showLoading = false;\n      this._spinner.stopSpinner();\n      // vm.showPopupLoading = false;\n      return;\n    } else {\n      this.showTextError = false;\n    }\n    let modelInfo = modelData.value;\n    if (modelInfo != \"spacy-en_core_web_sm\") {\n      modelInfo = modelData.value;\n    }\n    let taskConfig = [\n      {\n        operationName: \"pos\",\n        operationParameters: {\n          model: modelInfo.modelName || modelData.value,\n          keepTags: tagsData.value || [],\n          addFeature: this.posPipelineSettingValue || [],\n          modelPath: `./textanalysis/models/${modelInfo.modelName}`,\n          framework: modelInfo.frameWork,\n          // removeFeature : vm.pipelineSetting.removeFeatureCheckBoxVal || false\n        },\n      },\n    ];\n    this._textAnalysis\n      .pos(inputData, taskConfig, renderType)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          this.showOutput = true;\n          if (renderType == \"html\") {\n            /**\n             * Opens the dialog with form\n             */\n            let graphViewDialog = this._dialog.open(\n              TextAnalysisDialogComponent,\n              {\n                width: \"60%\",\n                data: {\n                  data: res.data.data,\n                  showGraph: \"pos\",\n                },\n              }\n            );\n\n            graphViewDialog.afterClosed().subscribe((data) => { });\n          } else {\n            this.output = res.data.data;\n            this.dataSource.data = res.data.data;\n            this.dataSource._updateChangeSubscription();\n          }\n          // store the data in the temporary service\n          this._taDataStore.saveOperationOutput({\n            uid: this.operation.uid,\n            operation: this.operation.operation,\n            output: this.output,\n            taskConfig: taskConfig,\n          });\n          // vm.showLoading = false;\n          this._spinner.stopSpinner();\n          // vm.showPopupLoading = false;\n          // $rootScope.$broadcast(\"onSubmit\");\n          this._taDataStore.broadcastSubmitEvent(\"updateInputBar\");\n        },\n        (err: Error) => {\n          this.showOutput = false;\n          this._spinner.stopSpinner();\n          this._toaster.error(\"Server Error\", \"Error performing pos tagging\");\n          // vm.showLoading = false;\n          // vm.showPopupLoading = false;\n          // toaster.pop('error', $scope.app.name, 'Error occured at output generation', 3000);\n        }\n      );\n  };\n\n  /**\n   * Unsubscribes the subscriptions after destroy\n   */\n  ngOnDestroy() {\n    this.unsubscribe$.next(false);\n    this.unsubscribe$.unsubscribe();\n  }\n}\n","<!-- <p>text-summarization works!{{ operation | json }}</p> -->\n<mat-expansion-panel [expanded]=\"operation.isPanelExpanded\">\n  <mat-expansion-panel-header>\n    <mat-panel-title style=\"color: black\" [matTooltip]=\"_utils.getTootip('textSummarization')\">\n      {{ operation.title }}\n    </mat-panel-title>\n    <mat-panel-description>\n      <mat-icon class=\"fa fa-trash\" [color]=\"binColor\" style=\"margin-left: 95%; cursor: pointer; font-size: 16px\"\n        (mouseover)=\"mouseOverBin()\" (mouseleave)=\"mouseLeaveBin()\" (click)=\"removeOperation()\"></mat-icon>\n    </mat-panel-description>\n  </mat-expansion-panel-header>\n\n  <mat-card style=\"border-left: 7px solid green; display: flex\" #inputInfoCard>\n    <mat-card-content>\n      <div class=\"d-flex flex-row\" style=\"margin: auto\">\n        <div style=\"width: min-content; margin: auto\">\n          <mat-icon class=\"fas fa-info-circle fa-2x\" style=\"color: green\"></mat-icon>\n        </div>\n        <div style=\"width: max-content; margin: auto\">\n          <b>&nbsp;&nbsp;&nbsp;Data is taken from\n            {{ inputData ? inputData.operation : \"inputData\" }}</b>\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <br />\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label [innerText]=\"\n        textSummarizationModelControl.value ? 'Model' : 'Select a model'\n      \"></mat-label>\n    <mat-select [formControl]=\"textSummarizationModelControl\">\n      <mat-option *ngFor=\"let model of modelsList\" [value]=\"model.modelKey\">\n        {{ model.modelName }}\n      </mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"\n        textSummarizationModelControl.touched &&\n        textSummarizationModelControl.hasError('required')\n      \">Model is required.</mat-error>\n  </mat-form-field>\n  <span *ngIf=\"textSummarizationModelControl.value !== 't5model'\">Information Retained :\n    <mat-slider id=\"informationRetainedSlider\" thumbLabel [displayWith]=\"informationRetainedSliderLabel\" min=\"0\"\n      max=\"100\" step=\"1\" value=\"50\" color=\"primary\" [disabled]=\"!textSummarizationModelControl.value\"\n      [(ngModel)]=\"informationRetained\"></mat-slider>&nbsp;&nbsp;<b>{{ informationRetained }}%</b>\n  </span>\n  <div class=\"row\" *ngIf=\"textSummarizationModelControl.value == 't5model'\">\n    <div class=\"col-md-6\">\n      <mat-form-field>\n        <mat-label>Minimum Length of Sequence</mat-label>\n        <input matInput type=\"number\" name=\"minSeq\" id=\"minSeq\" min=\"0\" max=\"500\" required\n          [formControl]=\"minSequence\" />\n      </mat-form-field>\n      <mat-error *ngIf=\"minSequence.hasError('pattern')\">Enter Integer numbers only</mat-error>\n    </div>\n    <div class=\"col-md-6\">\n      <mat-form-field>\n        <mat-label>Maximum Length of Sequence</mat-label>\n        <input matInput type=\"number\" name=\"maxSeq\" id=\"maxSeq\" min=\"1\" max=\"500\" required\n          [formControl]=\"maxSequence\" />\n      </mat-form-field>\n      <mat-error *ngIf=\"maxSequence.hasError('pattern')\">Enter Integer numbers only</mat-error>\n    </div>\n  </div>\n  <br />\n  <button id=\"taOperationsSummarizeSubmitBtn\" mat-raised-button [disabled]=\"\n      textSummarizationModelControl.value == 't5model'\n        ? textSummarizationModelControl.hasError('required') ||\n          minSequence.hasError('required') ||\n          maxSequence.hasError('required')\n        : textSummarizationModelControl.hasError('required')\n    \" (click)=\"\n      onSubmit(\n        textSummarizationModelControl,\n        informationRetained,\n        minSequence,\n        maxSequence\n      )\n    \">\n    Submit\n  </button>\n  <br />\n\n  <div class=\"form-group row\">\n    <div class=\"text-danger offset-2 mt-2\" *ngIf=\"showTextError\">\n      Select dataset and feature or enter the text to generate the output\n    </div>\n    <div class=\"text-danger mt-2 offset-2\" *ngIf=\"showError\">\n      {{ errorMessage }}\n    </div>\n  </div>\n  <!-- output section -->\n  <mat-card class=\"mt-3\" *ngIf=\"showOutput\" style=\"background-color: #f5f5f5\">\n    <mat-card-header style=\"border-bottom: 1px solid #3c3c3c\">\n      <mat-card-title-group>\n        <mat-card-title>Output</mat-card-title>\n      </mat-card-title-group>\n      <div style=\"margin-left: 85%\">\n        <mat-icon class=\"far fa-copy\" [color]=\"copyColor\" (mouseover)=\"mouseOverCopy()\" (mouseleave)=\"mouseLeaveCopy()\"\n          (click)=\"copyOutput()\" #tooltip=\"matTooltip\" [matTooltip]=\"tooltipText\" matTooltipPosition=\"above\"\n          style=\"cursor: pointer; font-size: 16px\"></mat-icon>\n      </div>\n    </mat-card-header>\n    <mat-card-content class=\"mt-2\">\n      <p id=\"summarizationOutput\">{{ output }}</p>\n    </mat-card-content>\n  </mat-card>\n</mat-expansion-panel>","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { UtilsService } from \"src/app/shared/utils.service\";\nimport { TaDataStoreService } from \"../../ta-datastore.service\";\nimport { TextAnalysisService } from \"../../text-analysis.service\";\n\n@Component({\n  selector: \"app-text-summarization\",\n  templateUrl: \"./text-summarization.component.html\",\n  styleUrls: [\"./text-summarization.component.scss\"],\n})\nexport class TextSummarizationComponent implements OnInit {\n  @Input() operation: any;\n\n  @Output() onRemove = new EventEmitter();\n\n  /**\n   * models array\n   */\n  modelsList: Array<any> = [\n    {\n      modelName: \"Scoring Model\",\n      modelKey: \"scoringmodel\",\n    },\n    {\n      modelName: \"Similarity Model\",\n      modelKey: \"similaritymodel\",\n    },\n    {\n      modelName: \"Abstractive model-T5\",\n      modelKey: \"t5model\",\n    },\n  ];\n\n  informationRetained: Number = 50;\n\n  binColor: string = \"basic\";\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n\n  showTextError: Boolean = false;\n  showError: Boolean = false;\n  showOutput: Boolean = false;\n\n  output: any;\n\n  copyColor: string = \"basic\";\n\n  tooltipText: string = \"Click to copy!\";\n\n  inputData: any;\n  errorMessage: string;\n  textSummarizationModelControl = new FormControl(\"\", Validators.required);\n  minSequence = new FormControl(\"\", [\n    Validators.required,\n    Validators.pattern(\"^[0-9]*$\"),\n  ]);\n  maxSequence = new FormControl(\"\", [\n    Validators.required,\n    Validators.pattern(\"^[0-9]*$\"),\n  ]);\n  constructor(\n    private _taDataStore: TaDataStoreService,\n    private _textAnalysis: TextAnalysisService,\n    private _spinner: SpinnerService,\n    public _utils: UtilsService\n  ) { }\n\n  ngOnInit(): void {\n    this.inputData = this._taDataStore.getInputData(this.operation);\n    this.setData();\n    this._taDataStore.onSubmitEventSubject.subscribe((val) => {\n      this.inputData = this._taDataStore.getInputData(this.operation);\n    });\n  }\n\n  //function to set db data to component\n  setData(): void {\n    let loadData = this._taDataStore.getAllOperationData();\n    loadData.forEach((loadVal) => {\n      if (loadVal.uid == this.operation.uid) {\n        if (loadVal.taskConfig.operationParameters) {\n          this.textSummarizationModelControl.setValue(\n            loadVal.taskConfig.operationParameters.model\n          );\n          this.minSequence.setValue(\n            loadVal.taskConfig.operationParameters.t5minlength\n          );\n          this.maxSequence.setValue(\n            loadVal.taskConfig.operationParameters.t5maxlength\n          );\n          this.informationRetained =\n            loadVal.taskConfig.operationParameters.informationRetained;\n        }\n      }\n    });\n  }\n\n  /**\n   * function to pass the value to thumb of the slider.\n   * @param value\n   * @returns\n   */\n  informationRetainedSliderLabel(value: Number) {\n    return value;\n  }\n\n  mouseOverBin(): void {\n    this.binColor = \"warn\";\n  }\n\n  mouseLeaveBin(): void {\n    this.binColor = \"basic\";\n  }\n\n  /**\n   * function to remove operation\n   */\n  removeOperation(): void {\n    //Remove the operation data from data store\n    this._taDataStore.removeOperation(this.operation);\n    //Emit the remove event ot parent\n    this.onRemove.emit(this.operation);\n  }\n\n  mouseOverCopy(): void {\n    this.copyColor = \"primary\";\n  }\n\n  mouseLeaveCopy(): void {\n    this.copyColor = \"basic\";\n  }\n\n  //function to copy summarization output\n  copyOutput = function () {\n    let textToCopyElement = document.getElementById(\n      \"summarizationOutput\"\n    ).innerText;\n    let dummyElem = document.createElement(\"textarea\");\n    document.body.appendChild(dummyElem);\n    dummyElem.value = textToCopyElement;\n    dummyElem.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummyElem);\n    this.tooltipText = \"Copied!\";\n  };\n\n  onSubmit = function (\n    modelData: FormControl,\n    sliderVal: Number,\n    minSequence: FormControl,\n    maxSequence: FormControl\n  ) {\n    this._spinner.showSpinner();\n    this.showTextError = false;\n    let inputData = this._taDataStore.getInputData(this.operation);\n    inputData = inputData?.output;\n    if (!inputData) {\n      this.showTextError = true;\n      this._spinner.stopSpinner();\n      return;\n    }\n    if (modelData.value == \"t5model\") {\n      if (minSequence.value == null || maxSequence.value == null) {\n        this.showError = true;\n        this._spinner.stopSpinner();\n        this.errorMessage = \"Enter the Minimum and maximum sequence value\";\n        return;\n      } else {\n        this.showError = false;\n      }\n      if (maxSequence.value == 0) {\n        this.showError = true;\n        this._spinner.stopSpinner();\n        this.errorMessage =\n          \"Maximum length of sequence  number should be greater than zero.\";\n        return;\n      }\n    }\n    //object to send to the summarization api.\n    let summarizeParam = {\n      data: inputData,\n      taskConfig: [\n        {\n          operationName: \"textSummarization\",\n          operationParameters: {\n            model: modelData.value,\n            informationRetained: sliderVal,\n            t5minlength: this.minSequence.value,\n            t5maxlength: this.maxSequence.value,\n          },\n        },\n      ],\n    };\n    if (modelData.value == \"t5model\") {\n      delete summarizeParam.taskConfig[0].operationParameters[\n        \"informationRetained\"\n      ];\n    }\n    this._textAnalysis\n      .textSummarization(summarizeParam)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          this.showOutput = true;\n          this.output = res.data.data;\n          //save result back to the service\n          this._taDataStore.saveOperationOutput({\n            uid: this.operation.uid,\n            operation: \"textSummarization\",\n            output: this.output,\n            taskConfig: summarizeParam.taskConfig,\n          });\n          // vm.showLoading = false;\n          this._spinner.stopSpinner();\n          // $rootScope.$broadcast(\"onSubmit\");\n          this._taDataStore.broadcastSubmitEvent(\"updateInputBar\");\n        },\n        (err: Error) => {\n          this.showOutput = false;\n          // toaster.pop('error', $scope.app.name, 'Error Summarizing text', 3000);\n          // vm.showLoading = false;\n          this._spinner.stopSpinner();\n          this._toaster.error(\"Server Error\", \"Error performing text summarization\");\n        }\n      );\n  };\n\n  /**\n   * Unsubscribes the subscriptions after destroy\n   */\n  ngOnDestroy() {\n    this.unsubscribe$.next(false);\n    this.unsubscribe$.unsubscribe();\n  }\n}\n","<!-- <p>sentiment-analysis works!{{ operation | json }}</p> -->\n<mat-expansion-panel [expanded]=\"operation.isPanelExpanded\">\n  <mat-expansion-panel-header>\n    <mat-panel-title\n      style=\"color: black\"\n      [matTooltip]=\"_utils.getTootip('sentimentAnalysis')\"\n    >\n      {{ operation.title }}\n    </mat-panel-title>\n    <mat-panel-description\n      ><mat-icon\n        class=\"fa fa-trash\"\n        [color]=\"binColor\"\n        style=\"margin-left: 95%; cursor: pointer; font-size: 16px\"\n        (mouseover)=\"mouseOverBin()\"\n        (mouseleave)=\"mouseLeaveBin()\"\n        (click)=\"removeOperation()\"\n      ></mat-icon\n    ></mat-panel-description>\n  </mat-expansion-panel-header>\n\n  <mat-card style=\"border-left: 7px solid green; display: flex\" #inputInfoCard>\n    <mat-card-content>\n      <div class=\"d-flex flex-row\" style=\"margin: auto\">\n        <div style=\"width: min-content; margin: auto\">\n          <mat-icon\n            class=\"fas fa-info-circle fa-2x\"\n            style=\"color: green\"\n          ></mat-icon>\n        </div>\n        <div style=\"width: max-content; margin: auto\">\n          <b\n            >&nbsp;&nbsp;&nbsp;Data is taken from\n            {{ inputData ? inputData.operation : \"inputData\" }}</b\n          >\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <br />\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label\n      [innerText]=\"\n        sentimentAnalysisModelControl.value ? 'Model' : 'Select a model'\n      \"\n    ></mat-label>\n    <mat-select [formControl]=\"sentimentAnalysisModelControl\">\n      <mat-option *ngFor=\"let model of modelsList\" [value]=\"model.modelKey\">\n        {{ model.modelName }}\n      </mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"\n        sentimentAnalysisModelControl.touched &&\n        sentimentAnalysisModelControl.hasError('required')\n      \"\n      >Model is required.</mat-error\n    >\n  </mat-form-field>\n  <br />\n  <span>\n    <button\n      id=\"taOperationsSentimentSubmitBtn\"\n      mat-raised-button\n      [disabled]=\"sentimentAnalysisModelControl.hasError('required')\"\n      (click)=\"onSubmit(sentimentAnalysisModelControl)\"\n    >\n      Submit</button\n    >&nbsp;&nbsp;<span class=\"linkText\" (click)=\"showPipelineSetting()\"\n      >Settings</span\n    >\n  </span>\n\n  <div class=\"form-group row\">\n    <div class=\"text-danger offset-2 mt-2\" *ngIf=\"showTextError\">\n      Select dataset and feature or enter the text to generate the output\n    </div>\n  </div>\n\n  <br />\n  <!-- output section -->\n  <mat-card class=\"mt-3\" *ngIf=\"showOutput\" style=\"background-color: #f5f5f5\">\n    <mat-card-header>\n      <mat-card-title>Output</mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"mt-2\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Sentiment Column -->\n        <ng-container matColumnDef=\"sentiment\">\n          <th mat-header-cell *matHeaderCellDef>Sentiment</th>\n          <td mat-cell *matCellDef=\"let item\">{{ item.sentiment }}</td>\n        </ng-container>\n\n        <!-- Tag Column -->\n        <ng-container matColumnDef=\"subjectivity\">\n          <th mat-header-cell *matHeaderCellDef>Subjectivity Score</th>\n          <td mat-cell *matCellDef=\"let item\">\n            {{ item.subjectivity | number: \"1.0-2\" }}\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <!-- <p>{{ output }}</p> -->\n    </mat-card-content>\n  </mat-card>\n</mat-expansion-panel>\n","import { takeUntil } from \"rxjs/operators\";\nimport { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { TaDataStoreService } from \"../../ta-datastore.service\";\nimport { TextAnalysisService } from \"../../text-analysis.service\";\nimport { Subject } from \"rxjs\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { LocalStorageService } from \"src/app/shared/local-storage.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PipelineSettingsDialogComponent } from \"../../pipeline-settings-dialog/pipeline-settings-dialog.component\";\nimport { UtilsService } from \"src/app/shared/utils.service\";\n\n@Component({\n  selector: \"app-sentiment-analysis\",\n  templateUrl: \"./sentiment-analysis.component.html\",\n  styleUrls: [\"./sentiment-analysis.component.scss\"],\n})\nexport class SentimentAnalysisComponent implements OnInit {\n  @Input() operation: any;\n\n  @Output() onRemove = new EventEmitter();\n\n  /**\n   * models array for sentiment analysis\n   */\n  modelsList: Array<any> = [\n    {\n      modelName: \"Polarized Model\",\n      modelKey: \"polarizedmodel\",\n    },\n  ];\n\n  binColor: string = \"basic\";\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n\n  showTextError: Boolean = false;\n\n  showOutput: Boolean = false;\n\n  output: any;\n\n  project: any;\n\n  user: any;\n\n  inputData: any;\n\n  dataSource: MatTableDataSource<[]> = new MatTableDataSource();\n  displayedColumns: Array<string> = [];\n\n  sentimentAnalysisModelControl = new FormControl(\"\", Validators.required);\n\n  //default value for the pipeline setting modal\n  pipelineSetting: any = {\n    removeFeatureCheckBoxVal: false,\n    setSubjectivityAsFeature: false,\n    setSentimentAsFeature: false,\n  };\n\n  sentimentAnalysisPipelineSettingsList: any = [\n    {\n      pipeSettingName: \"Create sentiment as a new feature\",\n      pipeSettingTag: \"sentiment\",\n    },\n    {\n      pipeSettingName: \"Create subjectivity as a new feature\",\n      pipeSettingTag: \"subjectivity\",\n    },\n  ];\n\n  sentimentAnalysisPipelineSettingValue: any;\n\n  constructor(\n    private _dialog: MatDialog,\n    private _toaster: ToastrService,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _taDataStore: TaDataStoreService,\n    private _textAnalysis: TextAnalysisService,\n    public _utils: UtilsService\n  ) {\n    // this._spinner.showSpinner();\n    this.project = this._localStorage.getItem(\"project\");\n    this.user = this._localStorage.getItem(\"user\");\n    this.displayedColumns = [\"sentiment\", \"subjectivity\"];\n  }\n\n  ngOnInit(): void {\n    this.inputData = this._taDataStore.getInputData(this.operation);\n    this.setData();\n    this._taDataStore.onSubmitEventSubject.subscribe((val) => {\n      this.inputData = this._taDataStore.getInputData(this.operation);\n    });\n  }\n\n  //function to set db data to component\n  setData(): void {\n    let loadData = this._taDataStore.getAllOperationData();\n    loadData.forEach((loadVal) => {\n      if (loadVal.uid == this.operation.uid) {\n        if (loadVal.taskConfig.operationParameters) {\n          this.sentimentAnalysisModelControl.setValue(\n            loadVal.taskConfig.operationParameters.model\n          );\n          if (loadVal.taskConfig.operationParameters.addFeature.length) {\n            this.sentimentAnalysisPipelineSettingValue =\n              loadVal.taskConfig.operationParameters.addFeature;\n          }\n          this.pipelineSetting.removeFeatureCheckBoxVal =\n            loadVal.taskConfig.operationParameters.removeFeature;\n        }\n      }\n    });\n  }\n\n  mouseOverBin(): void {\n    this.binColor = \"warn\";\n  }\n\n  mouseLeaveBin(): void {\n    this.binColor = \"basic\";\n  }\n\n  /**\n   * function to remove operation\n   */\n  removeOperation(): void {\n    //Remove the operation data from data store\n    this._taDataStore.removeOperation(this.operation);\n    //Emit the remove event ot parent\n    this.onRemove.emit(this.operation);\n  }\n\n  //function to open the pipeline settings dialog\n  showPipelineSetting(): void {\n    /**\n     * Opens the dialog with form\n     */\n    let pipelineSettingsDialog = this._dialog.open(\n      PipelineSettingsDialogComponent,\n      {\n        minWidth: \"50vw\",\n        data: {\n          list: this.sentimentAnalysisPipelineSettingsList,\n          selectedVal: this.sentimentAnalysisPipelineSettingValue,\n        },\n      }\n    );\n\n    pipelineSettingsDialog.afterClosed().subscribe((data) => {\n      if (data && this.output !== undefined) {\n        this.sentimentAnalysisPipelineSettingValue = data.featureArray;\n        let inputData = this._taDataStore.getSavedOperationOutput(this.operation.uid,);\n        inputData.taskConfig[0].operationParameters.addFeature = this.sentimentAnalysisPipelineSettingValue;\n        this._taDataStore.saveOperationOutput({\n          uid: this.operation.uid,\n          operation: this.operation.operation,\n          output: this.output,\n          taskConfig: inputData.taskConfig,\n        });\n      } else if (data) {\n        this.sentimentAnalysisPipelineSettingValue = data.featureArray;\n      }\n    });\n  }\n\n  onSubmit = function (modelData: FormControl): void {\n    // vm.loaderText = \"Please Wait, Sentiment Analysis is in progress\";\n    // vm.showLoading = true;\n    this._spinner.showSpinner();\n    this.showTextError = false;\n    let inputData = this._taDataStore.getInputData(this.operation);\n    inputData = inputData?.output;\n    //checking if the inputData is null\n    if (!inputData) {\n      this.showTextError = true;\n      // vm.showLoading = false;\n      this._spinner.stopSpinner();\n      return;\n    }\n    //object to send to the summarization api.\n    var sentimentAnalysisParams = {\n      data: inputData,\n      taskConfig: [\n        {\n          operationName: \"sentimentAnalysis\",\n          operationParameters: {\n            model: modelData.value,\n            addFeature: this.sentimentAnalysisPipelineSettingValue || [],\n            // removeFeature : vm.pipelineSetting.removeFeatureCheckBoxVal || false\n          },\n        },\n      ],\n    };\n    this._textAnalysis\n      .sentimentAnalysis(sentimentAnalysisParams)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          this.showOutput = true;\n          this.output = res.data.data;\n          this.dataSource.data = [res.data.data];\n          this.dataSource._updateChangeSubscription();\n          //save result back to the service\n          this._taDataStore.saveOperationOutput({\n            uid: this.operation.uid,\n            operation: \"sentimentAnalysis\",\n            output: this.output,\n            taskConfig: sentimentAnalysisParams.taskConfig,\n          });\n          // vm.showLoading = false;\n          this._spinner.stopSpinner();\n          // $rootScope.$broadcast(\"onSubmit\");\n          this._taDataStore.broadcastSubmitEvent(\"updateInputBar\");\n        },\n        (err: Error) => {\n          this.showOutput = false;\n          // toaster.pop(\"error\", $scope.app.name, \"Error Analysing text\", 3000);\n          // vm.showLoading = false;\n          this._spinner.stopSpinner();\n          this._toaster.error(\"Server Error\", \"Error performing sentiment analysis\");\n        }\n      );\n  };\n\n  /**\n   * Unsubscribes the subscriptions after destroy\n   */\n  ngOnDestroy() {\n    this.unsubscribe$.next(false);\n    this.unsubscribe$.unsubscribe();\n  }\n}\n","<!-- <p>pos-tagging works!{{ operation | json }}</p> -->\n<mat-expansion-panel\n  [expanded]=\"operation.isPanelExpanded\"\n  [disabled]=\"isDisabled\"\n>\n  <mat-expansion-panel-header>\n    <mat-panel-title\n      style=\"color: black\"\n      [matTooltip]=\"_utils.getTootip('ner')\"\n    >\n      {{ operation.title }}\n    </mat-panel-title>\n    <!-- <mat-panel-description>\n      <div\n        style=\"\n          display: flex;\n          flex-direction: row;\n          margin-left: 92%;\n          cursor: pointer;\n        \"\n      >\n        <div\n          class=\"tour-animate\"\n          [matMenuTriggerFor]=\"guidedTour\"\n          matTooltip=\"Need Help?\"\n          (mouseover)=\"mouseOverHelp()\"\n          (mouseleave)=\"mouseLeaveHelp()\"\n          (click)=\"getGuideDetails()\"\n        >\n          <mat-icon class=\"material-icons text-dark\"> help_outline </mat-icon>\n        </div>\n\n        <mat-menu #guidedTour=\"matMenu\">\n          <button\n            mat-menu-item\n            id=\"{{ guide.split('?')[0] }}\"\n            *ngFor=\"let guide of guideList\"\n            [ngClass]=\"\n              guideList.includes('Nothing to show') ? 'text-danger' : ''\n            \"\n          >\n            {{ guide }}hi\n          </button>\n        </mat-menu>\n        <div matTooltip=\"Delete\">\n          <mat-icon\n            class=\"fa fa-trash\"\n            [color]=\"binColor\"\n            style=\"cursor: pointer; font-size: 16px\"\n            (mouseover)=\"mouseOverBin()\"\n            (mouseleave)=\"mouseLeaveBin()\"\n            (click)=\"removeOperation()\"\n          ></mat-icon>\n        </div>\n      </div>\n    </mat-panel-description> -->\n    <mat-panel-description\n      ><mat-icon\n        class=\"fa fa-trash\"\n        [color]=\"binColor\"\n        style=\"margin-left: 95%; cursor: pointer; font-size: 16px\"\n        (mouseover)=\"mouseOverBin()\"\n        (mouseleave)=\"mouseLeaveBin()\"\n        (click)=\"removeOperation()\"\n      ></mat-icon\n    ></mat-panel-description>\n  </mat-expansion-panel-header>\n\n  <mat-card style=\"border-left: 7px solid green; display: flex\" #inputInfoCard>\n    <mat-card-content>\n      <div class=\"d-flex flex-row\" style=\"margin: auto\">\n        <div style=\"width: min-content; margin: auto\">\n          <mat-icon\n            class=\"fas fa-info-circle fa-2x\"\n            style=\"color: green\"\n          ></mat-icon>\n        </div>\n        <div style=\"width: max-content; margin: auto\">\n          <b\n            >&nbsp;&nbsp;&nbsp;Data is taken from\n            {{ inputData ? inputData.operation : \"inputData\" }}</b\n          >\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <br />\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label\n      [innerText]=\"nerModelControl.value ? 'Model' : 'Select a model'\"\n    ></mat-label>\n    <mat-select [formControl]=\"nerModelControl\">\n      <mat-option value=\"spacy-en_core_web_sm\">spacy-en_core_web_sm</mat-option>\n      <mat-option *ngFor=\"let model of modelList\" [value]=\"model\">\n        {{ model.modelName }}\n      </mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"nerModelControl.touched && nerModelControl.hasError('required')\"\n      >Model is required.</mat-error\n    >\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label\n      [innerText]=\"nerTagsControl.value ? 'Tags Selected' : 'Choose some tags'\"\n    ></mat-label>\n    <mat-select [formControl]=\"nerTagsControl\" required multiple>\n      <mat-option *ngFor=\"let tag of tags; let i = index\" [value]=\"tag\">\n        {{ tag }}\n      </mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"nerTagsControl.touched && nerTagsControl.hasError('required')\"\n      >Atleast choose one tag</mat-error\n    >\n  </mat-form-field>\n  <span>\n    <button\n      id=\"taOperationsNerSubmitBtn\"\n      mat-raised-button\n      [disabled]=\"\n        nerModelControl.hasError('required') &&\n        nerTagsControl.hasError('required')\n      \"\n      (click)=\"onSubmit(null, nerModelControl, nerTagsControl)\"\n    >\n      Submit</button\n    >&nbsp;&nbsp;<span class=\"linkText\" (click)=\"showPipelineSetting()\"\n      >Settings</span\n    >\n  </span>\n\n  <div class=\"form-group row\">\n    <div class=\"text-danger offset-2 mt-2\" *ngIf=\"showTextError\">\n      Select dataset and feature or enter the text to generate the output\n    </div>\n  </div>\n\n  <br />\n  <!-- output section -->\n  <mat-card class=\"mt-3\" *ngIf=\"showOutput\" style=\"background-color: #f5f5f5\">\n    <mat-card-header>\n      <mat-card-title-group>\n        <mat-card-title>Output</mat-card-title>\n      </mat-card-title-group>\n      <div style=\"margin-left: 85%\">\n        <mat-icon\n          class=\"far fa-chart-bar\"\n          [color]=\"graphIconColor\"\n          (mouseover)=\"mouseOverGraph()\"\n          (mouseleave)=\"mouseLeaveGraph()\"\n          (click)=\"onSubmit('html', nerModelControl, nerTagsControl)\"\n          #tooltip=\"matTooltip\"\n          matTooltip=\"Named Entity Visualization\"\n          matTooltipPosition=\"above\"\n          matTooltipHideDelay=\"1000\"\n          style=\"cursor: pointer; font-size: 16px\"\n        ></mat-icon>\n      </div>\n    </mat-card-header>\n    <mat-card-content class=\"mt-2\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Word Column -->\n        <ng-container matColumnDef=\"Word\">\n          <th mat-header-cell *matHeaderCellDef>Word</th>\n          <td mat-cell *matCellDef=\"let item\">{{ item.word }}</td>\n        </ng-container>\n\n        <!-- Tag Column -->\n        <ng-container matColumnDef=\"Tag\">\n          <th mat-header-cell *matHeaderCellDef>Tag</th>\n          <td mat-cell *matCellDef=\"let item\">{{ item.tag }}</td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <!-- <p>{{ output }}</p> -->\n    </mat-card-content>\n  </mat-card>\n</mat-expansion-panel>\n","import { FormControl, Validators } from \"@angular/forms\";\nimport { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { LocalStorageService } from \"src/app/shared/local-storage.service\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { DashboardService } from \"src/app/routes/dashboard/dashboard.service\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { TaDataStoreService } from \"../../ta-datastore.service\";\nimport { TextAnalysisService } from \"../../text-analysis.service\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { PipelineSettingsDialogComponent } from \"../../pipeline-settings-dialog/pipeline-settings-dialog.component\";\nimport { TextAnalysisDialogComponent } from \"../../text-analysis-dialog/text-analysis-dialog.component\";\nimport { UtilsService } from \"src/app/shared/utils.service\";\nimport { Router } from \"@angular/router\";\nimport { GuidedToursService } from \"src/app/layout/header/guided-tours.service\";\n\n@Component({\n  selector: \"app-ner\",\n  templateUrl: \"./ner.component.html\",\n  styleUrls: [\"./ner.component.scss\"],\n})\nexport class NerComponent implements OnInit {\n  @Input() operation: any;\n\n  @Output() onRemove = new EventEmitter();\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n\n  dataSource: MatTableDataSource<[]> = new MatTableDataSource();\n  displayedColumns: Array<string> = [];\n\n  showSpinner: boolean = false;\n  user: any;\n  project: any;\n  showError: boolean;\n  output: any;\n  showOutput: Boolean = false;\n  showTextError: boolean = false;\n  nerUploadModelIssueMsg: boolean = false;\n  modelList: Array<any>;\n  tags: Array<any> = [];\n  binColor: string = \"basic\";\n  inputData: any;\n  isDisabled: boolean = false;\n  nerModelControl = new FormControl(\"\", Validators.required);\n  nerTagsControl = new FormControl(\"\", Validators.required);\n  graphIconColor: string = \"basic\";\n  guideList: any = [];\n  //default value for the pipeline setting modal\n  pipelineSetting: any = {\n    removeFeatureCheckBoxVal: false,\n    setConcatenate: false,\n    setCountTag: false,\n  };\n\n  nerPipelineSettingsList: any = [\n    {\n      pipeSettingName: \"Count the words that matched the tags\",\n      pipeSettingTag: \"count\",\n    },\n    {\n      pipeSettingName: \"Concatenate all the words with matched tags\",\n      pipeSettingTag: \"concat\",\n    },\n  ];\n\n  pipelineSettingValue: any;\n\n  constructor(\n    private _dialog: MatDialog,\n    private _dashboardService: DashboardService,\n    private _toaster: ToastrService,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _taDataStore: TaDataStoreService,\n    private _textAnalysis: TextAnalysisService,\n    private _router: Router,\n    public _guideDetails: GuidedToursService,\n    public _utils: UtilsService\n  ) {\n    this.project = this._localStorage.getItem(\"project\");\n    this.user = this._localStorage.getItem(\"user\");\n    this.displayedColumns = [\"Word\", \"Tag\"];\n    this.nerModelControl.valueChanges.subscribe((modelVal) => {\n      this.setNerLabels(modelVal);\n    });\n  }\n\n  ngOnInit(): void {\n    this.gettaModelsList(\"ner\");\n    this.setData();\n    this.inputData = this._taDataStore.getInputData(this.operation);\n    this._taDataStore.onSubmitEventSubject.subscribe((val) => {\n      this.inputData = this._taDataStore.getInputData(this.operation);\n    });\n  }\n\n  // function to get the guide list for ner.\n  // getGuideDetails(): void {\n  //   this.guideList = this._guideDetails.getGuideData(\"ner\");\n  // }\n\n  /**\n   * tags input\n   */\n  setDefaults() {\n    this.tags = [\n      \"PERSON\",\n      \"NORP\",\n      \"ORG\",\n      \"GPE\",\n      \"LOC\",\n      \"PRODUCT\",\n      \"EVENT\",\n      \"WORK OF ART\",\n      \"LANGUAGE\",\n      \"DATE\",\n      \"TIME\",\n      \"PERCENT\",\n      \"MONEY\",\n      \"QUANTITY\",\n      \"ORDINAL\",\n      \"CARDINAL\",\n    ];\n    // this._spinner.stopSpinner();\n  }\n\n  //function to set db data to component\n  setData(): void {\n    let loadData = this._taDataStore.getAllOperationData();\n    loadData.forEach((loadVal) => {\n      if (loadVal.uid == this.operation.uid) {\n        if (loadVal.taskConfig.operationParameters) {\n          this.nerTagsControl.setValue(\n            loadVal.taskConfig.operationParameters.keepTags\n          );\n          if (loadVal.taskConfig.operationParameters.addFeature.length) {\n            this.pipelineSettingValue =\n              loadVal.taskConfig.operationParameters.addFeature;\n          }\n          this.nerModelControl.setValue(\n            loadVal.taskConfig.operationParameters.model\n          );\n        }\n      }\n    });\n  }\n\n  //function to get all the models from the tamodel db\n  gettaModelsList(taskType: string) {\n    let foundNerModel = false;\n    this._dashboardService\n      .taModel(taskType)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (taModelList: any) => {\n          this.modelList = taModelList;\n          if (\n            this.nerModelControl.value &&\n            this.nerModelControl.value != \"spacy-en_core_web_sm\"\n          ) {\n            this.modelList.forEach((model) => {\n              if (\n                model.modelName === this.nerModelControl.value ||\n                model.oldModelFileName === this.nerModelControl.value\n              ) {\n                this.nerModelControl.setValue(model);\n                foundNerModel = true;\n              }\n            });\n            if (!foundNerModel) {\n              this.nerUploadModelIssueMsg = true;\n            }\n          }\n          this._spinner.stopSpinner();\n        },\n        (err: Error) => {\n          this._toaster.error(\"Server Error\", \"Text Analysis\");\n          this._spinner.stopSpinner();\n        }\n      );\n  }\n\n  //function to set ner labels to tags dropdown if the uploaded model is selected\n  setNerLabels(model: any): void {\n    if (model) {\n      // this.nerTagsControl.setValue([]);\n      this.tags.length = 0;\n      if (model != \"spacy-en_core_web_sm\") {\n        setTimeout(() => {\n          this.tags = model.nerLabels;\n          this._spinner.stopSpinner();\n        }, 1000);\n      } else {\n        setTimeout(() => {\n          this.setDefaults();\n          this._spinner.stopSpinner();\n        }, 1000);\n      }\n    } else {\n      this._spinner.stopSpinner();\n    }\n  }\n\n  // mouseOverHelp(): void {\n  //   this.isDisabled = true;\n  // }\n\n  // mouseLeaveHelp(): void {\n  //   this.isDisabled = false;\n  // }\n\n  mouseOverBin(): void {\n    this.binColor = \"warn\";\n  }\n\n  mouseLeaveBin(): void {\n    this.binColor = \"basic\";\n  }\n\n  /**\n   * function to remove operation\n   */\n  removeOperation(): void {\n    //Remove the operation data from data store\n    this._taDataStore.removeOperation(this.operation);\n    //Emit the remove event ot parent\n    this.onRemove.emit(this.operation);\n  }\n\n  //function to open the pipeline settings dialog\n  showPipelineSetting(): void {\n    /**\n     * Opens the dialog with form\n     */\n    let pipelineSettingsDialog = this._dialog.open(\n      PipelineSettingsDialogComponent,\n      {\n        minWidth: \"50vw\",\n        data: {\n          list: this.nerPipelineSettingsList,\n          selectedVal: this.pipelineSettingValue,\n        },\n      }\n    );\n\n    pipelineSettingsDialog.afterClosed().subscribe((data) => {\n      if (data && this.output !== undefined) {\n        this.pipelineSettingValue = data.featureArray;\n        let inputData = this._taDataStore.getSavedOperationOutput(this.operation.uid,);\n        inputData.taskConfig[0].operationParameters.addFeature = this.pipelineSettingValue;\n        this._taDataStore.saveOperationOutput({\n          uid: this.operation.uid,\n          operation: this.operation.operation,\n          output: this.output,\n          taskConfig: inputData.taskConfig,\n        });\n      } else if (data) {\n        this.pipelineSettingValue = data.featureArray;\n\n      }\n    });\n  }\n\n  mouseOverGraph(): void {\n    this.graphIconColor = \"primary\";\n  }\n\n  mouseLeaveGraph(): void {\n    this.graphIconColor = \"basic\";\n  }\n\n  /**\n   * function to compute output\n   */\n  onSubmit = function (\n    type: any,\n    modelData: FormControl,\n    tagData: FormControl\n  ) {\n    let renderType = null;\n    if (type) {\n      renderType = type;\n    } else {\n      // vm.loaderText = \"Please wait, NER is in progress.\";\n      // vm.showLoading = true;\n      this._spinner.showSpinner();\n      renderType = \"table\";\n    }\n    let inputData = this._taDataStore.getInputData(this.operation);\n    inputData = inputData?.output;\n    if (!inputData) {\n      this.showTextError = true;\n      this._spinner.stopSpinner();\n      // vm.showPopupLoading = false;\n      return;\n    } else {\n      this.showTextError = false;\n    }\n    // vm.loaderText = \"Please wait, NER is in progress.\";\n    // this._spinner.showSpinner();\n    let modelInfo = modelData.value;\n    if (modelInfo != \"spacy-en_core_web_sm\") {\n      modelInfo = modelData.value;\n    }\n    let taskConfig = [\n      {\n        operationName: \"ner\",\n        renderType: \"table\",\n        operationParameters: {\n          model: modelInfo.modelName || modelData.value,\n          keepTags: tagData.value || [],\n          addFeature: this.pipelineSettingValue || [],\n          modelPath: `./textanalysis/models/${modelInfo.modelName}`,\n          framework: modelInfo.frameWork,\n          // removeFeature: vm.pipelineSetting.removeFeatureCheckBoxVal || false\n        },\n      },\n    ];\n    this._textAnalysis\n      .ner(inputData, taskConfig, renderType)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          this.showOutput = true;\n          if (renderType == \"html\") {\n            /**\n             * Opens the dialog with form\n             */\n            let graphViewDialog = this._dialog.open(\n              TextAnalysisDialogComponent,\n              {\n                height: \"auto\",\n                width: \"60%\",\n                data: {\n                  data: res.data.data,\n                  showGraph: \"ner\",\n                },\n              }\n            );\n\n            graphViewDialog.afterClosed().subscribe((data) => { });\n          } else {\n            this.output = res.data.data;\n            this.dataSource.data = res.data.data;\n            this.dataSource._updateChangeSubscription();\n          }\n          // store the data in the temporary service\n          this._taDataStore.saveOperationOutput({\n            uid: this.operation.uid,\n            operation: this.operation.operation,\n            output: this.output,\n            taskConfig: taskConfig,\n          });\n          this._spinner.stopSpinner();\n          // vm.showLoading = false;\n          // vm.showPopupLoading = false;\n          // $rootScope.$broadcast(\"onSubmit\");\n          this._taDataStore.broadcastSubmitEvent(\"updateInputBar\");\n        },\n        (err: Error) => {\n          this.showOutput = false;\n          this._spinner.stopSpinner();\n          this._toaster.error(\"Server Error\", \"Error performing ner\");\n          // vm.showLoading = false;\n          // vm.showPopupLoading = false;\n          // toaster.pop('error', $scope.app.name, 'Error occured at output generation', 3000);\n        }\n      );\n  };\n}\n","<!-- <p>word-frequency works!{{ operation | json }}</p> -->\n<mat-expansion-panel [expanded]=\"operation.isPanelExpanded\">\n  <mat-expansion-panel-header>\n    <mat-panel-title\n      style=\"color: black\"\n      [matTooltip]=\"_utils.getTootip('wordFrequency')\"\n    >\n      {{ operation.title }}\n    </mat-panel-title>\n    <mat-panel-description\n      ><mat-icon\n        class=\"fa fa-trash\"\n        [color]=\"binColor\"\n        style=\"margin-left: 95%; cursor: pointer; font-size: 16px\"\n        (mouseover)=\"mouseOverBin()\"\n        (mouseleave)=\"mouseLeaveBin()\"\n        (click)=\"removeOperation()\"\n      ></mat-icon\n    ></mat-panel-description>\n  </mat-expansion-panel-header>\n\n  <mat-card style=\"border-left: 7px solid green; display: flex\" #inputInfoCard>\n    <mat-card-content>\n      <div class=\"d-flex flex-row\" style=\"margin: auto\">\n        <div style=\"width: min-content; margin: auto\">\n          <mat-icon\n            class=\"fas fa-info-circle fa-2x\"\n            style=\"color: green\"\n          ></mat-icon>\n        </div>\n        <div style=\"width: max-content; margin: auto\">\n          <b\n            >&nbsp;&nbsp;&nbsp;Data is taken from\n            {{ inputData ? inputData.operation : \"inputData\" }}</b\n          >\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <br />\n\n  <span\n    >Select Word Frequency :\n    <mat-slider\n      id=\"wordFrequencySlider\"\n      thumbLabel\n      [displayWith]=\"wordFrequencySliderLabel\"\n      min=\"0\"\n      max=\"100\"\n      step=\"1\"\n      value=\"50\"\n      color=\"primary\"\n      [(ngModel)]=\"wordFrequency\"\n    ></mat-slider\n    >&nbsp;&nbsp;<b>{{ wordFrequency }}</b></span\n  ><br />\n  <button\n    id=\"taOperationsWordFrequencySubmitBtn\"\n    mat-raised-button\n    [disabled]=\"!wordFrequency\"\n    (click)=\"onSubmit(wordFrequency)\"\n  >\n    Submit\n  </button>\n\n  <div class=\"form-group row\">\n    <div class=\"text-danger offset-2 mt-2\" *ngIf=\"showTextError\">\n      Select dataset and feature or enter the text to generate the output\n    </div>\n  </div>\n\n  <br />\n  <!-- output section -->\n  <mat-card class=\"mt-3\" *ngIf=\"showOutput\" style=\"background-color: #f5f5f5\">\n    <mat-card-header style=\"border-bottom: 1px solid #3c3c3c\">\n      <mat-card-title>Output</mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"mt-2\" id=\"wordFrequencyPlot\"> </mat-card-content>\n  </mat-card>\n</mat-expansion-panel>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { LocalStorageService } from \"src/app/shared/local-storage.service\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { UtilsService } from \"src/app/shared/utils.service\";\nimport { TaDataStoreService } from \"../../ta-datastore.service\";\nimport { TextAnalysisService } from \"../../text-analysis.service\";\n\nconst Plotly = require(\"plotly.js-dist\");\n\n@Component({\n  selector: \"app-word-frequency\",\n  templateUrl: \"./word-frequency.component.html\",\n  styleUrls: [\"./word-frequency.component.scss\"],\n})\nexport class WordFrequencyComponent implements OnInit {\n  @Input() operation: any;\n\n  @Output() onRemove = new EventEmitter();\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n\n  wordFrequency: Number = 20;\n  showOutput: boolean = false;\n  output: any;\n  showValidationError: boolean = false;\n  showTextError: boolean = false;\n  binColor: string = \"basic\";\n  project: any;\n  user: any;\n  inputData: any;\n\n  constructor(\n    private _toaster: ToastrService,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _taDataStore: TaDataStoreService,\n    private _textAnalysis: TextAnalysisService,\n    public _utils: UtilsService\n  ) {\n    // this._spinner.showSpinner();\n    this.project = this._localStorage.getItem(\"project\");\n    this.user = this._localStorage.getItem(\"user\");\n  }\n\n  ngOnInit(): void {\n    this.inputData = this._taDataStore.getInputData(this.operation);\n    // this._spinner.stopSpinner();\n    this.setData();\n    this._taDataStore.onSubmitEventSubject.subscribe((val) => {\n      this.inputData = this._taDataStore.getInputData(this.operation);\n    });\n  }\n\n  //function to set db data to component\n  setData(): void {\n    let loadData = this._taDataStore.getAllOperationData();\n    loadData.forEach((loadVal) => {\n      if (loadVal.uid == this.operation.uid) {\n        if (loadVal.taskConfig.operationParameters) {\n          this.wordFrequency = loadVal.taskConfig.operationParameters.maxWords;\n        }\n      }\n    });\n  }\n\n  /**\n   * function to pass the value to thumb of the slider.\n   * @param value\n   * @returns\n   */\n  wordFrequencySliderLabel(value: number) {\n    return value;\n  }\n\n  mouseOverBin(): void {\n    this.binColor = \"warn\";\n  }\n\n  mouseLeaveBin(): void {\n    this.binColor = \"basic\";\n  }\n\n  /**\n   * function to remove operation\n   */\n  removeOperation(): void {\n    //Remove the operation data from data store\n    this._taDataStore.removeOperation(this.operation);\n    //Emit the remove event ot parent\n    this.onRemove.emit(this.operation);\n  }\n\n  onSubmit = function (wordFreqSliderVal: Number) {\n    this._spinner.showSpinner();\n    this.showOutput = false;\n    if (wordFreqSliderVal == undefined) {\n      this.showValidationError = true;\n      this._spinner.stopSpinner();\n      return;\n    } else if (wordFreqSliderVal < 10) {\n      this.showValidationError = true;\n      this._spinner.stopSpinner();\n      return;\n    } else {\n      this.showValidationError = false;\n    }\n    let fileDetails = this._taDataStore.getFirstInputData();\n    if (!fileDetails) {\n      this.showTextError = true;\n      this._spinner.stopSpinner();\n      return;\n    } else {\n      this.showTextError = false;\n    }\n    // this.loaderText = \"Please wait, Word Frequency is in progress.\";\n    // this.showLoading = true;\n    // this._spinner.showSpinner();\n    let inputData = this._taDataStore.getInputData(this.operation);\n    let input = inputData?.output;\n    //checking if the input data is empty\n    if (!input) {\n      this.showTextError = true;\n      // vm.showLoading = false;\n      this._spinner.stopSpinner();\n      return;\n    }\n    let fileName = fileDetails.fileName;\n    let feature = fileDetails.featureName;\n    let configData: any = {};\n    if (fileName && feature) {\n      configData.colName = feature;\n      configData.fileName = fileName;\n      configData.maxWords = wordFreqSliderVal;\n      configData.projectId = this.project._id;\n    } else {\n      configData.data = input;\n      configData.maxWords = wordFreqSliderVal;\n    }\n    let wordConfig = [\n      {\n        operationName: \"wordFrequency\",\n        operationParameters: configData,\n      },\n    ];\n    this.showOutput = true;\n    this._textAnalysis\n      .wordFrequency(configData)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          this.output = res.data;\n          let graphDiv: any = document.getElementById(\"wordFrequencyPlot\");\n          while (graphDiv.data && graphDiv.data.length > 0) {\n            Plotly.deleteTraces(graphDiv, [0]);\n          }\n          this.output.layout.template.layout.title.xanchor = \"center\";\n          (this.output.layout.template.layout.title.y = 0.9),\n            (this.output.layout.template.layout.title.x = 0.5),\n            (this.output.layout.template.layout.title.yanchor = \"top\");\n          this.output.layout.autosize = true;\n          //  var config = { responsive: true };\n          Plotly.plot(graphDiv, this.output.data, this.output.layout);\n          // store the data in the temporary service\n          this._taDataStore.saveOperationOutput({\n            uid: this.operation.uid,\n            operation: this.operation.operation,\n            output: this.output,\n            taskConfig: wordConfig,\n          });\n          this._spinner.stopSpinner();\n          // $rootScope.$broadcast(\"onSubmit\");\n          this._taDataStore.broadcastSubmitEvent(\"updateInputBar\");\n        },\n        (err: Error) => {\n          this.showOutput = false;\n          this._spinner.stopSpinner();\n          this._toaster.error(\"Server Error\", \"Error performing word frequency\");\n          // toaster.pop('error', $scope.app.name, 'Error occured at output generation', 3000);\n        }\n      );\n    // TADataStore.saveOperationOutput({ uid: this.operation.uid, operation: 'wordFrequency', output: { dummydata: 'dummy wordFrequency data' } });\n  };\n\n  /**\n   * Unsubscribes the subscriptions after destroy\n   */\n  ngOnDestroy() {\n    this.unsubscribe$.next(false);\n    this.unsubscribe$.unsubscribe();\n  }\n}\n","<!-- <p>word-embedding works!{{ operation | json }}</p> -->\n<mat-expansion-panel [expanded]=\"operation.isPanelExpanded\">\n  <mat-expansion-panel-header>\n    <mat-panel-title style=\"color: black\" [matTooltip]=\"_utils.getTootip('wordEmbedding')\">\n      {{ operation.title }}\n    </mat-panel-title>\n    <mat-panel-description>\n      <mat-icon\n        class=\"fa fa-trash\"\n        [color]=\"binColor\"\n        style=\"margin-left: 95%; cursor: pointer; font-size: 16px\"\n        (mouseover)=\"mouseOverBin()\"\n        (mouseleave)=\"mouseLeaveBin()\"\n        (click)=\"removeOperation()\"\n      ></mat-icon>\n    </mat-panel-description>\n  </mat-expansion-panel-header>\n\n  <mat-card style=\"border-left: 7px solid green; display: flex\" #inputInfoCard>\n    <mat-card-content>\n      <div class=\"d-flex flex-row\" style=\"margin: auto\">\n        <div style=\"width: min-content; margin: auto\">\n          <mat-icon\n            class=\"fas fa-info-circle fa-2x\"\n            style=\"color: green\"\n          ></mat-icon>\n        </div>\n        <div style=\"width: max-content; margin: auto\">\n          <b\n            >&nbsp;&nbsp;&nbsp;Data is taken from\n            {{ inputData ? inputData.operation : \"inputData\" }}</b\n          >\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <br />\n  <!-- model section -->\n  <mat-form-field appearance=\"fill\">\n    <mat-label\n      [innerText]=\"wordEmbeddingModelControl.value ? 'Model' : 'Select a model'\"\n    ></mat-label>\n    <mat-select\n      [formControl]=\"wordEmbeddingModelControl\"\n      (selectionChange)=\"onModelChange(wordEmbeddingModelControl.value)\"\n    >\n      <mat-option *ngFor=\"let model of modelsList\" [value]=\"model.modelKey\">\n        {{ model.modelName }}\n      </mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"\n        wordEmbeddingModelControl.touched &&\n        wordEmbeddingModelControl.hasError('required')\n      \"\n      >Model is required.</mat-error\n    >\n  </mat-form-field>\n  <!-- slider section -->\n  <span *ngIf=\"wordEmbeddingModelControl.value\"\n    >Word vectors :\n    <mat-slider\n      id=\"informationRetainedSlider\"\n      thumbLabel\n      [displayWith]=\"wordVectorSliderLabel\"\n      min=\"0\"\n      max=\"500\"\n      step=\"1\"\n      value=\"100\"\n      color=\"primary\"\n      [(ngModel)]=\"wordVectorSliderVal\"\n    ></mat-slider\n    >&nbsp;&nbsp;<b>{{ wordVectorSliderVal }}</b> </span\n  ><br />\n  <span *ngIf=\"wordEmbeddingModelControl.value == 'Glove'\"\n    >Learning Rate :\n    <mat-slider\n      id=\"learningRate\"\n      thumbLabel\n      min=\"0.01\"\n      [displayWith]=\"wordVectorSliderLabel\"\n      max=\"0.1\"\n      step=\"0.01\"\n      value=\"0.05\"\n      color=\"primary\"\n      [(ngModel)]=\"learningRate\"\n    ></mat-slider\n    >&nbsp;&nbsp;<b>{{ learningRate }}</b> </span\n  ><br />\n  <!-- training algo section  -->\n  <mat-form-field\n    appearance=\"fill\"\n    *ngIf=\"\n      wordEmbeddingModelControl.value &&\n      wordEmbeddingModelControl.value != 'Glove'\n    \"\n  >\n    <mat-label\n      [innerText]=\"\n        wordEmbeddingTrainingAlgoControl.value\n          ? 'Training Algorithm'\n          : 'Select a training algorithm'\n      \"\n    ></mat-label>\n    <mat-select [formControl]=\"wordEmbeddingTrainingAlgoControl\">\n      <mat-option\n        *ngFor=\"let algo of trainingAlgorithmList\"\n        [value]=\"algo.value\"\n      >\n        {{ algo.algorithmName }}\n      </mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"\n        wordEmbeddingTrainingAlgoControl.touched &&\n        wordEmbeddingTrainingAlgoControl.hasError('required')\n      \"\n      >Training algorithm is required.</mat-error\n    >\n  </mat-form-field>\n  <!-- methods section  -->\n  <mat-form-field appearance=\"fill\" *ngIf=\"wordEmbeddingModelControl.value\">\n    <mat-label\n      [innerText]=\"\n        wordEmbeddingFunctionsControl.value ? 'Method' : 'Select a method'\n      \"\n    ></mat-label>\n    <mat-select [formControl]=\"wordEmbeddingFunctionsControl\">\n      <mat-option *ngFor=\"let method of functions\" [value]=\"method.value\">\n        {{ method.functionName }}\n      </mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"\n        wordEmbeddingFunctionsControl.touched &&\n        wordEmbeddingFunctionsControl.hasError('required')\n      \"\n      >Method is required.</mat-error\n    >\n  </mat-form-field>\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <mat-form-field\n        *ngIf=\"\n          wordEmbeddingModelControl.value && wordEmbeddingFunctionsControl.value\n        \"\n      >\n        <mat-label>Input 1</mat-label>\n        <input\n          type=\"text\"\n          matInput\n          [formControl]=\"input1FormControl\"\n          placeholder=\"write a word\"\n        />\n        <mat-error *ngIf=\"input1FormControl.hasError('required')\">\n          Input is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n    <div class=\"col-md-6\">\n      <mat-form-field\n        *ngIf=\"\n          wordEmbeddingModelControl.value &&\n          wordEmbeddingFunctionsControl.value === 'similarityscore'\n        \"\n      >\n        <mat-label>Input 2</mat-label>\n        <input\n          type=\"text\"\n          matInput\n          [formControl]=\"input2FormControl\"\n          placeholder=\"write a word\"\n        />\n        <mat-error *ngIf=\"input2FormControl.hasError('required')\">\n          Input is <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </div>\n  <br />\n  <span>\n    <button\n      id=\"taOperationsWordEmbeddingSubmitBtn\"\n      mat-raised-button\n      [disabled]=\"\n        wordEmbeddingModelControl.hasError('required') &&\n        wordEmbeddingTrainingAlgoControl.hasError('required') &&\n        wordEmbeddingFunctionsControl.hasError('required')\n      \"\n      (click)=\"\n        onSubmit(\n          wordEmbeddingModelControl,\n          wordVectorSliderVal,\n          wordEmbeddingTrainingAlgoControl,\n          wordEmbeddingFunctionsControl,\n          input1FormControl,\n          input2FormControl\n        )\n      \"\n    >\n      Submit</button\n    >&nbsp;&nbsp;<span class=\"linkText\" (click)=\"showPipelineSetting()\"\n      >Settings</span\n    >\n  </span>\n\n  <div class=\"form-group row\">\n    <div class=\"text-danger offset-2 mt-2\" *ngIf=\"showTextError\">\n      Select dataset and feature or enter the text to generate the output\n    </div>\n  </div>\n\n  <br />\n  <!-- output section -->\n  <mat-card\n    class=\"mt-3\"\n    style=\"background-color: #f5f5f5\"\n    *ngIf=\"showTableOutput || showTextOutput\"\n  >\n    <mat-card-header>\n      <mat-card-title>Output</mat-card-title>\n    </mat-card-header>\n\n    <!-- text output section  -->\n    <mat-card-content\n      class=\"mt-2\"\n      *ngIf=\"!showTableOutput && showTextOutput\"\n      style=\"\n        border-top: 1px solid #3c3c3c;\n        margin-top: -10px;\n        padding-top: 10px;\n      \"\n    >\n      <p>{{ output }}</p>\n    </mat-card-content>\n\n    <!-- table output section  -->\n    <mat-card-content class=\"mt-2\" *ngIf=\"!showTextOutput && showTableOutput\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Word Column -->\n        <ng-container matColumnDef=\"word\">\n          <th mat-header-cell *matHeaderCellDef>Word</th>\n          <td mat-cell *matCellDef=\"let item\">{{ item.word }}</td>\n        </ng-container>\n\n        <!-- Score Column -->\n        <ng-container matColumnDef=\"score\">\n          <th mat-header-cell *matHeaderCellDef>{{ tableHeading }}</th>\n          <td mat-cell *matCellDef=\"let item\">\n            {{ item.score || item.probability | number: \"1.0-2\" }}\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <!-- <p>{{ output }}</p> -->\n    </mat-card-content>\n  </mat-card>\n</mat-expansion-panel>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { timeStamp } from \"console\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { LocalStorageService } from \"src/app/shared/local-storage.service\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { UtilsService } from \"src/app/shared/utils.service\";\nimport { PipelineSettingsDialogComponent } from \"../../pipeline-settings-dialog/pipeline-settings-dialog.component\";\nimport { TaDataStoreService } from \"../../ta-datastore.service\";\nimport { TextAnalysisService } from \"../../text-analysis.service\";\n\n@Component({\n  selector: \"app-word-embedding\",\n  templateUrl: \"./word-embedding.component.html\",\n  styleUrls: [\"./word-embedding.component.scss\"],\n})\nexport class WordEmbeddingComponent implements OnInit {\n  @Input() operation: any;\n\n  @Output() onRemove = new EventEmitter();\n\n  /**\n   * models array\n   */\n  modelsList = [\n    {\n      modelName: \"Word2Vec\",\n      modelKey: \"word2vec\",\n    },\n    {\n      modelName: \"Glove\",\n      modelKey: \"Glove\",\n    },\n  ];\n\n  /**\n   * algorithms array\n   */\n  trainingAlgorithmList = [\n    {\n      algorithmName: \"CBOW\",\n      value: \"0\",\n    },\n    {\n      algorithmName: \"skip-gram\",\n      value: \"1\",\n    },\n  ];\n\n  /**\n   * functionality array\n   */\n  functionsList = [\n    {\n      functionName: \"Similarity Score\",\n      value: \"similarityscore\",\n    },\n    {\n      functionName: \"Most Similar Word\",\n      value: \"mostsimilarword\",\n    },\n    {\n      functionName: \"Output Word\",\n      value: \"outputword\",\n    },\n  ];\n\n  binColor: string = \"basic\";\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n\n  dataSource: MatTableDataSource<[]> = new MatTableDataSource();\n  displayedColumns: Array<string> = [];\n\n  showTextError: Boolean = false;\n\n  wordVectorSliderVal: Number = 100;\n  learningRate: any = 0.05;\n  wordEmbedding: any = {\n    input: null,\n  };\n\n  showTableOutput: Boolean = false;\n\n  showTextOutput: Boolean = false;\n\n  output: any;\n  project: any;\n  user: any;\n  inputData: any;\n  tableHeading: string = \"Score\";\n\n  wordEmbeddingModelControl = new FormControl(\"\", Validators.required);\n  wordEmbeddingTrainingAlgoControl = new FormControl(\"\", Validators.required);\n  wordEmbeddingFunctionsControl = new FormControl(\"\", Validators.required);\n  input1FormControl = new FormControl(\"\", Validators.required);\n  input2FormControl = new FormControl(\"\", Validators.required);\n\n  wordEmbeddingPipelineSettingsList: any = [\n    {\n      pipeSettingName: \"Create vectors as new feature(s)\",\n      pipeSettingTag: \"vector\",\n    },\n  ];\n\n  wordEmbeddingPipelineSettingValue: any;\n  functions: { functionName: string; value: string }[];\n\n  constructor(\n    private _dialog: MatDialog,\n    private _toaster: ToastrService,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _taDataStore: TaDataStoreService,\n    private _textAnalysis: TextAnalysisService,\n    public _utils: UtilsService\n  ) {\n    // this._spinner.showSpinner();\n    this.project = this._localStorage.getItem(\"project\");\n    this.user = this._localStorage.getItem(\"user\");\n    this.displayedColumns = [\"word\", \"score\"];\n    // reset the form controls whenever the training algorithm is changed.\n    this.wordEmbeddingTrainingAlgoControl.valueChanges.subscribe((algo) => {\n      this.resetControls();\n    });\n    // reset the input form control whenever a diff method is selected.\n    this.wordEmbeddingFunctionsControl.valueChanges.subscribe(\n      (selectedMethod) => {\n        selectedMethod != \"similarityscore\" && this.input2FormControl.reset();\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.inputData = this._taDataStore.getInputData(this.operation);\n    // this._spinner.stopSpinner();\n    this.setData();\n    this._taDataStore.onSubmitEventSubject.subscribe((val) => {\n      this.inputData = this._taDataStore.getInputData(this.operation);\n    });\n  }\n\n  //function to set db data to component\n  setData(): void {\n    let loadData = this._taDataStore.getAllOperationData();\n    loadData.forEach((loadVal) => {\n      if (loadVal.uid == this.operation.uid) {\n        if (loadVal.taskConfig.operationParameters) {\n          if (loadVal.taskConfig.operationParameters.addFeature.length) {\n            this.wordEmbeddingPipelineSettingValue =\n              loadVal.taskConfig.operationParameters.addFeature;\n          }\n          this.wordEmbeddingModelControl.setValue(\n            loadVal.taskConfig.operationParameters.model\n          );\n          this.wordVectorSliderVal =\n            loadVal.taskConfig.operationParameters.wordVector || 100;\n          if (\n            loadVal.taskConfig.operationParameters.hasOwnProperty(\n              \"learningRate\"\n            )\n          ) {\n            this.learningRate =\n              loadVal.taskConfig.operationParameters.learningRate;\n          }\n          if (loadVal.taskConfig.operationParameters.trainingAlgorithm) {\n\n            let item = this.trainingAlgorithmList.filter((algorithm) => {\n              if (\n                loadVal.taskConfig.operationParameters.trainingAlgorithm ==\n                algorithm.value\n              ) {\n                return algorithm;\n              }\n            });\n            this.wordEmbeddingTrainingAlgoControl.setValue(item[0].value);\n          }\n          if (loadVal.taskConfig.operationParameters.method === 'Glove') {\n            this.functions = this.functionsList.filter((item) => {\n              return item.value === 'mostsimilarword';\n            });\n          } else {\n            this.functions = this.functionsList;\n          }\n          this.wordEmbeddingFunctionsControl.setValue(\n            loadVal.taskConfig.operationParameters.method\n          );\n          if (\n            loadVal.taskConfig.operationParameters.input &&\n            typeof loadVal.taskConfig.operationParameters.input === 'object'\n          ) {\n            this.input1FormControl.setValue(\n              loadVal.taskConfig.operationParameters.input[0]\n            );\n            this.input2FormControl.setValue(\n              loadVal.taskConfig.operationParameters.input[1]\n            );\n          } else {\n            this.input1FormControl.setValue(\n              loadVal.taskConfig.operationParameters.input\n            );\n          }\n        }\n      }\n    });\n  }\n\n  onModelChange(method) {\n    if (method === 'Glove') {\n      this.functions = this.functionsList.filter((item) => {\n        return item.value === 'mostsimilarword';\n      });\n    } else {\n      this.functions = this.functionsList;\n    }\n  }\n\n  // function to reset the input form controls\n  resetControls(): void {\n    this.wordEmbeddingFunctionsControl.reset();\n    this.input1FormControl.reset();\n    this.input2FormControl.reset();\n  }\n\n  /**\n   * function to pass the value to thumb of the slider.\n   * @param value\n   * @returns\n   */\n  wordVectorSliderLabel(value: Number) {\n    return value;\n  }\n\n  mouseOverBin(): void {\n    this.binColor = \"warn\";\n  }\n\n  mouseLeaveBin(): void {\n    this.binColor = \"basic\";\n  }\n\n  /**\n   * function to remove operation\n   */\n  removeOperation(): void {\n    //Remove the operation data from data store\n    this._taDataStore.removeOperation(this.operation);\n    //Emit the remove event ot parent\n    this.onRemove.emit(this.operation);\n  }\n\n  //function to open the pipeline settings dialog\n  showPipelineSetting(): void {\n    /**\n     * Opens the dialog with form\n     */\n    let pipelineSettingsDialog = this._dialog.open(\n      PipelineSettingsDialogComponent,\n      {\n        minWidth: \"50vw\",\n        data: {\n          list: this.wordEmbeddingPipelineSettingsList,\n          selectedVal: this.wordEmbeddingPipelineSettingValue,\n        },\n      }\n    );\n\n    pipelineSettingsDialog.afterClosed().subscribe((data) => {\n      if (data && this.output !== undefined) {\n        this.wordEmbeddingPipelineSettingValue = data.featureArray;\n        let inputData = this._taDataStore.getSavedOperationOutput(this.operation.uid,);\n        inputData.taskConfig[0].operationParameters.addFeature = this.wordEmbeddingPipelineSettingValue;\n        this._taDataStore.saveOperationOutput({\n          uid: this.operation.uid,\n          operation: this.operation.operation,\n          output: this.output,\n          taskConfig: inputData.taskConfig,\n        });\n      } else if (data) {\n        this.wordEmbeddingPipelineSettingValue = data.featureArray;\n      }\n    });\n  }\n\n  onSubmit = (\n    modelData: FormControl,\n    sliderVal: Number,\n    trainingData: FormControl,\n    methodData: FormControl,\n    input1: FormControl,\n    input2: FormControl\n  ) => {\n    this.showTableOutput = false;\n    this.showTextOutput = false;\n    // vm.loaderText = \"Please Wait, doing word embedding\";\n    // vm.showLoading = true;\n    this._spinner.showSpinner();\n    this.showTextError = false;\n    let inputData = this._taDataStore.getInputData(this.operation);\n    inputData = inputData?.output;\n    //checking if the input data is empty\n    if (!inputData) {\n      this.showTextError = true;\n      // vm.showLoading = false;\n      this._spinner.stopSpinner();\n      return;\n    }\n\n    if (input1.value && input2.value) {\n      this.wordEmbedding.input = [input1.value, input2.value];\n    } else if (input1.value) {\n      this.wordEmbedding.input = input1.value;\n    } else {\n      this.wordEmbedding.input = input2.value;\n    }\n\n    //preparing request object for wordEmbedding api\n    let wordEmbeddingParam = {\n      data: inputData,\n      taskConfig: [\n        {\n          operationName: \"wordEmbedding\",\n          operationParameters: {\n            model: modelData.value,\n            wordVector: sliderVal || 100,\n            trainingAlgorithm: parseInt(trainingData.value) || 0,\n            method: methodData.value,\n            input: this.wordEmbedding.input || null,\n            addFeature: this.wordEmbeddingPipelineSettingValue || [],\n            learningRate: this.learningRate,\n          },\n        },\n      ],\n    };\n    if (modelData.value == \"Glove\") {\n      delete wordEmbeddingParam.taskConfig[0].operationParameters[\n        \"trainingAlgorithm\"\n      ];\n    } else {\n      delete wordEmbeddingParam.taskConfig[0].operationParameters[\n        \"learningRate\"\n      ];\n    }\n    this._textAnalysis\n      .wordEmbedding(wordEmbeddingParam)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          if (\n            typeof res.data.data === \"string\" &&\n            res.data.data === \"word is not in vocab\"\n          ) {\n            this.showTableOutput = false;\n            this.showTextOutput = true;\n            this.output = \"word is not in vocab\";\n          } else {\n            if (\n              wordEmbeddingParam.taskConfig[0].operationParameters.method ==\n              \"similarityscore\"\n            ) {\n              this.showTextOutput = true;\n              this.output =\n                \"The Similarity Score is \" + res.data.data.toFixed(2);\n            } else {\n              this.showTableOutput = true;\n              this.output = res.data.data;\n              if (this.output[0]?.score) {\n                this.tableHeading = \"Score\";\n              } else {\n                this.tableHeading = \"Probability\";\n              }\n              this.dataSource.data = res.data.data;\n              this.dataSource._updateChangeSubscription();\n            }\n          }\n          //save result back to the service\n          this._taDataStore.saveOperationOutput({\n            uid: this.operation.uid,\n            operation: \"wordEmbedding\",\n            output: this.output,\n            taskConfig: wordEmbeddingParam.taskConfig,\n          });\n          // vm.showLoading = false;\n          // $rootScope.$broadcast(\"onSubmit\");\n          this._spinner.stopSpinner();\n          this._taDataStore.broadcastSubmitEvent(\"updateInputBar\");\n        },\n        (err: Error) => {\n          this.showTableOutput = false;\n          this.showTextOutput = false;\n          // toaster.pop('error', $scope.app.name, 'Error Summarizing text', 3000);\n          // vm.showLoading = false;\n          this._spinner.stopSpinner();\n          this._toaster.error(\"Server Error\", \"Error performing word embedding\");\n        }\n      );\n    this._spinner.stopSpinner();\n  };\n\n  /**\n   * Unsubscribes the subscriptions after destroy\n   */\n  ngOnDestroy() {\n    this.unsubscribe$.next(false);\n    this.unsubscribe$.unsubscribe();\n  }\n}\n","<!-- <p>text-cleaning works!{{ operation }}</p> -->\n<mat-expansion-panel [expanded]=\"operation.isPanelExpanded\">\n  <mat-expansion-panel-header>\n    <mat-panel-title\n      style=\"color: black\"\n      [matTooltip]=\"_utils.getTootip('textCleaning')\"\n    >\n      {{ operation.title }}\n    </mat-panel-title>\n    <mat-panel-description\n      ><mat-icon\n        class=\"fa fa-trash\"\n        [color]=\"binColor\"\n        style=\"margin-left: 95%; cursor: pointer; font-size: 16px\"\n        (mouseover)=\"mouseOverBin()\"\n        (mouseleave)=\"mouseLeaveBin()\"\n        (click)=\"removeOperation()\"\n      ></mat-icon\n    ></mat-panel-description>\n  </mat-expansion-panel-header>\n\n  <mat-card style=\"border-left: 7px solid green; display: flex\" #inputInfoCard>\n    <mat-card-content>\n      <div class=\"d-flex flex-row\" style=\"margin: auto\">\n        <div style=\"width: min-content; margin: auto\">\n          <mat-icon\n            class=\"fas fa-info-circle fa-2x\"\n            style=\"color: green\"\n          ></mat-icon>\n        </div>\n        <div style=\"width: max-content; margin: auto\">\n          <b\n            >&nbsp;&nbsp;&nbsp;Data is taken from\n            {{ inputData ? inputData.operation : \"inputData\" }}</b\n          >\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <br />\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label\n      [innerText]=\"\n        testCleaningControl.value ? 'Cleaning Methods' : 'Choose methods'\n      \"\n    ></mat-label>\n    <mat-select [formControl]=\"testCleaningControl\" required multiple>\n      <mat-option\n        *ngFor=\"let method of cleaningOperations; let i = index\"\n        [value]=\"method.operationKey\"\n      >\n        {{ method.operationName }}\n      </mat-option>\n    </mat-select>\n    <mat-error\n      *ngIf=\"\n        testCleaningControl.touched && testCleaningControl.hasError('required')\n      \"\n      >Atleast one cleaning method is required.</mat-error\n    >\n  </mat-form-field>\n  <span *ngIf=\"showRemoveWordsSlider\"\n    >Select threshold :\n    <mat-slider\n      id=\"removeWordsSlider\"\n      thumbLabel\n      [displayWith]=\"removeWordsSliderLabel\"\n      min=\"0\"\n      max=\"5\"\n      step=\"1\"\n      value=\"1\"\n      color=\"primary\"\n      [(ngModel)]=\"countOfWordsToRemove\"\n    ></mat-slider\n    >&nbsp;&nbsp;<b>{{ countOfWordsToRemove }}</b></span\n  ><br />\n  <button\n    id=\"taOperationsTextCleaningSubmitBtn\"\n    mat-raised-button\n    [disabled]=\"testCleaningControl.hasError('required')\"\n    (click)=\"onSubmit(testCleaningControl, countOfWordsToRemove)\"\n  >\n    Submit\n  </button>\n\n  <div class=\"form-group row\">\n    <div class=\"text-danger offset-2 mt-2\" *ngIf=\"showTextError\">\n      Select dataset and feature or enter the text to generate the output\n    </div>\n  </div>\n\n  <br />\n  <!-- output section -->\n  <mat-card class=\"mt-3\" *ngIf=\"showOutput\" style=\"background-color: #f5f5f5\">\n    <mat-card-header style=\"border-bottom: 1px solid #3c3c3c\">\n      <mat-card-title-group>\n        <mat-card-title>Output</mat-card-title>\n      </mat-card-title-group>\n      <div style=\"margin-left: 85%\">\n        <mat-icon\n          class=\"far fa-copy\"\n          [color]=\"copyColor\"\n          (mouseover)=\"mouseOverCopy()\"\n          (mouseleave)=\"mouseLeaveCopy()\"\n          (click)=\"copyOutput()\"\n          #tooltip=\"matTooltip\"\n          [matTooltip]=\"tooltipText\"\n          matTooltipPosition=\"above\"\n          style=\"cursor: pointer; font-size: 16px\"\n        ></mat-icon>\n      </div>\n    </mat-card-header>\n    <mat-card-content class=\"mt-2\">\n      <p id=\"cleaningOutput\">{{ output }}</p>\n    </mat-card-content>\n  </mat-card>\n</mat-expansion-panel>\n","import { FormControl, Validators } from \"@angular/forms\";\nimport { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { TaDataStoreService } from \"../../ta-datastore.service\";\nimport { TextAnalysisService } from \"../../text-analysis.service\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\nimport { SpinnerService } from \"src/app/shared/spinner.service\";\nimport { number } from \"ngx-custom-validators/src/app/number/validator\";\nimport { UtilsService } from \"src/app/shared/utils.service\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-text-cleaning\",\n  templateUrl: \"./text-cleaning.component.html\",\n  styleUrls: [\"./text-cleaning.component.scss\"],\n})\nexport class TextCleaningComponent implements OnInit {\n  @Input() operation: any;\n\n  @Output() onRemove = new EventEmitter();\n\n  /**\n   * cleaning operations array\n   */\n  cleaningOperations = [\n    {\n      operationName: \"Remove Numbers\",\n      operationKey: \"removeNum\",\n    },\n    {\n      operationName: \"Remove hyperlinks\",\n      operationKey: \"removeHyper\",\n    },\n    {\n      operationName: \"Remove emoticons/emojis\",\n      operationKey: \"removeEmoticon\",\n    },\n    {\n      operationName: \"Remove words\",\n      operationKey: \"shortWord\",\n    },\n    {\n      operationName: \"Expand contractions\",\n      operationKey: \"expandCont\",\n    },\n    {\n      operationName: \"Remove punctuations\",\n      operationKey: \"removePunct\",\n    },\n    {\n      operationName: \"Stemming\",\n      operationKey: \"stemming\",\n    },\n    {\n      operationName: \"Lemmatization\",\n      operationKey: \"lemmatization\",\n    },\n    {\n      operationName:\n        \"Option To Delete Rows If Empty Ones Are Created After Cleaning\",\n      operationKey: \"optionToDeleteRow\",\n    },\n  ];\n\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n\n  testCleaningControl = new FormControl(\"\", Validators.required);\n\n  showRemoveWordsSlider: Boolean = false;\n\n  showTextError: Boolean = false;\n\n  showOutput: Boolean = false;\n\n  binColor: string = \"basic\";\n\n  copyColor: string = \"basic\";\n\n  tooltipText: string = \"Click to copy!\";\n\n  inputData: any;\n\n  output: any;\n\n  cleaningOperationsDbData: Array<any> = [];\n\n  showValidationError: Boolean = false;\n\n  countOfWordsToRemove: number = 1;\n\n  constructor(\n    private _taDataStore: TaDataStoreService,\n    private _toaster: ToastrService,\n    private _textAnalysis: TextAnalysisService,\n    private _spinner: SpinnerService,\n    public _utils: UtilsService\n  ) {\n    /**\n     * setting slider to true when the remove words method is selected.\n     */\n    this.testCleaningControl.valueChanges.subscribe((selectedValue) => {\n      if (this.testCleaningControl.value.includes(\"shortWord\")) {\n        this.showRemoveWordsSlider = true;\n      } else {\n        this.showRemoveWordsSlider = false;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.inputData = this._taDataStore.getInputData(this.operation);\n    this.setData();\n    this._taDataStore.onSubmitEventSubject.subscribe((val) => {\n      this.inputData = this._taDataStore.getInputData(this.operation);\n    });\n  }\n\n  //function to set db data to component\n  setData(): void {\n    let loadData = this._taDataStore.getAllOperationData();\n    loadData.forEach((loadVal) => {\n      if (loadVal.uid == this.operation.uid) {\n        if (loadVal.taskConfig.operationParameters) {\n          loadVal.taskConfig.operationParameters.forEach((param) => {\n            if (param.operationKey == \"shortWord\") {\n              this.showRemoveWordsSlider = true;\n              this.countOfWordsToRemove = param.threshold;\n            }\n            this.cleaningOperationsDbData.push(param.operationKey);\n          });\n          this.testCleaningControl.setValue(this.cleaningOperationsDbData);\n        }\n      }\n    });\n  }\n\n  /**\n   * function to pass the value to thumb of the slider.\n   * @param value\n   * @returns\n   */\n  removeWordsSliderLabel(value: number) {\n    return value;\n  }\n\n  mouseOverBin(): void {\n    this.binColor = \"warn\";\n  }\n\n  mouseLeaveBin(): void {\n    this.binColor = \"basic\";\n  }\n\n  /**\n   * function to remove operation\n   */\n  removeOperation(): void {\n    //Remove the operation data from data store\n    this._taDataStore.removeOperation(this.operation);\n    //Emit the remove event ot parent\n    this.onRemove.emit(this.operation);\n  }\n\n  mouseOverCopy(): void {\n    this.copyColor = \"primary\";\n  }\n\n  mouseLeaveCopy(): void {\n    this.copyColor = \"basic\";\n  }\n\n  //function to copy summarization output\n  copyOutput = function () {\n    let textToCopyElement = document.getElementById(\"cleaningOutput\").innerText;\n    let dummyElem = document.createElement(\"textarea\");\n    document.body.appendChild(dummyElem);\n    dummyElem.value = textToCopyElement;\n    dummyElem.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummyElem);\n    this.tooltipText = \"Copied!\";\n  };\n\n  onSubmit(data: FormControl, removeWordsCount: number): void {\n    this._spinner.showSpinner();\n    this.showOutput = false;\n    if (removeWordsCount == undefined) {\n      this.showValidationError = true;\n      this._spinner.stopSpinner();\n      return;\n    } else if (removeWordsCount < 1) {\n      this.showValidationError = true;\n      this._spinner.stopSpinner();\n      return;\n    } else {\n      this.showValidationError = false;\n    }\n    // function to map the selected operations\n    let cleanArray = this.cleaningOperations.filter(function (item) {\n      return data.value.some(function (doc) {\n        return item.operationKey === doc;\n      });\n    });\n    // function to add threshold if operation is short word\n    let cleanOperation = cleanArray.map(function (e: any) {\n      if (e.operationName == \"Remove words\") {\n        // var o = Object.assign({}, e)\n        e.threshold = Number(removeWordsCount);\n        return e;\n      } else {\n        return e;\n      }\n    });\n    let inputData = this._taDataStore.getInputData(this.operation);\n    inputData = inputData?.output;\n    // condition to check if textbox is empty\n    if (!inputData) {\n      this.showTextError = true;\n      this._spinner.stopSpinner();\n      return;\n    } else {\n      this.showTextError = false;\n    }\n    // this.popoverContent = \"Click to Copy\";\n    // this.loaderText = \"Please wait, Text cleaning is in progress.\";\n    // this.showLoading = true;\n    var taskConfig = [\n      {\n        operationName: \"textCleaning\",\n        operationParameters: cleanOperation,\n      },\n    ];\n\n    // api call for output\n    this._textAnalysis.textCleaning(inputData, taskConfig).subscribe(\n      (res: any) => {\n        this.showOutput = true;\n        this.output = res.data.data;\n        // store the data in the temporary service\n        this._taDataStore.saveOperationOutput({\n          uid: this.operation.uid,\n          operation: this.operation.operation,\n          output: this.output,\n          taskConfig: taskConfig,\n        });\n        this._spinner.stopSpinner();\n        // $rootScope.$broadcast(\"onSubmit\");\n        this._taDataStore.broadcastSubmitEvent(\"updateInputBar\");\n      },\n      (err: Error) => {\n        this.showOutput = false;\n        this._spinner.stopSpinner();\n        this._toaster.error(\"Server Error\", \"Error performing text cleaning\");\n      }\n    );\n  }\n\n  // /**\n  //  * Unsubscribes the subscriptions after destroy\n  //  */\n  // ngOnDestroy() {\n  //   this.unsubscribe$.next(false);\n  //   this.unsubscribe$.unsubscribe();\n  // }\n}\n","<!-- <p>rule-based-matching works!{{ operation | json }}</p> -->\n\n<mat-expansion-panel [expanded]=\"operation.isPanelExpanded\">\n  <mat-expansion-panel-header>\n    <mat-panel-title style=\"color: black\" [matTooltip]=\"_utils.getTootip('ruleBasedMatching')\">\n      <!-- _utils.getTootip('rbm') -->\n      {{ operation.title }}\n    </mat-panel-title>\n    <mat-panel-description\n      ><mat-icon\n        class=\"fa fa-trash\"\n        [color]=\"binColor\"\n        style=\"margin-left: 95%; cursor: pointer; font-size: 16px\"\n        (mouseover)=\"mouseOverBin(null)\"\n        (mouseleave)=\"mouseLeaveBin(null)\"\n        (click)=\"removeOperation()\"\n      ></mat-icon\n    ></mat-panel-description>\n  </mat-expansion-panel-header>\n\n  <mat-card style=\"border-left: 7px solid green; display: flex\" #inputInfoCard>\n    <mat-card-content>\n      <div class=\"d-flex flex-row\" style=\"margin: auto\">\n        <div style=\"width: min-content; margin: auto\">\n          <mat-icon\n            class=\"fas fa-info-circle fa-2x\"\n            style=\"color: green\"\n          ></mat-icon>\n        </div>\n        <div style=\"width: max-content; margin: auto\">\n          <b\n            >&nbsp;&nbsp;&nbsp;Data is taken from\n            {{ inputData ? inputData.operation : \"inputData\" }}</b\n          >\n        </div>\n      </div>\n    </mat-card-content>\n  </mat-card>\n  <br />\n\n  <form [formGroup]=\"rbmControl\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label\n        [innerText]=\"\n          rbmControl.get('rbmModel').value ? 'Model' : 'Select a model'\n        \"\n      ></mat-label>\n      <mat-select formControlName=\"rbmModel\">\n        <mat-option value=\"spacy-en_core_web_sm\"\n          >spacy-en_core_web_sm</mat-option\n        >\n        <mat-option *ngFor=\"let model of modelsList\" [value]=\"model\">\n          {{ model.modelName }}\n        </mat-option>\n      </mat-select>\n      <mat-error\n        *ngIf=\"\n          rbmControl.get('rbmModel').touched &&\n          rbmControl.get('rbmModel').hasError('required')\n        \"\n        >Model is required.</mat-error\n      >\n    </mat-form-field>\n    <div formArrayName=\"patternsArray\">\n      <mat-card\n        class=\"mt-2\"\n        *ngFor=\"let pattern of patternList.controls; let i = index\"\n        [formGroupName]=\"i\"\n        style=\"background-color: #fefefe\"\n      >\n        <mat-card-header style=\"border-bottom: 1px solid #3c3c3c\">\n          <mat-card-title-group>\n            <mat-card-title>Pattern</mat-card-title>\n          </mat-card-title-group>\n          <div style=\"margin-left: 85%\">\n            <mat-icon\n              class=\"fa fa-trash\"\n              [color]=\"patternBinColor\"\n              style=\"cursor: pointer; font-size: 16px\"\n              (mouseover)=\"patternBinColor = 'warn'\"\n              (mouseleave)=\"patternBinColor = 'basic'\"\n              (click)=\"deletePattern(i)\"\n            ></mat-icon>\n          </div>\n        </mat-card-header>\n        <mat-card-content class=\"mt-2 p-3\">\n          <mat-form-field>\n            <mat-label>Pattern Name</mat-label>\n            <input\n              matInput\n              formControlName=\"name\"\n              placeholder=\"Add a name to pattern\"\n            />\n          </mat-form-field>\n          <div formArrayName=\"phrases\">\n            <div\n              *ngFor=\"\n                let phraseVal of pattern.get('phrases').controls;\n                let phraseNumber = index\n              \"\n              [formGroupName]=\"phraseNumber\"\n            >\n              <mat-form-field class=\"col-md-9\">\n                <mat-label>Phrase</mat-label>\n\n                <input\n                  matInput\n                  formControlName=\"phrase\"\n                  placeholder=\"Enter the phrase to add\"\n                />\n              </mat-form-field>\n              <button\n                mat-icon-button\n                (click)=\"deletePhrase(pattern, phraseNumber)\"\n              >\n                <mat-icon>close</mat-icon>\n              </button>\n            </div>\n          </div>\n          <br />\n          <span>\n            <button\n              mat-raised-button\n              style=\"\n                border-radius: 5px;\n                background-color: #08509d;\n                color: white;\n                font-size: 20px;\n              \"\n              (click)=\"addPhrase(pattern)\"\n            >\n              <i class=\"fas fa-plus fa-1x my-float\"></i>\n            </button>\n            Add Phrase\n          </span>\n          <br />\n          <div formArrayName=\"tokens\">\n            <div\n              *ngFor=\"\n                let tokenVal of pattern.get('tokens').controls;\n                let tokenNumber = index\n              \"\n              [formGroupName]=\"tokenNumber\"\n            >\n              <br />\n              <mat-expansion-panel [expanded]=\"true\">\n                <mat-expansion-panel-header>\n                  <mat-panel-title style=\"color: black\">\n                    <b>Token</b>\n                  </mat-panel-title>\n                  <mat-panel-description\n                    ><mat-icon\n                      class=\"fa fa-trash\"\n                      [color]=\"tokenBinColor\"\n                      style=\"margin-left: 95%; cursor: pointer; font-size: 16px\"\n                      (mouseover)=\"tokenBinColor = 'warn'\"\n                      (mouseleave)=\"tokenBinColor = 'basic'\"\n                      (click)=\"deleteToken(pattern, tokenNumber)\"\n                    ></mat-icon>\n                  </mat-panel-description>\n                </mat-expansion-panel-header>\n\n                <!-- attribute section  -->\n                <mat-form-field appearance=\"fill\" class=\"col-md-3\">\n                  <mat-label\n                    [innerText]=\"\n                      tokenVal.get('attributeLabel').value\n                        ? 'Attributes'\n                        : 'Select Attribute'\n                    \"\n                  ></mat-label>\n                  <mat-select formControlName=\"attributeLabel\">\n                    <mat-option\n                      *ngFor=\"let attribute of attributesList\"\n                      [value]=\"attribute\"\n                    >\n                      {{ attribute.attributeName }}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n\n                <mat-form-field\n                  class=\"col-md-3\"\n                  *ngIf=\"\n                    tokenVal.get('attributeLabel').value.attributeType !=\n                      'dropdown' &&\n                    tokenVal.get('attributeLabel').value.attributeType ==\n                      'textbox'\n                  \"\n                >\n                  <mat-label>Text</mat-label>\n                  <input\n                    matInput\n                    formControlName=\"attributeValue\"\n                    placeholder=\"Enter some text\"\n                  />\n                </mat-form-field>\n\n                <mat-checkbox\n                  formControlName=\"attributeValue\"\n                  *ngIf=\"\n                    tokenVal.get('attributeLabel').value.attributeType !=\n                      'textbox' &&\n                    tokenVal.get('attributeLabel').value.attributeType !=\n                      'dropdown' &&\n                    tokenVal.get('attributeLabel').value.attributeType ==\n                      'checkbox'\n                  \"\n                  >Select Value</mat-checkbox\n                >\n\n                <mat-form-field\n                  appearance=\"fill\"\n                  class=\"col-md-3\"\n                  *ngIf=\"\n                    tokenVal.get('attributeLabel').value.attributeType !=\n                      'textbox' &&\n                    tokenVal.get('attributeLabel').value.attributeType ==\n                      'dropdown'\n                  \"\n                >\n                  <mat-label\n                    [innerText]=\"\n                      tokenVal.get('attributeValue').value\n                        ? 'Tags'\n                        : 'Select Tag'\n                    \"\n                  ></mat-label>\n                  <mat-select formControlName=\"attributeValue\">\n                    <mat-option\n                      *ngFor=\"let tag of posTagList\"\n                      [value]=\"tag.tagsValue\"\n                    >\n                      {{ tag.tagsName }}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n\n                <mat-form-field appearance=\"fill\" class=\"col-md-3\">\n                  <mat-label\n                    [innerText]=\"\n                      tokenVal.get('wildCard').value\n                        ? 'WildCard'\n                        : 'Select a wildcard'\n                    \"\n                  ></mat-label>\n                  <mat-select formControlName=\"wildCard\">\n                    <mat-option\n                      *ngFor=\"let symbol of wildCard\"\n                      [value]=\"symbol\"\n                    >\n                      {{ symbol }}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </mat-expansion-panel>\n            </div>\n          </div>\n          <br />\n          <span>\n            <button\n              mat-raised-button\n              style=\"\n                border-radius: 5px;\n                background-color: #08509d;\n                color: white;\n                font-size: 20px;\n              \"\n              (click)=\"addToken(pattern)\"\n            >\n              <i class=\"fas fa-plus fa-1x my-float\"></i>\n            </button>\n            Add Token\n          </span>\n        </mat-card-content>\n      </mat-card>\n    </div>\n    <br />\n    <span>\n      <button\n        mat-raised-button\n        style=\"\n          border-radius: 5px;\n          background-color: #08509d;\n          color: white;\n          font-size: 16px;\n        \"\n        (click)=\"addPattern()\"\n      >\n        <i class=\"fas fa-plus fa-1x my-float\"></i>\n      </button>\n      Add Pattern\n    </span>\n  </form>\n  <br />\n  <span>\n    <button\n      id=\"taOperationsRbmSubmitBtn\"\n      mat-raised-button\n      [disabled]=\"rbmControl.invalid\"\n      (click)=\"onSubmit(rbmControl)\"\n    >\n      Submit</button\n    >&nbsp;&nbsp;<span class=\"linkText\" (click)=\"showPipelineSetting()\"\n      >Settings</span\n    >\n  </span>\n\n  <div class=\"form-group row\">\n    <div class=\"text-danger offset-2 mt-2\" *ngIf=\"showTextError\">\n      Select dataset and feature or enter the text to generate the output\n    </div>\n    <div class=\"text-danger offset-2 mt-2\" *ngIf=\"showPatternError\">\n      Add some patterns to perform rule based matching.\n    </div>\n  </div>\n\n  <br />\n  <!-- output section -->\n  <mat-card class=\"mt-3\" *ngIf=\"showOutput\" style=\"background-color: #f5f5f5\">\n    <mat-card-header>\n      <mat-card-title-group>\n        <mat-card-title>Output</mat-card-title>\n      </mat-card-title-group>\n      <div style=\"margin-left: 85%\">\n        <mat-icon\n          class=\"far fa-chart-bar\"\n          [color]=\"graphIconColor\"\n          (mouseover)=\"mouseOverGraph()\"\n          (mouseleave)=\"mouseLeaveGraph()\"\n          (click)=\"onSubmit(rbmControl, 'html')\"\n          #tooltip=\"matTooltip\"\n          matTooltip=\"Matching Visualization\"\n          matTooltipPosition=\"above\"\n          matTooltipHideDelay=\"1000\"\n          style=\"cursor: pointer; font-size: 16px\"\n        ></mat-icon>\n      </div>\n    </mat-card-header>\n    <mat-card-content class=\"mt-2\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- Matched By Column -->\n        <ng-container matColumnDef=\"matchedBy\">\n          <th mat-header-cell *matHeaderCellDef>Matched By</th>\n          <td mat-cell *matCellDef=\"let item\">{{ item.matchedBy }}</td>\n        </ng-container>\n\n        <!-- Pattern Name Column -->\n        <ng-container matColumnDef=\"matchId\">\n          <th mat-header-cell *matHeaderCellDef>Pattern Name</th>\n          <td mat-cell *matCellDef=\"let item\">{{ item.matchId }}</td>\n        </ng-container>\n\n        <!-- Matched Token/Phrase Column -->\n        <ng-container matColumnDef=\"matchedText\">\n          <th mat-header-cell *matHeaderCellDef>Matched Token/Phrase</th>\n          <td mat-cell *matCellDef=\"let item\">{{ item.matchedText }}</td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n      <!-- <p>{{ output }}</p> -->\n    </mat-card-content>\n  </mat-card>\n</mat-expansion-panel>\n","import { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subject } from 'rxjs';\nimport { DashboardService } from 'src/app/routes/dashboard/dashboard.service';\nimport { LocalStorageService } from 'src/app/shared/local-storage.service';\nimport { SpinnerService } from 'src/app/shared/spinner.service';\nimport { TaDataStoreService } from '../../ta-datastore.service';\nimport { TextAnalysisService } from '../../text-analysis.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PipelineSettingsDialogComponent } from '../../pipeline-settings-dialog/pipeline-settings-dialog.component';\nimport { UtilsService } from 'src/app/shared/utils.service';\nimport { TextAnalysisDialogComponent } from '../../text-analysis-dialog/text-analysis-dialog.component';\n\n@Component({\n  selector: 'app-rule-based-matching',\n  templateUrl: './rule-based-matching.component.html',\n  styleUrls: ['./rule-based-matching.component.scss'],\n})\nexport class RuleBasedMatchingComponent implements OnInit {\n  @Input() operation: any;\n  @Output() onRemove = new EventEmitter();\n\n  dataSource: MatTableDataSource<[]> = new MatTableDataSource();\n  displayedColumns: Array<string> = [];\n  /** Usubscription subject */\n  unsubscribe$ = new Subject<boolean>();\n  showError: boolean;\n  showOutput: boolean = false;\n  inputData: any;\n  output: any;\n  showTextError: Boolean = false;\n  project: any;\n  user: any;\n  binColor: string = 'basic';\n  rbmControl: FormGroup;\n  /**\n   * model list\n   */\n  modelsList: Array<any> = [];\n  showPatternError: boolean = false;\n  uploadModelIssueMsg: boolean = false;\n  /**\n   * tag input list\n   */\n  posTagList: any = [\n    {\n      tagsName: 'Adjective',\n      tagsValue: 'ADJ',\n    },\n    {\n      tagsName: 'Adposition',\n      tagsValue: 'ADP',\n    },\n    {\n      tagsName: 'Adverb',\n      tagsValue: 'ADV',\n    },\n    {\n      tagsName: 'Auxiliary verb',\n      tagsValue: 'AUX',\n    },\n    {\n      tagsName: 'Coordinating conjunction',\n      tagsValue: 'CONJ',\n    },\n    {\n      tagsName: 'Determiner',\n      tagsValue: 'DET',\n    },\n    {\n      tagsName: 'Interjection',\n      tagsValue: 'INTJ',\n    },\n    {\n      tagsName: 'Noun',\n      tagsValue: 'NOUN',\n    },\n    {\n      tagsName: 'Numeral',\n      tagsValue: 'NUM',\n    },\n    {\n      tagsName: 'Particle',\n      tagsValue: 'PART',\n    },\n    {\n      tagsName: 'Pronoun',\n      tagsValue: 'PRON',\n    },\n    {\n      tagsName: 'Proper noun',\n      tagsValue: 'PROPN',\n    },\n    {\n      tagsName: 'Punctuation',\n      tagsValue: 'PUNCT',\n    },\n    {\n      tagsName: 'Subordinating conjunction',\n      tagsValue: 'SCONJ',\n    },\n    {\n      tagsName: 'Symbol',\n      tagsValue: 'SYM',\n    },\n    {\n      tagsName: 'Verb',\n      tagsValue: 'VERB',\n    },\n    {\n      tagsName: 'Other',\n      tagsValue: 'X',\n    },\n  ];\n  /**\n   * token attribute list\n   */\n  attributesList: any = [\n    {\n      attributeName: 'TEXT',\n      attributeType: 'textbox',\n    },\n    {\n      attributeName: 'LOWER',\n      attributeType: 'textbox',\n    },\n    {\n      attributeName: 'IS_ALPHA',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'IS_DIGIT',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'IS_LOWER',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'IS_UPPER',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'IS_TITLE',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'IS_PUNCT',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'IS_SPACE',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'IS_STOP',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'IS_SENT_START',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'LIKE_NUM',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'LIKE_URL',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'LIKE_EMAIL',\n      attributeType: 'checkbox',\n    },\n    {\n      attributeName: 'POS',\n      attributeType: 'dropdown',\n    },\n    {\n      attributeName: 'ENT_TYPE',\n      attributeType: 'textbox',\n    },\n  ];\n  /**\n   * wildcard list\n   */\n  wildCard: Array<any> = ['!', '?', '+', '*'];\n  phrase = new FormControl('', Validators.required);\n\n  rbmPipelineSettingsList: any = [\n    {\n      pipeSettingName: 'Count matches for each pattern',\n      pipeSettingTag: 'count',\n    },\n    {\n      pipeSettingName: 'Concatenate all the matched words for each patterns',\n      pipeSettingTag: 'concat',\n    },\n    {\n      pipeSettingName: 'Keep the sentences where a match was found',\n      pipeSettingTag: 'reduce',\n    },\n  ];\n\n  patternBinColor: string = 'basic';\n  tokenBinColor: string = 'basic';\n  rbmPipelineSettingValue: any;\n  graphIconColor: string = 'basic';\n\n  constructor(\n    private _dialog: MatDialog,\n    private _dashboardService: DashboardService,\n    private _toaster: ToastrService,\n    private _localStorage: LocalStorageService,\n    private _spinner: SpinnerService,\n    private _taDataStore: TaDataStoreService,\n    private _textAnalysis: TextAnalysisService,\n    private fb: FormBuilder,\n    public _utils: UtilsService\n  ) {\n    // this._spinner.showSpinner();\n    this.project = this._localStorage.getItem('project');\n    this.user = this._localStorage.getItem('user');\n    this.displayedColumns = ['matchedBy', 'matchId', 'matchedText'];\n  }\n\n  ngOnInit(): void {\n    this.rbmControl = this.fb.group({\n      rbmModel: ['', [Validators.required]],\n      patternsArray: this.fb.array([]),\n    });\n    this.gettaModelsList('ruleBased');\n    this.setData();\n    this.inputData = this._taDataStore.getInputData(this.operation);\n    this._taDataStore.onSubmitEventSubject.subscribe((val) => {\n      this.inputData = this._taDataStore.getInputData(this.operation);\n    });\n  }\n\n  //function to set db data to component.\n  // IMP NOTE - make sure this function is at the top, other wise will give errors.\n  setData(): void {\n    let loadData = this._taDataStore.getAllOperationData();\n    loadData.forEach((loadVal) => {\n      if (loadVal.uid == this.operation.uid) {\n        if (loadVal.taskConfig.operationParameters) {\n          if (loadVal.taskConfig.operationParameters.addFeature.length) {\n            this.rbmPipelineSettingValue = loadVal.taskConfig.operationParameters.addFeature;\n          }\n          this.rbmControl.patchValue({\n            rbmModel: loadVal.taskConfig.operationParameters.model,\n          });\n          loadVal.taskConfig.operationParameters.patterns.forEach((item) => {\n            let obj = this.rbmControl.get('patternsArray') as FormArray;\n            obj.push(\n              this.fb.group({\n                name: item.name,\n                phrases: this.fb.array([]),\n                tokens: this.fb.array([]),\n              })\n            );\n            this.rbmControl.get('patternsArray')['controls'].forEach((value) => {\n              if (value.value.name === item.name) {\n                item.phrases.forEach((phrase) => {\n                  value.get('phrases').push(\n                    this.fb.group({\n                      phrase: phrase,\n                    })\n                  );\n                });\n                item.tokens.forEach((tokenVal) => {\n                  let attributeVal =\n                    this.attributesList.filter(\n                      (attrVal) => attrVal.attributeName === tokenVal.attributeLabel\n                    ) || '';\n                  value.get('tokens').push(\n                    this.fb.group({\n                      attributeLabel: attributeVal,\n                      attributeValue: tokenVal.attributeValue,\n                      wildCard: tokenVal.wildCard,\n                    })\n                  );\n                });\n              }\n            });\n          });\n        }\n      }\n    });\n  }\n\n  // function to get all the models from the tamodel db\n  gettaModelsList = (taskType: string) => {\n    let foundModel = false;\n    this._dashboardService\n      .taModel(taskType)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (taModelList: any) => {\n          this.modelsList = taModelList;\n          if (\n            this.rbmControl.value.rbmModel &&\n            this.rbmControl.value.rbmModel != 'spacy-en_core_web_sm'\n          ) {\n            this.modelsList.forEach((model) => {\n              if (\n                model.modelName === this.rbmControl.value.rbmModel ||\n                model.oldModelFileName === this.rbmControl.value.rbmModel\n              ) {\n                this.rbmControl.value.rbmModel.setValue(JSON.stringify(model));\n                foundModel = true;\n              }\n            });\n            if (!foundModel) {\n              this.uploadModelIssueMsg = true;\n            }\n          }\n          this._spinner.stopSpinner();\n        },\n        (err: Error) => {\n          this._toaster.error('Server Error', 'Text Analysis');\n          this._spinner.stopSpinner();\n        }\n      );\n  };\n\n  get patternList() {\n    return this.rbmControl.get('patternsArray') as FormArray;\n  }\n\n  addPattern() {\n    const patternCard = this.fb.group({\n      name: ['', [Validators.required]],\n      phrases: this.fb.array([]),\n      tokens: this.fb.array([]),\n    });\n\n    this.patternList.push(patternCard);\n  }\n\n  deletePattern(index) {\n    this.patternList.removeAt(index);\n  }\n\n  addPhrase(pattern) {\n    const phrase = this.fb.group({\n      phrase: '',\n    });\n    pattern.get('phrases').push(phrase);\n  }\n\n  deletePhrase(pattern, index) {\n    pattern.get('phrases').removeAt(index);\n  }\n\n  addToken(pattern) {\n    const tokenCard = this.fb.group({\n      attributeLabel: '',\n      attributeValue: '',\n      wildCard: '',\n    });\n\n    pattern.get('tokens').push(tokenCard);\n  }\n\n  deleteToken(pattern, index) {\n    pattern.get('tokens').removeAt(index);\n  }\n\n  mouseOverBin(origin?: string): void {\n    this.binColor = 'warn';\n  }\n\n  mouseLeaveBin(origin?: string): void {\n    this.binColor = 'basic';\n  }\n\n  mouseOverGraph(): void {\n    this.graphIconColor = 'primary';\n  }\n\n  mouseLeaveGraph(): void {\n    this.graphIconColor = 'basic';\n  }\n\n  /**\n   * function to remove operation\n   */\n  removeOperation(): void {\n    //Remove the operation data from data store\n    this._taDataStore.removeOperation(this.operation);\n    //Emit the remove event to parent\n    this.onRemove.emit(this.operation);\n  }\n\n  //function to open the pipeline settings dialog\n  showPipelineSetting(): void {\n    /**\n     * Opens the dialog with form\n     */\n    let pipelineSettingsDialog = this._dialog.open(PipelineSettingsDialogComponent, {\n      minWidth: '50vw',\n      maxWidth: '50vw',\n      data: {\n        list: this.rbmPipelineSettingsList,\n        selectedVal: this.rbmPipelineSettingValue,\n      },\n    });\n\n    pipelineSettingsDialog.afterClosed().subscribe((data) => {\n      if (data && this.output !== undefined) {\n        this.rbmPipelineSettingValue = data.featureArray;\n        let inputData = this._taDataStore.getSavedOperationOutput(this.operation.uid);\n        inputData.taskConfig[0].operationParameters.addFeature = this.rbmPipelineSettingValue;\n        this._taDataStore.saveOperationOutput({\n          uid: this.operation.uid,\n          operation: this.operation.operation,\n          output: this.output,\n          taskConfig: inputData.taskConfig,\n        });\n      } else if (data) {\n        this.rbmPipelineSettingValue = data.featureArray;\n      }\n    });\n  }\n\n  /**\n   * function to submit\n   * @param {*} type\n   * @param rbmFormData - formdata submited by user\n   * @returns\n   */\n  onSubmit(rbmFormData: FormGroup, type?: any): void {\n    if (!rbmFormData.value.rbmModel) {\n      this.showPatternError = true;\n      return;\n    } else if (!rbmFormData?.value?.patternsArray[0]?.name) {\n      this.showPatternError = true;\n      return;\n    } else {\n      this.showPatternError = false;\n    }\n    // remove empty fields pattern & tokens\n    let patterns = rbmFormData?.value?.patternsArray.filter((item) => {\n      if (item.name != '') {\n        if (item.phrases.length) {\n          item.phrases = item.phrases.map((phrase) => {\n            return phrase.phrase || phrase;\n          });\n        }\n        if (item.tokens.length) {\n          item.tokens = item.tokens.map((token) => {\n            return {\n              attributeLabel: token.attributeLabel.attributeName || token.attributeLabel,\n              attributeValue: token.attributeValue,\n              wildCard: token.wildCard,\n            };\n          });\n          item.tokens.filter((data) => {\n            if (\n              (data.attributeLabel != '' || data.attributeLabel.length) &&\n              (data.attributeValue != '' || data.attributeValue.length)\n            ) {\n              return data;\n            }\n          });\n        }\n        return item;\n      }\n    });\n    if (patterns == 0) {\n      this.showPatternError = true;\n      this.showOutput = false;\n      return;\n    }\n    let renderType = null;\n    if (type) {\n      renderType = type;\n    } else {\n      this._spinner.showSpinner();\n      renderType = 'table';\n    }\n    let inputData = this._taDataStore.getInputData(this.operation);\n    inputData = inputData?.output;\n    if (!inputData) {\n      this.showTextError = true;\n      this._spinner.stopSpinner();\n      return;\n    } else {\n      this.showTextError = false;\n    }\n    let modelInfo = rbmFormData.value.rbmModel;\n    if (modelInfo != 'spacy-en_core_web_sm') {\n      modelInfo = rbmFormData.value.rbmModel;\n    }\n    let taskConfig = [\n      {\n        operationName: 'ruleBasedMatching',\n        operationParameters: {\n          model: modelInfo.modelName || rbmFormData.value.rbmModel,\n          addFeature: this.rbmPipelineSettingValue || [],\n          modelPath: `./textanalysis/models/${modelInfo.modelName}`,\n          framework: modelInfo.frameWork,\n          patterns: patterns,\n          // removeFeature : vm.pipelineSetting.removeFeatureCheckBoxVal || false\n        },\n      },\n    ];\n    this._textAnalysis\n      .ruleBasedMatch(inputData, taskConfig, renderType)\n      .pipe(takeUntil(this.unsubscribe$))\n      .subscribe(\n        (res: any) => {\n          this.showOutput = true;\n          if (renderType == 'html') {\n            /**\n             * Opens the dialog with form\n             */\n            let graphViewDialog = this._dialog.open(TextAnalysisDialogComponent, {\n              width: '60%',\n              data: {\n                data: res.data.data,\n                showGraph: 'rbm',\n              },\n            });\n\n            graphViewDialog.afterClosed().subscribe((data) => {});\n          } else {\n            this.output = res.data.data;\n            this.dataSource.data = res.data.data;\n            this.dataSource._updateChangeSubscription();\n          }\n          // store the data in the temporary service\n          this._taDataStore.saveOperationOutput({\n            uid: this.operation.uid,\n            operation: this.operation.operation,\n            output: this.output,\n            taskConfig: taskConfig,\n          });\n          this._spinner.stopSpinner();\n          this._taDataStore.broadcastSubmitEvent('updateInputBar');\n          // $rootScope.$broadcast(\"onSubmit\");\n        },\n        (err: Error) => {\n          this.showOutput = false;\n          this._spinner.stopSpinner();\n          this._toaster.error('Server Error', 'Error performing rule based matching');\n          // toaster.pop('error', $scope.app.name, 'Error occured at output generation', 3000);\n        }\n      );\n  }\n}\n","import { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SharedModule } from \"src/app/shared/shared.module\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { ExperimentsListComponent } from \"./experiments-list/experiments-list.component\";\nimport { CreateExperimentComponent } from \"./create-experiment/create-experiment.component\";\nimport { ExperimentInputComponent } from \"./experiment-input/experiment-input.component\";\nimport { SortablejsModule } from \"ngx-sortablejs\";\nimport { OperationsListComponent } from \"./operations-list/operations-list.component\";\nimport { OperationsUiContainerComponent } from \"./operations-ui-container/operations-ui-container.component\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { PosTaggingComponent } from \"./operations-ui-container/pos-tagging/pos-tagging.component\";\nimport { TextSummarizationComponent } from \"./operations-ui-container/text-summarization/text-summarization.component\";\nimport { SentimentAnalysisComponent } from \"./operations-ui-container/sentiment-analysis/sentiment-analysis.component\";\nimport { NerComponent } from \"./operations-ui-container/ner/ner.component\";\nimport { WordFrequencyComponent } from \"./operations-ui-container/word-frequency/word-frequency.component\";\nimport { WordEmbeddingComponent } from \"./operations-ui-container/word-embedding/word-embedding.component\";\nimport { TextCleaningComponent } from \"./operations-ui-container/text-cleaning/text-cleaning.component\";\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { RuleBasedMatchingComponent } from \"./operations-ui-container/rule-based-matching/rule-based-matching.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { TextAnalysisDialogComponent } from \"./text-analysis-dialog/text-analysis-dialog.component\";\nimport { PipelineSettingsDialogComponent } from './pipeline-settings-dialog/pipeline-settings-dialog.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ExperimentsListComponent,\n  },\n  {\n    path: \"create-experiment\",\n    component: CreateExperimentComponent,\n  },\n];\n\n@NgModule({\n  declarations: [\n    ExperimentsListComponent,\n    CreateExperimentComponent,\n    ExperimentInputComponent,\n    OperationsListComponent,\n    OperationsUiContainerComponent,\n    PosTaggingComponent,\n    TextSummarizationComponent,\n    SentimentAnalysisComponent,\n    NerComponent,\n    WordFrequencyComponent,\n    WordEmbeddingComponent,\n    TextCleaningComponent,\n    RuleBasedMatchingComponent,\n    TextAnalysisDialogComponent,\n    PipelineSettingsDialogComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatExpansionModule,\n    MatCardModule,\n    MatSliderModule,\n    MatDialogModule,\n    SortablejsModule.forRoot({ group: \"test\" }),\n    RouterModule.forChild(routes),\n  ],\n})\nexport class TextAnalysisModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-eda-report',\n  templateUrl: './eda-report.component.html',\n  styleUrls: ['./eda-report.component.scss'],\n  // encapsulation: ViewEncapsulation.ShadowDom,\n})\nexport class EdaReportComponent implements OnInit {\n  serverBaseUrl: string = environment.serverBaseUrl;\n\n  showSpinner: boolean = true;\n  safeUrl: any;\n  edaData: any;\n\n  /**\n   * Receives the injected data in the modal\n   * @param dialogData\n   */\n  constructor(@Inject(MAT_DIALOG_DATA) private dialogData: any, private _sanitizer: DomSanitizer) {}\n\n  ngOnInit(): void {\n    this.showSpinner = true;\n    this.edaData = this.dialogData.edaReportData;\n    switch (this.dialogData.moduleName) {\n      case 'data-set':\n        this.safeUrl = this._sanitizer.bypassSecurityTrustResourceUrl(\n          `${this.serverBaseUrl}/api/v2/projects/${this.edaData.projectId}/data/${this.edaData.dataId}/report`\n        );\n        this.showSpinner = false;\n        break;\n      case 'reports':\n      case 'eda':\n        this.safeUrl = this._sanitizer.bypassSecurityTrustResourceUrl(\n          `${this.serverBaseUrl}/api/v2/projects/${this.edaData.projectId}/eda/${this.edaData.edaId}/advedainfo?currentEdaId=${this.edaData.currentEdaId}&currentPipelineFilename=${this.edaData.currentPipelineFilename}`\n        );\n        this.showSpinner = false;\n        break;\n      case 'cluster':\n        this.safeUrl = this._sanitizer.bypassSecurityTrustResourceUrl(\n          `${this.serverBaseUrl}/api/projects/${this.edaData.projectId}/clustering/visualize/scatterplot?filename=${this.edaData.fileName}`\n        );\n        this.showSpinner = false;\n        break;\n      default:\n        this.safeUrl = '';\n    }\n  }\n}\n","<mat-dialog-content style=\"max-height: 78vh !important\">\n  <app-progress-spinner class=\"spinner\" *ngIf=\"showSpinner\"></app-progress-spinner>\n  <div *ngIf=\"safeUrl\">\n    <iframe [src]=\"safeUrl\" class=\"ps-iframe-loader\"></iframe>\n  </div>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button class=\"close-btn\" mat-stroked-button mat-dialog-close>Close</button>\n</mat-dialog-actions>\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TextAnalysisService {\n  serverBaseUrl: string = environment.serverBaseUrl;\n\n  constructor(private _http: HttpClient) { }\n\n  /**\n   * fetches the list of experiments created by the user\n   * @param projectId\n   * @returns\n   */\n  experimentList(projectId: string): Observable<any> {\n    return this._http.get(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/textAnalysis/experiments`\n    );\n  }\n\n  /**\n   * fetches the text data from the respective column from respective file.\n   * @param projectId\n   * @param featureName\n   * @param fileName\n   * @returns\n   */\n  listFeatureDetails(\n    projectId: string,\n    featureName: string,\n    fileName: string\n  ): Observable<any> {\n    return this._http.get(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/textAnalysis/feature`,\n      {\n        params: { featureName: featureName, fileName: fileName },\n      }\n    );\n  }\n\n  /**\n   * deletes the experiment\n   * @param projectId\n   * @returns\n   */\n  deleteExperiment(projectId: string, experimentId: string): Observable<any> {\n    return this._http.delete(\n      `${this.serverBaseUrl}/api/v2/projects/${projectId}/textAnalysis/experiments`,\n      { params: { experimentId: experimentId } }\n    );\n  }\n\n  /**\n   * Fetches the taexperiment details\n   * @param taExperimentId\n   * @returns\n   */\n  taExperiment(taExperimentId: string): Observable<any> {\n    return this._http.get(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/${taExperimentId}`\n    );\n  }\n\n  textCleaning(inputData: any, taskConfig: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/textCleaning`,\n      {\n        data: inputData,\n        taskConfig: taskConfig,\n      }\n    );\n  }\n\n  pos(inputData: any, taskConfig: any, renderType: any) {\n    return this._http.post(`${this.serverBaseUrl}/api/v2/textAnalysis/pos`, {\n      data: inputData,\n      taskConfig: taskConfig,\n      renderType: renderType,\n    });\n  }\n\n  ner(inputData: any, taskConfig: any, renderType: any) {\n    return this._http.post(`${this.serverBaseUrl}/api/v2/textAnalysis/ner`, {\n      data: inputData,\n      taskConfig: taskConfig,\n      renderType: renderType,\n    });\n  }\n\n  sentimentAnalysis(sentimentAnalysisParams: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/sentimentAnalysis`,\n      {\n        data: sentimentAnalysisParams.data,\n        taskConfig: sentimentAnalysisParams.taskConfig,\n      }\n    );\n  }\n\n  textSummarization(summarizeParam: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/textSummarization`,\n      {\n        data: summarizeParam.data,\n        taskConfig: summarizeParam.taskConfig,\n      }\n    );\n  }\n\n  wordFrequency(configData: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/wordFrequency`,\n      {\n        data: configData,\n      }\n    );\n  }\n\n  wordEmbedding(wordEmbeddingParam: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/wordEmbedding`,\n      {\n        data: wordEmbeddingParam.data,\n        taskConfig: wordEmbeddingParam.taskConfig,\n      }\n    );\n  }\n\n  ruleBasedMatch(inputData: any, taskConfig: any, renderType: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/ruleBasedMatch`,\n      {\n        data: inputData,\n        taskConfig: taskConfig,\n        renderType: renderType,\n      }\n    );\n  }\n\n  saveTextAnalysis(dataConfig: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/saveAnalysis`,\n      { ...dataConfig }\n    );\n  }\n\n  saveApplyTextAnalysis(dataConfig: any) {\n    return this._http.post(\n      `${this.serverBaseUrl}/api/v2/textAnalysis/apply/saveAnalysis`,\n      { ...dataConfig }\n    );\n  }\n}\n","import { OnInit, OnChanges, Directive, Input, SimpleChange, ElementRef } from '@angular/core';\r\n\r\ndeclare var $: any;\r\nconst EasyPieChart = require('easy-pie-chart');\r\n\r\n@Directive({\r\n    selector: '[easypiechart]'\r\n})\r\nexport class EasypiechartDirective implements OnInit, OnChanges {\r\n\r\n    /**\r\n     * default easy pie chart options\r\n     * @type {Object}\r\n     */\r\n    public defaultOptions = {\r\n        barColor: '#ef1e25',\r\n        trackColor: '#f9f9f9',\r\n        scaleColor: '#dfe0e0',\r\n        scaleLength: 5,\r\n        lineCap: 'round',\r\n        lineWidth: 3,\r\n        size: 110,\r\n        rotate: 0,\r\n        animate: {\r\n            duration: 1000,\r\n            enabled: true\r\n        }\r\n    };\r\n\r\n    public pieChart: any;\r\n    @Input() percent;\r\n    @Input() options;\r\n\r\n    constructor(public element: ElementRef) {\r\n        this.percent = this.percent || 0;\r\n        this.options = $.extend({}, this.defaultOptions, this.options);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if(EasyPieChart) {\r\n            this.pieChart = new EasyPieChart(this.element.nativeElement, this.options);\r\n            this.pieChart.update(this.percent);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n        if (this.pieChart && changes['percent']) {\r\n            this.pieChart.update(this.percent);\r\n        }\r\n    }\r\n\r\n}\r\n"]}